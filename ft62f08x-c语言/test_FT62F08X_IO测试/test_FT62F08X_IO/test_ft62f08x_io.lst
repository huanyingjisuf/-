

GNU Macro Assembler for 8 bit devices.       
                                                                                               Fri Oct 29 13:45:06 2021

GNU C Code Generator                                                 
     1                           	processor	FT62F08X
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	_ad3nop_text,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	intentry,global,class=CODE,delta=2
     8                           	psect	pa_nodes0,global,class=CODE,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 1.45
    12                           ; Generated 16/11/2017 
    13                           ; 
    14                           ; SFR Addresses
    15  0003                     _ad3nop_absaddr	set	3
    16  0003                     _ad3nop_absaddr	set	3
    17                           
    18                           	psect	_ad3nop_text
    19  0003                     __p_ad3nop_text:	
    20  0003                     _ad3nop:	
    21  0003  3400               	retlw	0
    22  0004                     __end_of_ad3nop:	
    23  000F                     _PORTD	set	15
    24  000E                     _PORTC	set	14
    25  000D                     _PORTB	set	13
    26  000C                     _PORTA	set	12
    27  000B                     _INTCON	set	11
    28  0073                     _PC3	set	115
    29  006B                     _PB3	set	107
    30  0099                     _OSCCON	set	153
    31  008F                     _TRISD	set	143
    32  008E                     _TRISC	set	142
    33  008D                     _TRISB	set	141
    34  008C                     _TRISA	set	140
    35  011B                     _PSRC1	set	283
    36  011A                     _PSRC0	set	282
    37  019D                     _PSINK3	set	413
    38  019C                     _PSINK2	set	412
    39  019B                     _PSINK1	set	411
    40  019A                     _PSINK0	set	410
    41  0197                     _ANSELA	set	407
    42  018F                     _WPUD	set	399
    43  018E                     _WPUC	set	398
    44  018D                     _WPUB	set	397
    45  018C                     _WPUA	set	396
    46  020F                     _WPDD	set	527
    47  020E                     _WPDC	set	526
    48  020D                     _WPDB	set	525
    49  020C                     _WPDA	set	524
    50                           
    51                           	psect	cinit
    52  000A                     start_initialization:	
    53                           ; #config settings
    54                           
    55  000A                     __initialization:	
    56  000A                     end_of_initialization:	
    57                           ;End of C runtime variable initialization code
    58                           
    59  000A                     __end_of__initialization:	
    60  000A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
    61  000B  0020               	movlb	0
    62  000C  280D               	ljmp	_main	;jump to C main() function
    63  000D                     __pmaintext:	
    64                           ; 1 bytes @ 0x5
    65 ;;
    66 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    67 ;;
    68 ;; *************** function _main *****************
    69 ;; Defined at:
    70 ;;		line 105 in file "test_FT62F08X_IO.C"
    71 ;; Parameters:    Size  Location     Type
    72 ;;		None
    73 ;; Auto vars:     Size  Location     Type
    74 ;;		None
    75 ;; Return value:  Size  Location     Type
    76 ;;                  1    wreg      void 
    77 ;; Registers used:
    78 ;;		wreg, status,2, status,0, pclath, cstack
    79 ;; Tracked objects:
    80 ;;		On entry : B1F/0
    81 ;;		On exit  : 0/0
    82 ;;		Unchanged: 0/0
    83 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
    84 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
    85 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
    86 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
    87 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
    88 ;;Total ram usage:        0 bytes
    89 ;; Hardware stack levels required when called:    3
    90 ;; This function calls:
    91 ;;		_DelayMs
    92 ;;		_POWER_INITIAL
    93 ;; This function is called by:
    94 ;;		Startup code after reset
    95 ;; This function uses a non-reentrant model
    96 ;;
    97                           
    98                           
    99                           ;psect for function _main
   100  000D                     _main:	
   101                           
   102                           ;test_FT62F08X_IO.C: 107: POWER_INITIAL();
   103                           
   104                           ;incstack = 0
   105                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   106  000D  2035  3180         	fcall	_POWER_INITIAL
   107  000F                     l2833:	
   108                           
   109                           ;test_FT62F08X_IO.C: 109: {
   110                           ;test_FT62F08X_IO.C: 110: PB3 = 1;
   111  000F  0020               	movlb	0	; select bank0
   112  0010  158D               	bsf	13,3	;volatile
   113                           
   114                           ;test_FT62F08X_IO.C: 111: DelayMs(10);
   115  0011  300A               	movlw	10
   116  0012  201B  3180         	fcall	_DelayMs
   117                           
   118                           ;test_FT62F08X_IO.C: 112: if(PC3 == 1)
   119  0014  0020               	movlb	0	; select bank0
   120  0015  198E               	btfsc	14,3	;volatile
   121                           
   122                           ;test_FT62F08X_IO.C: 113: {
   123                           ;test_FT62F08X_IO.C: 114: PB3 = 0;
   124  0016  118D               	bcf	13,3	;volatile
   125                           
   126                           ;test_FT62F08X_IO.C: 115: }
   127                           ;test_FT62F08X_IO.C: 116: DelayMs(10);
   128  0017  300A               	movlw	10
   129  0018  201B  3180         	fcall	_DelayMs
   130  001A  280F               	goto	l2833
   131  001B                     __end_of_main:	
   132  001B                     __ptext2:	
   133 ;; *************** function _DelayMs *****************
   134 ;; Defined at:
   135 ;;		line 88 in file "test_FT62F08X_IO.C"
   136 ;; Parameters:    Size  Location     Type
   137 ;;  Time            1    wreg     unsigned char 
   138 ;; Auto vars:     Size  Location     Type
   139 ;;  Time            1    2[COMMON] unsigned char 
   140 ;;  b               1    4[COMMON] unsigned char 
   141 ;;  a               1    3[COMMON] unsigned char 
   142 ;; Return value:  Size  Location     Type
   143 ;;                  1    wreg      void 
   144 ;; Registers used:
   145 ;;		wreg, status,2, status,0, pclath, cstack
   146 ;; Tracked objects:
   147 ;;		On entry : 1F/0
   148 ;;		On exit  : 0/0
   149 ;;		Unchanged: 0/0
   150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   152 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   154 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   155 ;;Total ram usage:        3 bytes
   156 ;; Hardware stack levels used:    1
   157 ;; Hardware stack levels required when called:    2
   158 ;; This function calls:
   159 ;;		_DelayUs
   160 ;; This function is called by:
   161 ;;		_main
   162 ;; This function uses a non-reentrant model
   163 ;;
   164                           
   165                           
   166                           ;psect for function _DelayMs
   167  001B                     _DelayMs:	
   168                           
   169                           ;incstack = 0
   170                           ; Regs used in _DelayMs: [wreg+status,2+status,0+pclath+cstack]
   171                           ;DelayMs@Time stored from wreg
   172  001B  00F2               	movwf	DelayMs@Time
   173                           
   174                           ;test_FT62F08X_IO.C: 90: unsigned char a,b;
   175                           ;test_FT62F08X_IO.C: 91: for(a=0;a<Time;a++)
   176  001C  01F3               	clrf	DelayMs@a
   177  001D                     l2829:	
   178  001D  0872               	movf	DelayMs@Time,w
   179  001E  0273               	subwf	DelayMs@a,w
   180  001F  1803               	btfsc	3,0
   181  0020  0008               	return
   182                           
   183                           ;test_FT62F08X_IO.C: 92: {
   184                           ;test_FT62F08X_IO.C: 93: for(b=0;b<5;b++)
   185  0021  01F4               	clrf	DelayMs@b
   186  0022                     l2821:	
   187                           
   188                           ;test_FT62F08X_IO.C: 94: {
   189                           ;test_FT62F08X_IO.C: 95: DelayUs(197);
   190  0022  30C5               	movlw	197
   191  0023  202C  3180         	fcall	_DelayUs
   192  0025  3005               	movlw	5
   193  0026  0AF4               	incf	DelayMs@b,f
   194  0027  0274               	subwf	DelayMs@b,w
   195  0028  1C03               	skipc
   196  0029  2822               	goto	l2821
   197  002A  0AF3               	incf	DelayMs@a,f
   198  002B  281D               	goto	l2829
   199  002C                     __end_of_DelayMs:	
   200  002C                     __ptext3:	
   201 ;; *************** function _DelayUs *****************
   202 ;; Defined at:
   203 ;;		line 74 in file "test_FT62F08X_IO.C"
   204 ;; Parameters:    Size  Location     Type
   205 ;;  Time            1    wreg     unsigned char 
   206 ;; Auto vars:     Size  Location     Type
   207 ;;  Time            1    0[COMMON] unsigned char 
   208 ;;  a               1    1[COMMON] unsigned char 
   209 ;; Return value:  Size  Location     Type
   210 ;;                  1    wreg      void 
   211 ;; Registers used:
   212 ;;		wreg, status,2, status,0
   213 ;; Tracked objects:
   214 ;;		On entry : 0/0
   215 ;;		On exit  : 0/0
   216 ;;		Unchanged: 0/0
   217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   219 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   221 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   222 ;;Total ram usage:        2 bytes
   223 ;; Hardware stack levels used:    1
   224 ;; Hardware stack levels required when called:    1
   225 ;; This function calls:
   226 ;;		Nothing
   227 ;; This function is called by:
   228 ;;		_DelayMs
   229 ;; This function uses a non-reentrant model
   230 ;;
   231                           
   232                           
   233                           ;psect for function _DelayUs
   234  002C                     _DelayUs:	
   235                           
   236                           ;incstack = 0
   237                           ; Regs used in _DelayUs: [wreg+status,2+status,0]
   238                           ;DelayUs@Time stored from wreg
   239  002C  00F0               	movwf	DelayUs@Time
   240                           
   241                           ;test_FT62F08X_IO.C: 76: unsigned char a;
   242                           ;test_FT62F08X_IO.C: 77: for(a=0;a<Time;a++)
   243  002D  01F1               	clrf	DelayUs@a
   244  002E                     l2765:	
   245  002E  0870               	movf	DelayUs@Time,w
   246  002F  0271               	subwf	DelayUs@a,w
   247  0030  1803               	btfsc	3,0
   248  0031  0008               	return
   249                           
   250                           ;test_FT62F08X_IO.C: 78: {
   251                           ;test_FT62F08X_IO.C: 79: __nop();
   252  0032  0000               	nop
   253  0033  0AF1               	incf	DelayUs@a,f
   254  0034  282E               	goto	l2765
   255  0035                     __end_of_DelayUs:	
   256  0035                     __ptext1:	
   257 ;; *************** function _POWER_INITIAL *****************
   258 ;; Defined at:
   259 ;;		line 34 in file "test_FT62F08X_IO.C"
   260 ;; Parameters:    Size  Location     Type
   261 ;;		None
   262 ;; Auto vars:     Size  Location     Type
   263 ;;		None
   264 ;; Return value:  Size  Location     Type
   265 ;;                  1    wreg      void 
   266 ;; Registers used:
   267 ;;		wreg, status,2
   268 ;; Tracked objects:
   269 ;;		On entry : B1F/0
   270 ;;		On exit  : B1F/3
   271 ;;		Unchanged: B00/0
   272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   277 ;;Total ram usage:        0 bytes
   278 ;; Hardware stack levels used:    1
   279 ;; Hardware stack levels required when called:    1
   280 ;; This function calls:
   281 ;;		Nothing
   282 ;; This function is called by:
   283 ;;		_main
   284 ;; This function uses a non-reentrant model
   285 ;;
   286                           
   287                           
   288                           ;psect for function _POWER_INITIAL
   289  0035                     _POWER_INITIAL:	
   290                           
   291                           ;test_FT62F08X_IO.C: 36: OSCCON = 0B01110001;
   292                           
   293                           ;incstack = 0
   294                           ; Regs used in _POWER_INITIAL: [wreg+status,2]
   295  0035  3071               	movlw	113
   296  0036  0021               	movlb	1	; select bank1
   297  0037  0099               	movwf	25	;volatile
   298                           
   299                           ;test_FT62F08X_IO.C: 37: INTCON = 0;
   300  0038  018B               	clrf	11	;volatile
   301                           
   302                           ;test_FT62F08X_IO.C: 39: PORTA = 0B00000000;
   303  0039  0020               	movlb	0	; select bank0
   304  003A  018C               	clrf	12	;volatile
   305                           
   306                           ;test_FT62F08X_IO.C: 40: TRISA = 0B00000000;
   307  003B  0021               	movlb	1	; select bank1
   308  003C  018C               	clrf	12	;volatile
   309                           
   310                           ;test_FT62F08X_IO.C: 41: PORTB = 0B00000000;
   311  003D  0020               	movlb	0	; select bank0
   312  003E  018D               	clrf	13	;volatile
   313                           
   314                           ;test_FT62F08X_IO.C: 42: TRISB = 0B00000000;
   315  003F  0021               	movlb	1	; select bank1
   316  0040  018D               	clrf	13	;volatile
   317                           
   318                           ;test_FT62F08X_IO.C: 43: PORTC = 0B00000000;
   319  0041  0020               	movlb	0	; select bank0
   320  0042  018E               	clrf	14	;volatile
   321                           
   322                           ;test_FT62F08X_IO.C: 44: TRISC = 0B00001000;
   323  0043  3008               	movlw	8
   324  0044  0021               	movlb	1	; select bank1
   325  0045  008E               	movwf	14	;volatile
   326                           
   327                           ;test_FT62F08X_IO.C: 45: PORTD = 0B00000000;
   328  0046  0020               	movlb	0	; select bank0
   329  0047  018F               	clrf	15	;volatile
   330                           
   331                           ;test_FT62F08X_IO.C: 46: TRISD = 0B00000000;
   332  0048  0021               	movlb	1	; select bank1
   333  0049  018F               	clrf	15	;volatile
   334                           
   335                           ;test_FT62F08X_IO.C: 48: WPUA = 0B00000000;
   336  004A  0023               	movlb	3	; select bank3
   337  004B  018C               	clrf	12	;volatile
   338                           
   339                           ;test_FT62F08X_IO.C: 49: WPUB = 0B00000000;
   340  004C  018D               	clrf	13	;volatile
   341                           
   342                           ;test_FT62F08X_IO.C: 50: WPUC = 0B00001000;
   343  004D  008E               	movwf	14	;volatile
   344                           
   345                           ;test_FT62F08X_IO.C: 51: WPUD = 0B00000000;
   346  004E  018F               	clrf	15	;volatile
   347                           
   348                           ;test_FT62F08X_IO.C: 53: WPDA = 0B00000000;
   349  004F  0024               	movlb	4	; select bank4
   350  0050  018C               	clrf	12	;volatile
   351                           
   352                           ;test_FT62F08X_IO.C: 54: WPDB = 0B00000000;
   353  0051  018D               	clrf	13	;volatile
   354                           
   355                           ;test_FT62F08X_IO.C: 55: WPDC = 0B00000000;
   356  0052  018E               	clrf	14	;volatile
   357                           
   358                           ;test_FT62F08X_IO.C: 56: WPDD = 0B00000000;
   359  0053  018F               	clrf	15	;volatile
   360                           
   361                           ;test_FT62F08X_IO.C: 58: PSRC0 = 0B11111111;
   362  0054  30FF               	movlw	255
   363  0055  0022               	movlb	2	; select bank2
   364  0056  009A               	movwf	26	;volatile
   365                           
   366                           ;test_FT62F08X_IO.C: 59: PSRC1 = 0B11111111;
   367  0057  009B               	movwf	27	;volatile
   368                           
   369                           ;test_FT62F08X_IO.C: 61: PSINK0 = 0B11111111;
   370  0058  0023               	movlb	3	; select bank3
   371  0059  009A               	movwf	26	;volatile
   372                           
   373                           ;test_FT62F08X_IO.C: 62: PSINK1 = 0B11111111;
   374  005A  009B               	movwf	27	;volatile
   375                           
   376                           ;test_FT62F08X_IO.C: 63: PSINK2 = 0B11111111;
   377  005B  009C               	movwf	28	;volatile
   378                           
   379                           ;test_FT62F08X_IO.C: 64: PSINK3 = 0B11111111;
   380  005C  009D               	movwf	29	;volatile
   381                           
   382                           ;test_FT62F08X_IO.C: 66: ANSELA = 0B00000000;
   383  005D  0197               	clrf	23	;volatile
   384  005E  0008               	return
   385  005F                     __end_of_POWER_INITIAL:	
   386                           
   387                           	psect	cstackCOMMON
   388  0070                     __pcstackCOMMON:	
   389  0070                     ?_ISR:	
   390  0070                     ??_ISR:	
   391                           ; 1 bytes @ 0x0
   392                           
   393  0070                     ?_POWER_INITIAL:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0070                     ??_POWER_INITIAL:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0070                     ?_DelayUs:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     ??_DelayUs:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ?_DelayMs:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_main:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     DelayUs@Time:	
   412                           ; 1 bytes @ 0x0
   413                           
   414                           
   415                           ; 1 bytes @ 0x0
   416  0070                     	ds	1
   417  0071                     DelayUs@a:	
   418                           
   419                           ; 1 bytes @ 0x1
   420  0071                     	ds	1
   421  0072                     ??_DelayMs:	
   422  0072                     DelayMs@Time:	
   423                           ; 1 bytes @ 0x2
   424                           
   425                           
   426                           ; 1 bytes @ 0x2
   427  0072                     	ds	1
   428  0073                     DelayMs@a:	
   429                           
   430                           ; 1 bytes @ 0x3
   431  0073                     	ds	1
   432  0074                     DelayMs@b:	
   433                           
   434                           ; 1 bytes @ 0x4
   435  0074                     	ds	1
   436  0075                     ??_main:	
   437                           
   438                           	psect	intentry
   439  0004                     __pintentry:	
   440 ;; *************** function _ISR *****************
   441 ;; Defined at:
   442 ;;		line 24 in file "test_FT62F08X_IO.C"
   443 ;; Parameters:    Size  Location     Type
   444 ;;		None
   445 ;; Auto vars:     Size  Location     Type
   446 ;;		None
   447 ;; Return value:  Size  Location     Type
   448 ;;                  1    wreg      void 
   449 ;; Registers used:
   450 ;;		None
   451 ;; Tracked objects:
   452 ;;		On entry : 0/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   460 ;;Total ram usage:        0 bytes
   461 ;; Hardware stack levels used:    1
   462 ;; This function calls:
   463 ;;		Nothing
   464 ;; This function is called by:
   465 ;;		Interrupt level 1
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469  0004                     _ISR:	
   470                           
   471                           ;incstack = 0
   472  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   473                           
   474                           ; Regs used in _ISR: []
   475  0005  3180               	pagesel	$
   476  0006  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   477  0007  0009               	retfie
   478  0008                     __end_of_ISR:	
   479  007E                     btemp	set	126	;btemp
   480  007E                     int$flags	set	126
   481  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_DelayMs
    _DelayMs->_DelayUs

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      90
                            _DelayMs
                      _POWER_INITIAL
 ---------------------------------------------------------------------------------
 (1) _POWER_INITIAL                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DelayMs                                              3     3      0      90
                                              2 COMMON     3     3      0
                            _DelayUs
 ---------------------------------------------------------------------------------
 (2) _DelayUs                                              2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayMs
     _DelayUs
   _POWER_INITIAL

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       5       2       35.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


GNU Macro Assembler for 8 bit devices.     
Symbol Table                                                                                   Fri Oct 29 13:45:06 2021

                    _PB3 006B                      _PC3 0073                      _ISR 0004  
                   ?_ISR 0070                     l2821 0022                     l2833 000F  
                   l2765 002E                     l2829 001D                     _WPDA 020C  
                   _WPDB 020D                     _WPDC 020E                     _WPDD 020F  
                   _WPUA 018C                     _WPUB 018D                     _WPUC 018E  
                   _WPUD 018F           _ad3nop_absaddr 0003                     _main 000D  
                   btemp 007E                     start 0008          __end_of_DelayMs 002C  
        __end_of_DelayUs 0035                    ??_ISR 0070                    ?_main 0070  
                  _PSRC0 011A                    _PSRC1 011B                    _PORTA 000C  
                  _PORTB 000D                    _PORTC 000E                    _PORTD 000F  
                  _TRISA 008C                    _TRISB 008D                    _TRISC 008E  
                  _TRISD 008F                    wtemp0 007E          __initialization 000A  
           __end_of_main 001B                   ??_main 0075                   _ANSELA 0197  
                 _INTCON 000B                ??_DelayMs 0072                ??_DelayUs 0070  
                 _OSCCON 0099                   _PSINK0 019A                   _PSINK1 019B  
                 _PSINK2 019C                   _PSINK3 019D                   _ad3nop 0003  
  __end_of_POWER_INITIAL 005F  __end_of__initialization 000A           __pcstackCOMMON 0070  
             __pmaintext 000D               __pintentry 0004                  _DelayMs 001B  
                _DelayUs 002C                  __ptext1 0035                  __ptext2 001B  
                __ptext3 002C             __size_of_ISR 0004     end_of_initialization 000A  
         __end_of_ad3nop 0004      start_initialization 000A           __p_ad3nop_text 0003  
            __end_of_ISR 0008   __size_of_POWER_INITIAL 002A                ___latbits 0002  
               ?_DelayMs 0070                 ?_DelayUs 0070            _POWER_INITIAL 0035  
               DelayMs@a 0073                 DelayMs@b 0074                 DelayUs@a 0071  
            DelayMs@Time 0072           ?_POWER_INITIAL 0070              DelayUs@Time 0070  
       __size_of_DelayMs 0011         __size_of_DelayUs 0009            __size_of_main 000E  
               int$flags 007E          ??_POWER_INITIAL 0070                 intlevel1 0000  
