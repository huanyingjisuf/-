

GNU Macro Assembler for 8 bit devices.       
                                                                                               Tue Nov 16 17:58:57 2021

GNU C Code Generator                                                 
     1                           	processor	FT62F08X
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	_ad3nop_text,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	intentry,global,class=CODE,delta=2
     9                           	psect	pa_nodes0,global,class=CODE,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 1.45
    13                           ; Generated 16/11/2017 
    14                           ; 
    15                           ; SFR Addresses
    16  0003                     _ad3nop_absaddr	set	3
    17  0003                     _ad3nop_absaddr	set	3
    18                           
    19                           	psect	_ad3nop_text
    20  0003                     __p_ad3nop_text:	
    21  0003                     _ad3nop:	
    22  0003  3400               	retlw	0
    23  0004                     __end_of_ad3nop:	
    24  001E                     _SPISTAT	set	30
    25  001D                     _SPICTRL2	set	29
    26  001C                     _SPIIER	set	28
    27  001B                     _SPITXCRC	set	27
    28  001A                     _SPIRXCRC	set	26
    29  0018                     _SPISCR	set	24
    30  0017                     _SPICFG	set	23
    31  0016                     _SPICTRL	set	22
    32  0015                     _SPIDATA	set	21
    33  000F                     _PORTD	set	15
    34  000E                     _PORTC	set	14
    35  000D                     _PORTB	set	13
    36  000C                     _PORTA	set	12
    37  000B                     _INTCON	set	11
    38  00BF                     _BUSY	set	191
    39  00B8                     _RXBMT	set	184
    40  00B2                     _NSSM0	set	178
    41  00B0                     _SPIEN	set	176
    42  009A                     _PCKEN	set	154
    43  0099                     _OSCCON	set	153
    44  008F                     _TRISD	set	143
    45  008E                     _TRISC	set	142
    46  008D                     _TRISB	set	141
    47  008C                     _TRISA	set	140
    48  011B                     _PSRC1	set	283
    49  011A                     _PSRC0	set	282
    50  019D                     _PSINK3	set	413
    51  019C                     _PSINK2	set	412
    52  019B                     _PSINK1	set	411
    53  019A                     _PSINK0	set	410
    54  0197                     _ANSELA	set	407
    55  018F                     _WPUD	set	399
    56  018E                     _WPUC	set	398
    57  018D                     _WPUB	set	397
    58  018C                     _WPUA	set	396
    59  020F                     _WPDD	set	527
    60  020E                     _WPDC	set	526
    61  020D                     _WPDB	set	525
    62  020C                     _WPDA	set	524
    63                           
    64                           	psect	cinit
    65  000A                     start_initialization:	
    66                           ; #config settings
    67                           
    68  000A                     __initialization:	
    69                           
    70                           ; Clear objects allocated to COMMON
    71  000A  01F6               	clrf	__pbssCOMMON& (0+127)
    72  000B  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
    73  000C                     end_of_initialization:	
    74                           ;End of C runtime variable initialization code
    75                           
    76  000C                     __end_of__initialization:	
    77  000C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
    78  000D  0020               	movlb	0
    79  000E  280F               	ljmp	_main	;jump to C main() function
    80  000F                     __pmaintext:	
    81                           ; 1 bytes @ 0x6
    82 ;;
    83 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    84 ;;
    85 ;; *************** function _main *****************
    86 ;; Defined at:
    87 ;;		line 290 in file "test_FT62F08X_SPI.C"
    88 ;; Parameters:    Size  Location     Type
    89 ;;		None
    90 ;; Auto vars:     Size  Location     Type
    91 ;;		None
    92 ;; Return value:  Size  Location     Type
    93 ;;                  1    wreg      void 
    94 ;; Registers used:
    95 ;;		wreg, status,2, status,0, pclath, cstack
    96 ;; Tracked objects:
    97 ;;		On entry : B1F/0
    98 ;;		On exit  : 0/0
    99 ;;		Unchanged: 0/0
   100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   105 ;;Total ram usage:        0 bytes
   106 ;; Hardware stack levels required when called:    4
   107 ;; This function calls:
   108 ;;		_POWER_INITIAL
   109 ;;		_SPI_INITIAL
   110 ;;		_SPI_Read
   111 ;;		_SPI_Write
   112 ;; This function is called by:
   113 ;;		Startup code after reset
   114 ;; This function uses a non-reentrant model
   115 ;;
   116                           
   117                           
   118                           ;psect for function _main
   119  000F                     _main:	
   120                           
   121                           ;test_FT62F08X_SPI.C: 292: SPIReadData=0;
   122                           
   123                           ;incstack = 0
   124                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   125  000F  01F7               	clrf	_SPIReadData	;volatile
   126                           
   127                           ;test_FT62F08X_SPI.C: 293: SPIReadData1=0;
   128  0010  01F6               	clrf	_SPIReadData1	;volatile
   129                           
   130                           ;test_FT62F08X_SPI.C: 294: POWER_INITIAL();
   131  0011  2077  3180         	fcall	_POWER_INITIAL
   132                           
   133                           ;test_FT62F08X_SPI.C: 295: SPI_INITIAL();
   134  0013  20A1  3180         	fcall	_SPI_INITIAL
   135                           
   136                           ;test_FT62F08X_SPI.C: 297: SPI_Write(0x0013,0x55);
   137  0015  3013               	movlw	19
   138  0016  00F3               	movwf	SPI_Write@addr
   139  0017  3055               	movlw	85
   140  0018  01F4               	clrf	SPI_Write@addr+1
   141  0019  00F5               	movwf	SPI_Write@dat
   142  001A  2046  3180         	fcall	_SPI_Write
   143                           
   144                           ;test_FT62F08X_SPI.C: 298: SPI_Write(0x0014,0x88);
   145  001C  3014               	movlw	20
   146  001D  00F3               	movwf	SPI_Write@addr
   147  001E  3088               	movlw	136
   148  001F  01F4               	clrf	SPI_Write@addr+1
   149  0020  00F5               	movwf	SPI_Write@dat
   150  0021  2046  3180         	fcall	_SPI_Write
   151                           
   152                           ;test_FT62F08X_SPI.C: 300: SPIReadData = SPI_Read(0x0013);
   153  0023  3013               	movlw	19
   154  0024  00F3               	movwf	SPI_Read@addr
   155  0025  01F4               	clrf	SPI_Read@addr+1
   156  0026  2032  3180         	fcall	_SPI_Read
   157  0028  00F7               	movwf	_SPIReadData	;volatile
   158                           
   159                           ;test_FT62F08X_SPI.C: 301: __nop();
   160  0029  0000               	nop
   161                           
   162                           ;test_FT62F08X_SPI.C: 302: SPIReadData1 = SPI_Read(0x0014);
   163  002A  3014               	movlw	20
   164  002B  00F3               	movwf	SPI_Read@addr
   165  002C  01F4               	clrf	SPI_Read@addr+1
   166  002D  2032  3180         	fcall	_SPI_Read
   167  002F  00F6               	movwf	_SPIReadData1	;volatile
   168  0030                     l2973:	
   169                           
   170                           ;test_FT62F08X_SPI.C: 305: {
   171                           ;test_FT62F08X_SPI.C: 306: __nop();
   172  0030  0000               	nop
   173  0031  2830               	goto	l2973
   174  0032                     __end_of_main:	
   175  0032                     __ptext4:	
   176 ;; *************** function _SPI_Read *****************
   177 ;; Defined at:
   178 ;;		line 138 in file "test_FT62F08X_SPI.C"
   179 ;; Parameters:    Size  Location     Type
   180 ;;  addr            2    3[COMMON] unsigned int 
   181 ;; Auto vars:     Size  Location     Type
   182 ;;  spidata         1    5[COMMON] unsigned char 
   183 ;; Return value:  Size  Location     Type
   184 ;;                  1    wreg      unsigned char 
   185 ;; Registers used:
   186 ;;		wreg, status,2, status,0, pclath, cstack
   187 ;; Tracked objects:
   188 ;;		On entry : 0/0
   189 ;;		On exit  : 1F/0
   190 ;;		Unchanged: 0/0
   191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   193 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   195 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   196 ;;Total ram usage:        3 bytes
   197 ;; Hardware stack levels used:    1
   198 ;; Hardware stack levels required when called:    3
   199 ;; This function calls:
   200 ;;		_SPI_RW
   201 ;;		_SPI_ReadStatus
   202 ;; This function is called by:
   203 ;;		_main
   204 ;; This function uses a non-reentrant model
   205 ;;
   206                           
   207                           
   208                           ;psect for function _SPI_Read
   209  0032                     _SPI_Read:	
   210  0032                     l2933:	
   211                           ;test_FT62F08X_SPI.C: 140: unsigned char spidata;
   212                           ;test_FT62F08X_SPI.C: 141: while(SPI_ReadStatus()&0x01);
   213                           
   214                           ;incstack = 0
   215                           ; Regs used in _SPI_Read: [wreg+status,2+status,0+pclath+cstack]
   216                           
   217  0032  206D  3180         	fcall	_SPI_ReadStatus
   218  0034  3901               	andlw	1
   219  0035  1D03               	btfss	3,2
   220  0036  2832               	goto	l2933
   221                           
   222                           ;test_FT62F08X_SPI.C: 142: NSSM0=0;
   223  0037  1116               	bcf	22,2	;volatile
   224                           
   225                           ;test_FT62F08X_SPI.C: 143: SPI_RW(0x03);
   226  0038  3003               	movlw	3
   227  0039  2063  3180         	fcall	_SPI_RW
   228                           
   229                           ;test_FT62F08X_SPI.C: 144: SPI_RW((unsigned char)((addr)>>8));
   230  003B  0874               	movf	SPI_Read@addr+1,w
   231  003C  2063  3180         	fcall	_SPI_RW
   232                           
   233                           ;test_FT62F08X_SPI.C: 145: SPI_RW((unsigned char)addr);
   234  003E  0873               	movf	SPI_Read@addr,w
   235  003F  2063  3180         	fcall	_SPI_RW
   236                           
   237                           ;test_FT62F08X_SPI.C: 146: spidata = SPI_RW(0x00);
   238  0041  3000               	movlw	0
   239  0042  2063               	fcall	_SPI_RW
   240  0043  00F5               	movwf	SPI_Read@spidata
   241                           
   242                           ;test_FT62F08X_SPI.C: 147: NSSM0=1;
   243  0044  1516               	bsf	22,2	;volatile
   244                           
   245                           ;test_FT62F08X_SPI.C: 148: return spidata;
   246  0045  0008               	return
   247  0046                     __end_of_SPI_Read:	
   248  0046                     __ptext1:	
   249 ;; *************** function _SPI_Write *****************
   250 ;; Defined at:
   251 ;;		line 155 in file "test_FT62F08X_SPI.C"
   252 ;; Parameters:    Size  Location     Type
   253 ;;  addr            2    3[COMMON] unsigned int 
   254 ;;  dat             1    5[COMMON] unsigned char 
   255 ;; Auto vars:     Size  Location     Type
   256 ;;		None
   257 ;; Return value:  Size  Location     Type
   258 ;;                  1    wreg      void 
   259 ;; Registers used:
   260 ;;		wreg, status,2, status,0, pclath, cstack
   261 ;; Tracked objects:
   262 ;;		On entry : 1F/0
   263 ;;		On exit  : 1F/0
   264 ;;		Unchanged: 0/0
   265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   266 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   269 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   270 ;;Total ram usage:        3 bytes
   271 ;; Hardware stack levels used:    1
   272 ;; Hardware stack levels required when called:    3
   273 ;; This function calls:
   274 ;;		_SPI_RW
   275 ;;		_SPI_ReadStatus
   276 ;;		_WriteDisable
   277 ;;		_WriteEnable
   278 ;; This function is called by:
   279 ;;		_main
   280 ;; This function uses a non-reentrant model
   281 ;;
   282                           
   283                           
   284                           ;psect for function _SPI_Write
   285  0046                     _SPI_Write:	
   286  0046                     l2947:	
   287                           ;test_FT62F08X_SPI.C: 157: while(SPI_ReadStatus()&0x01);
   288                           
   289                           ;incstack = 0
   290                           ; Regs used in _SPI_Write: [wreg+status,2+status,0+pclath+cstack]
   291                           
   292  0046  206D  3180         	fcall	_SPI_ReadStatus
   293  0048  3901               	andlw	1
   294  0049  1D03               	btfss	3,2
   295  004A  2846               	goto	l2947
   296                           
   297                           ;test_FT62F08X_SPI.C: 158: WriteEnable();
   298  004B  20B5  3180         	fcall	_WriteEnable
   299                           
   300                           ;test_FT62F08X_SPI.C: 159: NSSM0=0;
   301  004D  1116               	bcf	22,2	;volatile
   302                           
   303                           ;test_FT62F08X_SPI.C: 160: SPI_RW(0x02);
   304  004E  3002               	movlw	2
   305  004F  2063  3180         	fcall	_SPI_RW
   306                           
   307                           ;test_FT62F08X_SPI.C: 161: SPI_RW((unsigned char)((addr)>>8));
   308  0051  0874               	movf	SPI_Write@addr+1,w
   309  0052  2063  3180         	fcall	_SPI_RW
   310                           
   311                           ;test_FT62F08X_SPI.C: 162: SPI_RW((unsigned char)addr);
   312  0054  0873               	movf	SPI_Write@addr,w
   313  0055  2063  3180         	fcall	_SPI_RW
   314                           
   315                           ;test_FT62F08X_SPI.C: 164: SPI_RW(dat);
   316  0057  0875               	movf	SPI_Write@dat,w
   317  0058  2063  3180         	fcall	_SPI_RW
   318                           
   319                           ;test_FT62F08X_SPI.C: 165: NSSM0=1;
   320  005A  1516               	bsf	22,2	;volatile
   321                           
   322                           ;test_FT62F08X_SPI.C: 166: WriteDisable();
   323  005B  20B0  3180         	fcall	_WriteDisable
   324  005D                     l2955:	
   325                           ;test_FT62F08X_SPI.C: 167: while(SPI_ReadStatus()&0x01);
   326                           
   327  005D  206D  3180         	fcall	_SPI_ReadStatus
   328  005F  3901               	andlw	1
   329  0060  1903               	btfsc	3,2
   330  0061  0008               	return
   331  0062  285D               	goto	l2955
   332  0063                     __end_of_SPI_Write:	
   333  0063                     __ptext6:	
   334 ;; *************** function _SPI_RW *****************
   335 ;; Defined at:
   336 ;;		line 75 in file "test_FT62F08X_SPI.C"
   337 ;; Parameters:    Size  Location     Type
   338 ;;  data            1    wreg     unsigned char 
   339 ;; Auto vars:     Size  Location     Type
   340 ;;  data            1    0[COMMON] unsigned char 
   341 ;;  spiData         1    1[COMMON] unsigned char 
   342 ;; Return value:  Size  Location     Type
   343 ;;                  1    wreg      unsigned char 
   344 ;; Registers used:
   345 ;;		wreg
   346 ;; Tracked objects:
   347 ;;		On entry : 1F/0
   348 ;;		On exit  : 1F/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   352 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   354 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   355 ;;Total ram usage:        2 bytes
   356 ;; Hardware stack levels used:    1
   357 ;; Hardware stack levels required when called:    1
   358 ;; This function calls:
   359 ;;		Nothing
   360 ;; This function is called by:
   361 ;;		_WriteEnable
   362 ;;		_WriteDisable
   363 ;;		_SPI_ReadStatus
   364 ;;		_SPI_Read
   365 ;;		_SPI_Write
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369                           
   370                           ;psect for function _SPI_RW
   371  0063                     _SPI_RW:	
   372                           
   373                           ;incstack = 0
   374                           ; Regs used in _SPI_RW: [wreg]
   375                           ;SPI_RW@data stored from wreg
   376  0063  00F0               	movwf	SPI_RW@data
   377  0064                     l2369:	
   378                           ;test_FT62F08X_SPI.C: 77: unsigned char spiData;
   379                           ;test_FT62F08X_SPI.C: 79: while(BUSY);
   380                           
   381  0064  1B97               	btfsc	23,7	;volatile
   382  0065  2864               	goto	l2369
   383                           
   384                           ;test_FT62F08X_SPI.C: 80: SPIDATA = data;
   385  0066  0870               	movf	SPI_RW@data,w
   386  0067  0095               	movwf	21	;volatile
   387  0068                     l2372:	
   388                           ;test_FT62F08X_SPI.C: 81: while(RXBMT);
   389                           
   390  0068  1817               	btfsc	23,0	;volatile
   391  0069  2868               	goto	l2372
   392                           
   393                           ;test_FT62F08X_SPI.C: 82: spiData = SPIDATA;
   394  006A  0815               	movf	21,w	;volatile
   395  006B  00F1               	movwf	SPI_RW@spiData
   396                           
   397                           ;test_FT62F08X_SPI.C: 83: return spiData;
   398  006C  0008               	return
   399  006D                     __end_of_SPI_RW:	
   400  006D                     __ptext5:	
   401 ;; *************** function _SPI_ReadStatus *****************
   402 ;; Defined at:
   403 ;;		line 110 in file "test_FT62F08X_SPI.C"
   404 ;; Parameters:    Size  Location     Type
   405 ;;		None
   406 ;; Auto vars:     Size  Location     Type
   407 ;;  status          1    2[COMMON] unsigned char 
   408 ;; Return value:  Size  Location     Type
   409 ;;                  1    wreg      unsigned char 
   410 ;; Registers used:
   411 ;;		wreg, status,2, status,0, pclath, cstack
   412 ;; Tracked objects:
   413 ;;		On entry : 0/0
   414 ;;		On exit  : 1F/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   418 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   420 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   421 ;;Total ram usage:        1 bytes
   422 ;; Hardware stack levels used:    1
   423 ;; Hardware stack levels required when called:    2
   424 ;; This function calls:
   425 ;;		_SPI_RW
   426 ;; This function is called by:
   427 ;;		_SPI_Read
   428 ;;		_SPI_Write
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432                           
   433                           ;psect for function _SPI_ReadStatus
   434  006D                     _SPI_ReadStatus:	
   435                           
   436                           ;test_FT62F08X_SPI.C: 113: NSSM0=0;
   437                           
   438                           ;incstack = 0
   439                           ; Regs used in _SPI_ReadStatus: [wreg+status,2+status,0+pclath+cstack]
   440  006D  0020               	movlb	0	; select bank0
   441  006E  1116               	bcf	22,2	;volatile
   442                           
   443                           ;test_FT62F08X_SPI.C: 114: SPI_RW(0x05);
   444  006F  3005               	movlw	5
   445  0070  2063  3180         	fcall	_SPI_RW
   446                           
   447                           ;test_FT62F08X_SPI.C: 115: status = SPI_RW(0x00);
   448  0072  3000               	movlw	0
   449  0073  2063               	fcall	_SPI_RW
   450  0074  00F2               	movwf	SPI_ReadStatus@status
   451                           
   452                           ;test_FT62F08X_SPI.C: 116: NSSM0=1;
   453  0075  1516               	bsf	22,2	;volatile
   454                           
   455                           ;test_FT62F08X_SPI.C: 117: return status;
   456  0076  0008               	return
   457  0077                     __end_of_SPI_ReadStatus:	
   458  0077                     __ptext8:	
   459 ;; *************** function _POWER_INITIAL *****************
   460 ;; Defined at:
   461 ;;		line 35 in file "test_FT62F08X_SPI.C"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;		None
   466 ;; Return value:  Size  Location     Type
   467 ;;                  1    wreg      void 
   468 ;; Registers used:
   469 ;;		wreg, status,2
   470 ;; Tracked objects:
   471 ;;		On entry : B1F/0
   472 ;;		On exit  : B1F/3
   473 ;;		Unchanged: B00/0
   474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   479 ;;Total ram usage:        0 bytes
   480 ;; Hardware stack levels used:    1
   481 ;; Hardware stack levels required when called:    1
   482 ;; This function calls:
   483 ;;		Nothing
   484 ;; This function is called by:
   485 ;;		_main
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           
   490                           ;psect for function _POWER_INITIAL
   491  0077                     _POWER_INITIAL:	
   492                           
   493                           ;test_FT62F08X_SPI.C: 37: OSCCON = 0B01110001;
   494                           
   495                           ;incstack = 0
   496                           ; Regs used in _POWER_INITIAL: [wreg+status,2]
   497  0077  3071               	movlw	113
   498  0078  0021               	movlb	1	; select bank1
   499  0079  0099               	movwf	25	;volatile
   500                           
   501                           ;test_FT62F08X_SPI.C: 38: INTCON = 0;
   502  007A  018B               	clrf	11	;volatile
   503                           
   504                           ;test_FT62F08X_SPI.C: 40: PORTA = 0B00000000;
   505  007B  0020               	movlb	0	; select bank0
   506  007C  018C               	clrf	12	;volatile
   507                           
   508                           ;test_FT62F08X_SPI.C: 41: TRISA = 0B00000010;
   509  007D  3002               	movlw	2
   510  007E  0021               	movlb	1	; select bank1
   511  007F  008C               	movwf	12	;volatile
   512                           
   513                           ;test_FT62F08X_SPI.C: 42: PORTB = 0B00000000;
   514  0080  0020               	movlb	0	; select bank0
   515  0081  018D               	clrf	13	;volatile
   516                           
   517                           ;test_FT62F08X_SPI.C: 43: TRISB = 0B00000000;
   518  0082  0021               	movlb	1	; select bank1
   519  0083  018D               	clrf	13	;volatile
   520                           
   521                           ;test_FT62F08X_SPI.C: 44: PORTC = 0B00000000;
   522  0084  0020               	movlb	0	; select bank0
   523  0085  018E               	clrf	14	;volatile
   524                           
   525                           ;test_FT62F08X_SPI.C: 45: TRISC = 0B00000000;
   526  0086  0021               	movlb	1	; select bank1
   527  0087  018E               	clrf	14	;volatile
   528                           
   529                           ;test_FT62F08X_SPI.C: 46: PORTD = 0B00000000;
   530  0088  0020               	movlb	0	; select bank0
   531  0089  018F               	clrf	15	;volatile
   532                           
   533                           ;test_FT62F08X_SPI.C: 47: TRISD = 0B00000000;
   534  008A  0021               	movlb	1	; select bank1
   535  008B  018F               	clrf	15	;volatile
   536                           
   537                           ;test_FT62F08X_SPI.C: 49: WPUA = 0B00000010;
   538  008C  0023               	movlb	3	; select bank3
   539  008D  008C               	movwf	12	;volatile
   540                           
   541                           ;test_FT62F08X_SPI.C: 50: WPUB = 0B00000000;
   542  008E  018D               	clrf	13	;volatile
   543                           
   544                           ;test_FT62F08X_SPI.C: 51: WPUC = 0B00000000;
   545  008F  018E               	clrf	14	;volatile
   546                           
   547                           ;test_FT62F08X_SPI.C: 52: WPUD = 0B00000000;
   548  0090  018F               	clrf	15	;volatile
   549                           
   550                           ;test_FT62F08X_SPI.C: 54: WPDA = 0B00000000;
   551  0091  0024               	movlb	4	; select bank4
   552  0092  018C               	clrf	12	;volatile
   553                           
   554                           ;test_FT62F08X_SPI.C: 55: WPDB = 0B00000000;
   555  0093  018D               	clrf	13	;volatile
   556                           
   557                           ;test_FT62F08X_SPI.C: 56: WPDC = 0B00000000;
   558  0094  018E               	clrf	14	;volatile
   559                           
   560                           ;test_FT62F08X_SPI.C: 57: WPDD = 0B00000000;
   561  0095  018F               	clrf	15	;volatile
   562                           
   563                           ;test_FT62F08X_SPI.C: 59: PSRC0 = 0B11111111;
   564  0096  30FF               	movlw	255
   565  0097  0022               	movlb	2	; select bank2
   566  0098  009A               	movwf	26	;volatile
   567                           
   568                           ;test_FT62F08X_SPI.C: 60: PSRC1 = 0B11111111;
   569  0099  009B               	movwf	27	;volatile
   570                           
   571                           ;test_FT62F08X_SPI.C: 62: PSINK0 = 0B11111111;
   572  009A  0023               	movlb	3	; select bank3
   573  009B  009A               	movwf	26	;volatile
   574                           
   575                           ;test_FT62F08X_SPI.C: 63: PSINK1 = 0B11111111;
   576  009C  009B               	movwf	27	;volatile
   577                           
   578                           ;test_FT62F08X_SPI.C: 64: PSINK2 = 0B11111111;
   579  009D  009C               	movwf	28	;volatile
   580                           
   581                           ;test_FT62F08X_SPI.C: 65: PSINK3 = 0B11111111;
   582  009E  009D               	movwf	29	;volatile
   583                           
   584                           ;test_FT62F08X_SPI.C: 67: ANSELA = 0B00000000;
   585  009F  0197               	clrf	23	;volatile
   586  00A0  0008               	return
   587  00A1                     __end_of_POWER_INITIAL:	
   588  00A1                     __ptext7:	
   589 ;; *************** function _SPI_INITIAL *****************
   590 ;; Defined at:
   591 ;;		line 175 in file "test_FT62F08X_SPI.C"
   592 ;; Parameters:    Size  Location     Type
   593 ;;		None
   594 ;; Auto vars:     Size  Location     Type
   595 ;;		None
   596 ;; Return value:  Size  Location     Type
   597 ;;                  1    wreg      void 
   598 ;; Registers used:
   599 ;;		wreg, status,2
   600 ;; Tracked objects:
   601 ;;		On entry : B1F/3
   602 ;;		On exit  : B1F/0
   603 ;;		Unchanged: B00/0
   604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   609 ;;Total ram usage:        0 bytes
   610 ;; Hardware stack levels used:    1
   611 ;; Hardware stack levels required when called:    1
   612 ;; This function calls:
   613 ;;		Nothing
   614 ;; This function is called by:
   615 ;;		_main
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619                           
   620                           ;psect for function _SPI_INITIAL
   621  00A1                     _SPI_INITIAL:	
   622                           
   623                           ;test_FT62F08X_SPI.C: 177: PCKEN |= 0B00010000;
   624                           
   625                           ;incstack = 0
   626                           ; Regs used in _SPI_INITIAL: [wreg+status,2]
   627  00A1  0021               	movlb	1	; select bank1
   628  00A2  161A               	bsf	26,4	;volatile
   629                           
   630                           ;test_FT62F08X_SPI.C: 178: SPICTRL = 0B00001000;
   631  00A3  3008               	movlw	8
   632  00A4  0020               	movlb	0	; select bank0
   633  00A5  0096               	movwf	22	;volatile
   634                           
   635                           ;test_FT62F08X_SPI.C: 210: SPICFG = 0B01000000;
   636  00A6  3040               	movlw	64
   637  00A7  0097               	movwf	23	;volatile
   638                           
   639                           ;test_FT62F08X_SPI.C: 243: SPISCR = 0B00000000;
   640  00A8  0198               	clrf	24	;volatile
   641                           
   642                           ;test_FT62F08X_SPI.C: 244: SPIRXCRC = 0B00000000;
   643  00A9  019A               	clrf	26	;volatile
   644                           
   645                           ;test_FT62F08X_SPI.C: 245: SPITXCRC = 0B00000000;
   646  00AA  019B               	clrf	27	;volatile
   647                           
   648                           ;test_FT62F08X_SPI.C: 246: SPIIER = 0B00000000;
   649  00AB  019C               	clrf	28	;volatile
   650                           
   651                           ;test_FT62F08X_SPI.C: 247: SPICTRL2 = 0B00000000;
   652  00AC  019D               	clrf	29	;volatile
   653                           
   654                           ;test_FT62F08X_SPI.C: 280: SPISTAT = 0B00000000;
   655  00AD  019E               	clrf	30	;volatile
   656                           
   657                           ;test_FT62F08X_SPI.C: 282: SPIEN=1;
   658  00AE  1416               	bsf	22,0	;volatile
   659  00AF  0008               	return
   660  00B0                     __end_of_SPI_INITIAL:	
   661  00B0                     __ptext3:	
   662 ;; *************** function _WriteDisable *****************
   663 ;; Defined at:
   664 ;;		line 99 in file "test_FT62F08X_SPI.C"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg, status,2, status,0, pclath, cstack
   673 ;; Tracked objects:
   674 ;;		On entry : 1F/0
   675 ;;		On exit  : 1F/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   682 ;;Total ram usage:        0 bytes
   683 ;; Hardware stack levels used:    1
   684 ;; Hardware stack levels required when called:    2
   685 ;; This function calls:
   686 ;;		_SPI_RW
   687 ;; This function is called by:
   688 ;;		_SPI_Write
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           
   693                           ;psect for function _WriteDisable
   694  00B0                     _WriteDisable:	
   695                           
   696                           ;test_FT62F08X_SPI.C: 101: NSSM0=0;
   697                           
   698                           ;incstack = 0
   699                           ; Regs used in _WriteDisable: [wreg+status,2+status,0+pclath+cstack]
   700  00B0  1116               	bcf	22,2	;volatile
   701                           
   702                           ;test_FT62F08X_SPI.C: 102: SPI_RW(0x04);
   703  00B1  3004               	movlw	4
   704  00B2  2063               	fcall	_SPI_RW
   705                           
   706                           ;test_FT62F08X_SPI.C: 103: NSSM0=1;
   707  00B3  1516               	bsf	22,2	;volatile
   708  00B4  0008               	return
   709  00B5                     __end_of_WriteDisable:	
   710  00B5                     __ptext2:	
   711 ;; *************** function _WriteEnable *****************
   712 ;; Defined at:
   713 ;;		line 89 in file "test_FT62F08X_SPI.C"
   714 ;; Parameters:    Size  Location     Type
   715 ;;		None
   716 ;; Auto vars:     Size  Location     Type
   717 ;;		None
   718 ;; Return value:  Size  Location     Type
   719 ;;                  1    wreg      void 
   720 ;; Registers used:
   721 ;;		wreg, status,2, status,0, pclath, cstack
   722 ;; Tracked objects:
   723 ;;		On entry : 1F/0
   724 ;;		On exit  : 1F/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   731 ;;Total ram usage:        0 bytes
   732 ;; Hardware stack levels used:    1
   733 ;; Hardware stack levels required when called:    2
   734 ;; This function calls:
   735 ;;		_SPI_RW
   736 ;; This function is called by:
   737 ;;		_SPI_Write
   738 ;; This function uses a non-reentrant model
   739 ;;
   740                           
   741                           
   742                           ;psect for function _WriteEnable
   743  00B5                     _WriteEnable:	
   744                           
   745                           ;test_FT62F08X_SPI.C: 91: NSSM0=0;
   746                           
   747                           ;incstack = 0
   748                           ; Regs used in _WriteEnable: [wreg+status,2+status,0+pclath+cstack]
   749  00B5  1116               	bcf	22,2	;volatile
   750                           
   751                           ;test_FT62F08X_SPI.C: 92: SPI_RW(0x06);
   752  00B6  3006               	movlw	6
   753  00B7  2063               	fcall	_SPI_RW
   754                           
   755                           ;test_FT62F08X_SPI.C: 93: NSSM0=1;
   756  00B8  1516               	bsf	22,2	;volatile
   757  00B9  0008               	return
   758  00BA                     __end_of_WriteEnable:	
   759                           
   760                           	psect	bssCOMMON
   761  0076                     __pbssCOMMON:	
   762  0076                     _SPIReadData1:	
   763  0076                     	ds	1
   764  0077                     _SPIReadData:	
   765  0077                     	ds	1
   766                           
   767                           	psect	cstackCOMMON
   768  0070                     __pcstackCOMMON:	
   769  0070                     ?_ISR:	
   770  0070                     ??_ISR:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ?_POWER_INITIAL:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     ??_POWER_INITIAL:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     ?_SPI_RW:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0070                     ??_SPI_RW:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0070                     ?_WriteEnable:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0070                     ?_WriteDisable:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0070                     ?_SPI_ReadStatus:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  0070                     ?_SPI_INITIAL:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0070                     ??_SPI_INITIAL:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0070                     ?_main:	
   801                           ; 1 bytes @ 0x0
   802                           
   803  0070                     SPI_RW@data:	
   804                           ; 1 bytes @ 0x0
   805                           
   806                           
   807                           ; 1 bytes @ 0x0
   808  0070                     	ds	1
   809  0071                     SPI_RW@spiData:	
   810                           
   811                           ; 1 bytes @ 0x1
   812  0071                     	ds	1
   813  0072                     ??_WriteEnable:	
   814  0072                     ??_WriteDisable:	
   815                           ; 1 bytes @ 0x2
   816                           
   817  0072                     ??_SPI_ReadStatus:	
   818                           ; 1 bytes @ 0x2
   819                           
   820  0072                     SPI_ReadStatus@status:	
   821                           ; 1 bytes @ 0x2
   822                           
   823                           
   824                           ; 1 bytes @ 0x2
   825  0072                     	ds	1
   826  0073                     ?_SPI_Read:	
   827  0073                     ?_SPI_Write:	
   828                           ; 1 bytes @ 0x3
   829                           
   830  0073                     SPI_Read@addr:	
   831                           ; 1 bytes @ 0x3
   832                           
   833  0073                     SPI_Write@addr:	
   834                           ; 2 bytes @ 0x3
   835                           
   836                           
   837                           ; 2 bytes @ 0x3
   838  0073                     	ds	2
   839  0075                     ??_SPI_Read:	
   840  0075                     SPI_Read@spidata:	
   841                           ; 1 bytes @ 0x5
   842                           
   843  0075                     SPI_Write@dat:	
   844                           ; 1 bytes @ 0x5
   845                           
   846                           
   847                           ; 1 bytes @ 0x5
   848  0075                     	ds	1
   849  0076                     ??_SPI_Write:	
   850  0076                     ??_main:	
   851                           ; 1 bytes @ 0x6
   852                           
   853                           
   854                           	psect	intentry
   855  0004                     __pintentry:	
   856 ;; *************** function _ISR *****************
   857 ;; Defined at:
   858 ;;		line 25 in file "test_FT62F08X_SPI.C"
   859 ;; Parameters:    Size  Location     Type
   860 ;;		None
   861 ;; Auto vars:     Size  Location     Type
   862 ;;		None
   863 ;; Return value:  Size  Location     Type
   864 ;;                  1    wreg      void 
   865 ;; Registers used:
   866 ;;		None
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   876 ;;Total ram usage:        0 bytes
   877 ;; Hardware stack levels used:    1
   878 ;; This function calls:
   879 ;;		Nothing
   880 ;; This function is called by:
   881 ;;		Interrupt level 1
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885  0004                     _ISR:	
   886                           
   887                           ;incstack = 0
   888  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   889                           
   890                           ; Regs used in _ISR: []
   891  0005  3180               	pagesel	$
   892  0006  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   893  0007  0009               	retfie
   894  0008                     __end_of_ISR:	
   895  007E                     btemp	set	126	;btemp
   896  007E                     int$flags	set	126
   897  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_Read
    _main->_SPI_Write
    _SPI_Write->_SPI_ReadStatus
    _WriteEnable->_SPI_RW
    _WriteDisable->_SPI_RW
    _SPI_Read->_SPI_ReadStatus
    _SPI_ReadStatus->_SPI_RW

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     603
                      _POWER_INITIAL
                        _SPI_INITIAL
                           _SPI_Read
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (1) _SPI_Write                                            3     0      3     374
                                              3 COMMON     3     0      3
                             _SPI_RW
                     _SPI_ReadStatus
                       _WriteDisable
                        _WriteEnable
 ---------------------------------------------------------------------------------
 (2) _WriteEnable                                          0     0      0      30
                             _SPI_RW
 ---------------------------------------------------------------------------------
 (2) _WriteDisable                                         0     0      0      30
                             _SPI_RW
 ---------------------------------------------------------------------------------
 (1) _SPI_Read                                             3     1      2     229
                                              3 COMMON     3     1      2
                             _SPI_RW
                     _SPI_ReadStatus
 ---------------------------------------------------------------------------------
 (2) _SPI_ReadStatus                                       1     1      0      45
                                              2 COMMON     1     1      0
                             _SPI_RW
 ---------------------------------------------------------------------------------
 (3) _SPI_RW                                               2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SPI_INITIAL                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POWER_INITIAL                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _POWER_INITIAL
   _SPI_INITIAL
   _SPI_Read
     _SPI_RW
     _SPI_ReadStatus
       _SPI_RW
   _SPI_Write
     _SPI_RW
     _SPI_ReadStatus
       _SPI_RW
     _WriteDisable
       _SPI_RW
     _WriteEnable
       _SPI_RW

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       8       2       57.1%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       8      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       8      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


GNU Macro Assembler for 8 bit devices.     
Symbol Table                                                                                   Tue Nov 16 17:58:57 2021

   __size_of_WriteEnable 0005                      _ISR 0004    __size_of_WriteDisable 0005  
                   ?_ISR 0070                     l2372 0068                     l2369 0064  
                   l2933 0032                     l2955 005D                     l2947 0046  
                   l2973 0030                     _BUSY 00BF          SPI_Read@spidata 0075  
                   _WPDA 020C                     _WPDB 020D                     _WPDC 020E  
                   _WPDD 020F                     _WPUA 018C                     _WPUB 018D  
                   _WPUC 018E                     _WPUD 018F           _ad3nop_absaddr 0003  
                   _main 000F                     btemp 007E                     start 0008  
 __end_of_SPI_ReadStatus 0077                    ??_ISR 0070             _WriteDisable 00B0  
                  ?_main 0070                    _PCKEN 009A                    _NSSM0 00B2  
                  _PSRC0 011A                    _PSRC1 011B                    _PORTA 000C  
                  _PORTB 000D                    _PORTC 000E                    _SPIEN 00B0  
                  _PORTD 000F                    _RXBMT 00B8                    _TRISA 008C  
                  _TRISB 008D                    _TRISC 008E                    _TRISD 008F  
       __end_of_SPI_Read 0046                    status 0003                    wtemp0 007E  
     __size_of_SPI_Write 001D          ?_SPI_ReadStatus 0070             SPI_Read@addr 0073  
        __initialization 000A             __end_of_main 0032                   ??_main 0076  
          SPI_RW@spiData 0071                   _ANSELA 0197                   _INTCON 000B  
                 _OSCCON 0099                   _PSINK0 019A                   _PSINK1 019B  
                 _PSINK2 019C                   _PSINK3 019D                   _SPICFG 0017  
                 _SPIIER 001C                   _SPISCR 0018                   _SPI_RW 0063  
           SPI_Write@dat 0075                   _ad3nop 0003        __end_of_SPI_Write 0063  
           ?_SPI_INITIAL 0070    __end_of_POWER_INITIAL 00A1  __end_of__initialization 000C  
         __pcstackCOMMON 0070                ?_SPI_Read 0073                  ?_SPI_RW 0070  
             __pmaintext 000F            ??_WriteEnable 0072               __pintentry 0004  
             ??_SPI_Read 0075                  _SPIDATA 0015                  _SPICTRL 0016  
                _SPISTAT 001E         ??_SPI_ReadStatus 0072          __size_of_SPI_RW 000A  
          SPI_Write@addr 0073                  __ptext1 0046                  __ptext2 00B5  
                __ptext3 00B0                  __ptext4 0032                  __ptext5 006D  
                __ptext6 0063                  __ptext7 00A1                  __ptext8 0077  
           __size_of_ISR 0004      __end_of_WriteEnable 00BA     __size_of_SPI_INITIAL 000F  
   end_of_initialization 000C                _SPI_Write 0046           __end_of_SPI_RW 006D  
         __end_of_ad3nop 0004              _WriteEnable 00B5        __size_of_SPI_Read 0014  
    start_initialization 000A           __p_ad3nop_text 0003              __end_of_ISR 0008  
             ?_SPI_Write 0073                 ??_SPI_RW 0070            ?_WriteDisable 0070  
 __size_of_POWER_INITIAL 002A              __pbssCOMMON 0076                ___latbits 0002  
         ??_WriteDisable 0072     SPI_ReadStatus@status 0072              ??_SPI_Write 0076  
          _POWER_INITIAL 0077                 _SPICTRL2 001D                 _SPIRXCRC 001A  
               _SPITXCRC 001B                 _SPI_Read 0032            ??_SPI_INITIAL 0070  
             SPI_RW@data 0070           ?_POWER_INITIAL 0070  __size_of_SPI_ReadStatus 000A  
           ?_WriteEnable 0070      __end_of_SPI_INITIAL 00B0     __end_of_WriteDisable 00B5  
          __size_of_main 0023                 int$flags 007E          ??_POWER_INITIAL 0070  
               intlevel1 0000              _SPI_INITIAL 00A1             _SPIReadData1 0076  
            _SPIReadData 0077           _SPI_ReadStatus 006D  
