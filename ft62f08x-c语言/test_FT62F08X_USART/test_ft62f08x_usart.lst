

GNU Macro Assembler for 8 bit devices.       
                                                                                               Fri Nov 05 14:56:40 2021

GNU C Code Generator                                                 
     1                           	processor	FT62F08X
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	_ad3nop_text,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	pa_nodes0,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 1.45
    16                           ; Generated 16/11/2017 
    17                           ; 
    18                           ; SFR Addresses
    19  0000                     
    20                           	psect	idataBANK0
    21  0000                     __pidataBANK0:	
    22  0003                     _ad3nop_absaddr	set	3
    23  0003                     _ad3nop_absaddr	set	3
    24                           
    25                           	psect	_ad3nop_text
    26  0003                     __p_ad3nop_text:	
    27  0003                     _ad3nop:	
    28  0003  3400               	retlw	0
    29  0004                     __end_of_ad3nop:	
    30  000F                     _PORTD	set	15
    31  000E                     _PORTC	set	14
    32  000D                     _PORTB	set	13
    33  000C                     _PORTA	set	12
    34  000B                     _INTCON	set	11
    35  009A                     _PCKEN	set	154
    36  0099                     _OSCCON	set	153
    37  008F                     _TRISD	set	143
    38  008E                     _TRISC	set	142
    39  008D                     _TRISB	set	141
    40  008C                     _TRISA	set	140
    41  011B                     _PSRC1	set	283
    42  011A                     _PSRC0	set	282
    43  019D                     _PSINK3	set	413
    44  019C                     _PSINK2	set	412
    45  019B                     _PSINK1	set	411
    46  019A                     _PSINK0	set	410
    47  0197                     _ANSELA	set	407
    48  018F                     _WPUD	set	399
    49  018E                     _WPUC	set	398
    50  018D                     _WPUB	set	397
    51  018C                     _WPUA	set	396
    52  020F                     _WPDD	set	527
    53  020E                     _WPDC	set	526
    54  020D                     _WPDB	set	525
    55  020C                     _WPDA	set	524
    56  0495                     _URDLH	set	1173
    57  0494                     _URDLL	set	1172
    58  0491                     _URMCR	set	1169
    59  048F                     _URLCR	set	1167
    60  048E                     _URIER	set	1166
    61  048C                     _URDATAL	set	1164
    62  24E0                     _TCF	set	9440
    63  2495                     _TXEF	set	9365
    64  2490                     _RXNEF	set	9360
    65  2475                     _TCEN	set	9333
    66  2470                     _URRXNE	set	9328
    67                           
    68                           	psect	cinit
    69  002D                     start_initialization:	
    70                           ; #config settings
    71                           
    72  002D                     __initialization:	
    73                           
    74                           ;initializer for _toSend
    75  002D  3011               	movlw	17
    76  002E  00A0               	movwf	__pdataBANK0& (0+127)
    77  002F  3022               	movlw	34
    78  0030  00A1               	movwf	(__pdataBANK0+1)& (0+127)
    79  0031  3033               	movlw	51
    80  0032  00A2               	movwf	(__pdataBANK0+2)& (0+127)
    81  0033  3044               	movlw	68
    82  0034  00A3               	movwf	(__pdataBANK0+3)& (0+127)
    83  0035  3055               	movlw	85
    84  0036  00A4               	movwf	(__pdataBANK0+4)& (0+127)
    85  0037  3066               	movlw	102
    86  0038  00A5               	movwf	(__pdataBANK0+5)& (0+127)
    87  0039  3077               	movlw	119
    88  003A  00A6               	movwf	(__pdataBANK0+6)& (0+127)
    89  003B  3088               	movlw	136
    90  003C  00A7               	movwf	(__pdataBANK0+7)& (0+127)
    91  003D  3099               	movlw	153
    92  003E  00A8               	movwf	(__pdataBANK0+8)& (0+127)
    93  003F  30AA               	movlw	170
    94  0040  00A9               	movwf	(__pdataBANK0+9)& (0+127)
    95  0041  01AA               	clrf	(__pdataBANK0+10)& (0+127)
    96                           
    97                           ; Clear objects allocated to COMMON
    98  0042  01F5               	clrf	__pbssCOMMON& (0+127)
    99  0043  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   100  0044  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   101                           
   102                           ; Clear objects allocated to BANK0
   103  0045  01AB               	clrf	__pbssBANK0& (0+127)
   104  0046  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   105  0047  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   106  0048  01AE               	clrf	(__pbssBANK0+3)& (0+127)
   107  0049  01AF               	clrf	(__pbssBANK0+4)& (0+127)
   108  004A  01B0               	clrf	(__pbssBANK0+5)& (0+127)
   109  004B  01B1               	clrf	(__pbssBANK0+6)& (0+127)
   110  004C  01B2               	clrf	(__pbssBANK0+7)& (0+127)
   111  004D  01B3               	clrf	(__pbssBANK0+8)& (0+127)
   112  004E  01B4               	clrf	(__pbssBANK0+9)& (0+127)
   113  004F                     end_of_initialization:	
   114                           ;End of C runtime variable initialization code
   115                           
   116  004F                     __end_of__initialization:	
   117  004F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   118  0050  0020               	movlb	0
   119  0051  2852               	ljmp	_main	;jump to C main() function
   120  0052                     __pmaintext:	
   121                           ; 1 bytes @ 0x5
   122 ;;
   123 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   124 ;;
   125 ;; *************** function _main *****************
   126 ;; Defined at:
   127 ;;		line 156 in file "test_FT62F08X_USART.C"
   128 ;; Parameters:    Size  Location     Type
   129 ;;		None
   130 ;; Auto vars:     Size  Location     Type
   131 ;;		None
   132 ;; Return value:  Size  Location     Type
   133 ;;                  1    wreg      void 
   134 ;; Registers used:
   135 ;;		wreg, status,2, status,0, pclath, cstack
   136 ;; Tracked objects:
   137 ;;		On entry : B1F/0
   138 ;;		On exit  : 0/0
   139 ;;		Unchanged: 0/0
   140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   145 ;;Total ram usage:        0 bytes
   146 ;; Hardware stack levels required when called:    3
   147 ;; This function calls:
   148 ;;		_DelayMs
   149 ;;		_POWER_INITIAL
   150 ;;		_UART_INITIAL
   151 ;; This function is called by:
   152 ;;		Startup code after reset
   153 ;; This function uses a non-reentrant model
   154 ;;
   155                           
   156                           
   157                           ;psect for function _main
   158  0052                     _main:	
   159                           
   160                           ;test_FT62F08X_USART.C: 158: POWER_INITIAL();
   161                           
   162                           ;incstack = 0
   163                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   164  0052  207A  3180         	fcall	_POWER_INITIAL
   165                           
   166                           ;test_FT62F08X_USART.C: 159: UART_INITIAL();
   167  0054  20A4  3180         	fcall	_UART_INITIAL
   168                           
   169                           ;test_FT62F08X_USART.C: 160: DelayMs(100);
   170  0056  3064               	movlw	100
   171  0057  2060  3180         	fcall	_DelayMs
   172                           
   173                           ;test_FT62F08X_USART.C: 162: if(TXEF)
   174  0059  0029               	movlb	9	; select bank9
   175  005A  1E92               	btfss	18,5	;volatile
   176  005B  285E               	goto	l2895
   177                           
   178                           ;test_FT62F08X_USART.C: 163: {
   179                           ;test_FT62F08X_USART.C: 164: URDATAL =0xaa;
   180  005C  30AA               	movlw	170
   181  005D  008C               	movwf	12	;volatile
   182  005E                     l2895:	
   183                           
   184                           ;test_FT62F08X_USART.C: 168: {
   185                           ;test_FT62F08X_USART.C: 169: __nop();
   186  005E  0000               	nop
   187  005F  285E               	goto	l2895
   188  0060                     __end_of_main:	
   189  0060                     __ptext3:	
   190 ;; *************** function _DelayMs *****************
   191 ;; Defined at:
   192 ;;		line 120 in file "test_FT62F08X_USART.C"
   193 ;; Parameters:    Size  Location     Type
   194 ;;  Time            1    wreg     unsigned char 
   195 ;; Auto vars:     Size  Location     Type
   196 ;;  Time            1    2[COMMON] unsigned char 
   197 ;;  b               1    4[COMMON] unsigned char 
   198 ;;  a               1    3[COMMON] unsigned char 
   199 ;; Return value:  Size  Location     Type
   200 ;;                  1    wreg      void 
   201 ;; Registers used:
   202 ;;		wreg, status,2, status,0, pclath, cstack
   203 ;; Tracked objects:
   204 ;;		On entry : B1F/9
   205 ;;		On exit  : 0/0
   206 ;;		Unchanged: 0/0
   207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   209 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   211 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   212 ;;Total ram usage:        3 bytes
   213 ;; Hardware stack levels used:    1
   214 ;; Hardware stack levels required when called:    2
   215 ;; This function calls:
   216 ;;		_DelayUs
   217 ;; This function is called by:
   218 ;;		_main
   219 ;; This function uses a non-reentrant model
   220 ;;
   221                           
   222                           
   223                           ;psect for function _DelayMs
   224  0060                     _DelayMs:	
   225                           
   226                           ;incstack = 0
   227                           ; Regs used in _DelayMs: [wreg+status,2+status,0+pclath+cstack]
   228                           ;DelayMs@Time stored from wreg
   229  0060  00F2               	movwf	DelayMs@Time
   230                           
   231                           ;test_FT62F08X_USART.C: 122: unsigned char a,b;
   232                           ;test_FT62F08X_USART.C: 123: for(a=0;a<Time;a++)
   233  0061  01F3               	clrf	DelayMs@a
   234  0062                     l2847:	
   235  0062  0872               	movf	DelayMs@Time,w
   236  0063  0273               	subwf	DelayMs@a,w
   237  0064  1803               	btfsc	3,0
   238  0065  0008               	return
   239                           
   240                           ;test_FT62F08X_USART.C: 124: {
   241                           ;test_FT62F08X_USART.C: 125: for(b=0;b<5;b++)
   242  0066  01F4               	clrf	DelayMs@b
   243  0067                     l2839:	
   244                           
   245                           ;test_FT62F08X_USART.C: 126: {
   246                           ;test_FT62F08X_USART.C: 127: DelayUs(197);
   247  0067  30C5               	movlw	197
   248  0068  2071  3180         	fcall	_DelayUs
   249  006A  3005               	movlw	5
   250  006B  0AF4               	incf	DelayMs@b,f
   251  006C  0274               	subwf	DelayMs@b,w
   252  006D  1C03               	skipc
   253  006E  2867               	goto	l2839
   254  006F  0AF3               	incf	DelayMs@a,f
   255  0070  2862               	goto	l2847
   256  0071                     __end_of_DelayMs:	
   257  0071                     __ptext4:	
   258 ;; *************** function _DelayUs *****************
   259 ;; Defined at:
   260 ;;		line 105 in file "test_FT62F08X_USART.C"
   261 ;; Parameters:    Size  Location     Type
   262 ;;  Time            1    wreg     unsigned char 
   263 ;; Auto vars:     Size  Location     Type
   264 ;;  Time            1    0[COMMON] unsigned char 
   265 ;;  a               1    1[COMMON] unsigned char 
   266 ;; Return value:  Size  Location     Type
   267 ;;                  1    wreg      void 
   268 ;; Registers used:
   269 ;;		wreg, status,2, status,0
   270 ;; Tracked objects:
   271 ;;		On entry : 0/9
   272 ;;		On exit  : 0/0
   273 ;;		Unchanged: 0/0
   274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   276 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   278 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   279 ;;Total ram usage:        2 bytes
   280 ;; Hardware stack levels used:    1
   281 ;; Hardware stack levels required when called:    1
   282 ;; This function calls:
   283 ;;		Nothing
   284 ;; This function is called by:
   285 ;;		_DelayMs
   286 ;; This function uses a non-reentrant model
   287 ;;
   288                           
   289                           
   290                           ;psect for function _DelayUs
   291  0071                     _DelayUs:	
   292                           
   293                           ;incstack = 0
   294                           ; Regs used in _DelayUs: [wreg+status,2+status,0]
   295                           ;DelayUs@Time stored from wreg
   296  0071  00F0               	movwf	DelayUs@Time
   297                           
   298                           ;test_FT62F08X_USART.C: 107: unsigned char a;
   299                           ;test_FT62F08X_USART.C: 108: for(a=0;a<Time;a++)
   300  0072  01F1               	clrf	DelayUs@a
   301  0073                     l2783:	
   302  0073  0870               	movf	DelayUs@Time,w
   303  0074  0271               	subwf	DelayUs@a,w
   304  0075  1803               	btfsc	3,0
   305  0076  0008               	return
   306                           
   307                           ;test_FT62F08X_USART.C: 109: {
   308                           ;test_FT62F08X_USART.C: 110: __nop();
   309  0077  0000               	nop
   310  0078  0AF1               	incf	DelayUs@a,f
   311  0079  2873               	goto	l2783
   312  007A                     __end_of_DelayUs:	
   313  007A                     __ptext2:	
   314 ;; *************** function _POWER_INITIAL *****************
   315 ;; Defined at:
   316 ;;		line 65 in file "test_FT62F08X_USART.C"
   317 ;; Parameters:    Size  Location     Type
   318 ;;		None
   319 ;; Auto vars:     Size  Location     Type
   320 ;;		None
   321 ;; Return value:  Size  Location     Type
   322 ;;                  1    wreg      void 
   323 ;; Registers used:
   324 ;;		wreg, status,2
   325 ;; Tracked objects:
   326 ;;		On entry : B1F/0
   327 ;;		On exit  : B1F/3
   328 ;;		Unchanged: B00/0
   329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   334 ;;Total ram usage:        0 bytes
   335 ;; Hardware stack levels used:    1
   336 ;; Hardware stack levels required when called:    1
   337 ;; This function calls:
   338 ;;		Nothing
   339 ;; This function is called by:
   340 ;;		_main
   341 ;; This function uses a non-reentrant model
   342 ;;
   343                           
   344                           
   345                           ;psect for function _POWER_INITIAL
   346  007A                     _POWER_INITIAL:	
   347                           
   348                           ;test_FT62F08X_USART.C: 67: OSCCON = 0B01110001;
   349                           
   350                           ;incstack = 0
   351                           ; Regs used in _POWER_INITIAL: [wreg+status,2]
   352  007A  3071               	movlw	113
   353  007B  0021               	movlb	1	; select bank1
   354  007C  0099               	movwf	25	;volatile
   355                           
   356                           ;test_FT62F08X_USART.C: 68: INTCON = 0;
   357  007D  018B               	clrf	11	;volatile
   358                           
   359                           ;test_FT62F08X_USART.C: 70: PORTA = 0B00000000;
   360  007E  0020               	movlb	0	; select bank0
   361  007F  018C               	clrf	12	;volatile
   362                           
   363                           ;test_FT62F08X_USART.C: 71: TRISA = 0B00000000;
   364  0080  0021               	movlb	1	; select bank1
   365  0081  018C               	clrf	12	;volatile
   366                           
   367                           ;test_FT62F08X_USART.C: 72: PORTB = 0B00000000;
   368  0082  0020               	movlb	0	; select bank0
   369  0083  018D               	clrf	13	;volatile
   370                           
   371                           ;test_FT62F08X_USART.C: 73: TRISB = 0B00000000;
   372  0084  0021               	movlb	1	; select bank1
   373  0085  018D               	clrf	13	;volatile
   374                           
   375                           ;test_FT62F08X_USART.C: 74: PORTC = 0B00000000;
   376  0086  0020               	movlb	0	; select bank0
   377  0087  018E               	clrf	14	;volatile
   378                           
   379                           ;test_FT62F08X_USART.C: 75: TRISC = 0B00001000;
   380  0088  3008               	movlw	8
   381  0089  0021               	movlb	1	; select bank1
   382  008A  008E               	movwf	14	;volatile
   383                           
   384                           ;test_FT62F08X_USART.C: 76: PORTD = 0B00000000;
   385  008B  0020               	movlb	0	; select bank0
   386  008C  018F               	clrf	15	;volatile
   387                           
   388                           ;test_FT62F08X_USART.C: 77: TRISD = 0B00000000;
   389  008D  0021               	movlb	1	; select bank1
   390  008E  018F               	clrf	15	;volatile
   391                           
   392                           ;test_FT62F08X_USART.C: 79: WPUA = 0B00000000;
   393  008F  0023               	movlb	3	; select bank3
   394  0090  018C               	clrf	12	;volatile
   395                           
   396                           ;test_FT62F08X_USART.C: 80: WPUB = 0B00000000;
   397  0091  018D               	clrf	13	;volatile
   398                           
   399                           ;test_FT62F08X_USART.C: 81: WPUC = 0B00001000;
   400  0092  008E               	movwf	14	;volatile
   401                           
   402                           ;test_FT62F08X_USART.C: 82: WPUD = 0B00000000;
   403  0093  018F               	clrf	15	;volatile
   404                           
   405                           ;test_FT62F08X_USART.C: 84: WPDA = 0B00000000;
   406  0094  0024               	movlb	4	; select bank4
   407  0095  018C               	clrf	12	;volatile
   408                           
   409                           ;test_FT62F08X_USART.C: 85: WPDB = 0B00000000;
   410  0096  018D               	clrf	13	;volatile
   411                           
   412                           ;test_FT62F08X_USART.C: 86: WPDC = 0B00000000;
   413  0097  018E               	clrf	14	;volatile
   414                           
   415                           ;test_FT62F08X_USART.C: 87: WPDD = 0B00000000;
   416  0098  018F               	clrf	15	;volatile
   417                           
   418                           ;test_FT62F08X_USART.C: 89: PSRC0 = 0B11111111;
   419  0099  30FF               	movlw	255
   420  009A  0022               	movlb	2	; select bank2
   421  009B  009A               	movwf	26	;volatile
   422                           
   423                           ;test_FT62F08X_USART.C: 90: PSRC1 = 0B11111111;
   424  009C  009B               	movwf	27	;volatile
   425                           
   426                           ;test_FT62F08X_USART.C: 92: PSINK0 = 0B11111111;
   427  009D  0023               	movlb	3	; select bank3
   428  009E  009A               	movwf	26	;volatile
   429                           
   430                           ;test_FT62F08X_USART.C: 93: PSINK1 = 0B11111111;
   431  009F  009B               	movwf	27	;volatile
   432                           
   433                           ;test_FT62F08X_USART.C: 94: PSINK2 = 0B11111111;
   434  00A0  009C               	movwf	28	;volatile
   435                           
   436                           ;test_FT62F08X_USART.C: 95: PSINK3 = 0B11111111;
   437  00A1  009D               	movwf	29	;volatile
   438                           
   439                           ;test_FT62F08X_USART.C: 97: ANSELA = 0B00000000;
   440  00A2  0197               	clrf	23	;volatile
   441  00A3  0008               	return
   442  00A4                     __end_of_POWER_INITIAL:	
   443  00A4                     __ptext1:	
   444 ;; *************** function _UART_INITIAL *****************
   445 ;; Defined at:
   446 ;;		line 137 in file "test_FT62F08X_USART.C"
   447 ;; Parameters:    Size  Location     Type
   448 ;;		None
   449 ;; Auto vars:     Size  Location     Type
   450 ;;		None
   451 ;; Return value:  Size  Location     Type
   452 ;;                  1    wreg      void 
   453 ;; Registers used:
   454 ;;		wreg, status,2
   455 ;; Tracked objects:
   456 ;;		On entry : B1F/3
   457 ;;		On exit  : B1F/9
   458 ;;		Unchanged: B00/0
   459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   464 ;;Total ram usage:        0 bytes
   465 ;; Hardware stack levels used:    1
   466 ;; Hardware stack levels required when called:    1
   467 ;; This function calls:
   468 ;;		Nothing
   469 ;; This function is called by:
   470 ;;		_main
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474                           
   475                           ;psect for function _UART_INITIAL
   476  00A4                     _UART_INITIAL:	
   477                           
   478                           ;test_FT62F08X_USART.C: 139: PCKEN |= 0B00100000;
   479                           
   480                           ;incstack = 0
   481                           ; Regs used in _UART_INITIAL: [wreg+status,2]
   482  00A4  0021               	movlb	1	; select bank1
   483  00A5  169A               	bsf	26,5	;volatile
   484                           
   485                           ;test_FT62F08X_USART.C: 141: URIER = 0B00100001;
   486  00A6  3021               	movlw	33
   487  00A7  0029               	movlb	9	; select bank9
   488  00A8  008E               	movwf	14	;volatile
   489                           
   490                           ;test_FT62F08X_USART.C: 142: URLCR = 0B00000001;
   491  00A9  3001               	movlw	1
   492  00AA  008F               	movwf	15	;volatile
   493                           
   494                           ;test_FT62F08X_USART.C: 143: URMCR = 0B00011000;
   495  00AB  3018               	movlw	24
   496  00AC  0091               	movwf	17	;volatile
   497                           
   498                           ;test_FT62F08X_USART.C: 145: URDLL = 104;
   499  00AD  3068               	movlw	104
   500  00AE  0094               	movwf	20	;volatile
   501                           
   502                           ;test_FT62F08X_USART.C: 146: URDLH = 0;
   503  00AF  0195               	clrf	21	;volatile
   504                           
   505                           ;test_FT62F08X_USART.C: 147: TCF=1;
   506  00B0  141C               	bsf	28,0	;volatile
   507                           
   508                           ;test_FT62F08X_USART.C: 148: INTCON=0B11000000;
   509  00B1  30C0               	movlw	192
   510  00B2  008B               	movwf	11	;volatile
   511  00B3  0008               	return
   512  00B4                     __end_of_UART_INITIAL:	
   513                           
   514                           	psect	bssCOMMON
   515  0075                     __pbssCOMMON:	
   516  0075                     _mmm:	
   517  0075                     	ds	1
   518  0076                     _i:	
   519  0076                     	ds	1
   520  0077                     _senddata:	
   521  0077                     	ds	1
   522                           
   523                           	psect	bssBANK0
   524  002B                     __pbssBANK0:	
   525  002B                     _receivedata:	
   526  002B                     	ds	10
   527                           
   528                           	psect	dataBANK0
   529  0020                     __pdataBANK0:	
   530  0020                     _toSend:	
   531  0020                     	ds	11
   532                           
   533                           	psect	cstackCOMMON
   534  0070                     __pcstackCOMMON:	
   535  0070                     ?_ISR:	
   536  0070                     ??_ISR:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?_POWER_INITIAL:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ??_POWER_INITIAL:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?_DelayUs:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ??_DelayUs:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_DelayMs:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ?_UART_INITIAL:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ??_UART_INITIAL:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ?_main:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     DelayUs@Time:	
   564                           ; 1 bytes @ 0x0
   565                           
   566                           
   567                           ; 1 bytes @ 0x0
   568  0070                     	ds	1
   569  0071                     DelayUs@a:	
   570                           
   571                           ; 1 bytes @ 0x1
   572  0071                     	ds	1
   573  0072                     ??_DelayMs:	
   574  0072                     DelayMs@Time:	
   575                           ; 1 bytes @ 0x2
   576                           
   577                           
   578                           ; 1 bytes @ 0x2
   579  0072                     	ds	1
   580  0073                     DelayMs@a:	
   581                           
   582                           ; 1 bytes @ 0x3
   583  0073                     	ds	1
   584  0074                     DelayMs@b:	
   585                           
   586                           ; 1 bytes @ 0x4
   587  0074                     	ds	1
   588  0075                     ??_main:	
   589                           
   590                           	psect	intentry
   591  0004                     __pintentry:	
   592 ;; *************** function _ISR *****************
   593 ;; Defined at:
   594 ;;		line 31 in file "test_FT62F08X_USART.C"
   595 ;; Parameters:    Size  Location     Type
   596 ;;		None
   597 ;; Auto vars:     Size  Location     Type
   598 ;;		None
   599 ;; Return value:  Size  Location     Type
   600 ;;                  1    wreg      void 
   601 ;; Registers used:
   602 ;;		wreg, fsr1l, fsr1h, status,2, status,0
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   612 ;;Total ram usage:        0 bytes
   613 ;; Hardware stack levels used:    1
   614 ;; This function calls:
   615 ;;		Nothing
   616 ;; This function is called by:
   617 ;;		Interrupt level 1
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621  0004                     _ISR:	
   622                           
   623                           ;incstack = 0
   624  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   625                           
   626                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
   627  0005  3180               	pagesel	$
   628                           
   629                           ;test_FT62F08X_USART.C: 33: if(URRXNE && RXNEF)
   630  0006  0029               	movlb	9	; select bank9
   631  0007  180E               	btfsc	14,0	;volatile
   632  0008  1C12               	btfss	18,0	;volatile
   633  0009  2816               	goto	i1l2911
   634                           
   635                           ;test_FT62F08X_USART.C: 34: {
   636                           ;test_FT62F08X_USART.C: 35: receivedata[mmm++] = URDATAL;
   637  000A  0875               	movf	_mmm,w
   638  000B  3E2B               	addlw	(low (_receivedata| 0))& (0+255)
   639  000C  0086               	movwf	6
   640  000D  0187               	clrf	7
   641  000E  080C               	movf	12,w	;volatile
   642  000F  0081               	movwf	1
   643  0010  300A               	movlw	10
   644  0011  0AF5               	incf	_mmm,f
   645                           
   646                           ;test_FT62F08X_USART.C: 37: if(mmm>=10)
   647  0012  0275               	subwf	_mmm,w
   648  0013  1803               	btfsc	3,0
   649                           
   650                           ;test_FT62F08X_USART.C: 38: {
   651                           ;test_FT62F08X_USART.C: 39: mmm=0;
   652  0014  01F5               	clrf	_mmm
   653                           
   654                           ;test_FT62F08X_USART.C: 40: }
   655                           ;test_FT62F08X_USART.C: 41: __nop();
   656  0015  0000               	nop
   657  0016                     i1l2911:	
   658                           
   659                           ;test_FT62F08X_USART.C: 42: }
   660                           ;test_FT62F08X_USART.C: 44: if(TCEN && TCF)
   661  0016  0029               	movlb	9	; select bank9
   662  0017  1A8E               	btfsc	14,5	;volatile
   663  0018  1C1C               	btfss	28,0	;volatile
   664  0019  2829               	goto	i1l2374
   665                           
   666                           ;test_FT62F08X_USART.C: 45: {
   667                           ;test_FT62F08X_USART.C: 46: TCF=1;
   668  001A  141C               	bsf	28,0	;volatile
   669                           
   670                           ;test_FT62F08X_USART.C: 48: if(i<10)
   671  001B  300A               	movlw	10
   672  001C  0276               	subwf	_i,w
   673  001D  1803               	skipnc
   674  001E  2827               	goto	i1l2923
   675                           
   676                           ;test_FT62F08X_USART.C: 49: {
   677                           ;test_FT62F08X_USART.C: 50: URDATAL =toSend[i++];
   678  001F  0876               	movf	_i,w
   679  0020  3E20               	addlw	(low (_toSend| 0))& (0+255)
   680  0021  0086               	movwf	6
   681  0022  0187               	clrf	7
   682  0023  0801               	movf	1,w
   683  0024  008C               	movwf	12	;volatile
   684  0025  0AF6               	incf	_i,f
   685                           
   686                           ;test_FT62F08X_USART.C: 51: }
   687  0026  2828               	goto	i1l2925
   688  0027                     i1l2923:	
   689                           
   690                           ;test_FT62F08X_USART.C: 52: else
   691                           ;test_FT62F08X_USART.C: 53: {
   692                           ;test_FT62F08X_USART.C: 54: i=0;
   693  0027  01F6               	clrf	_i
   694  0028                     i1l2925:	
   695                           
   696                           ;test_FT62F08X_USART.C: 55: }
   697                           ;test_FT62F08X_USART.C: 56: __nop();
   698  0028  0000               	nop
   699  0029                     i1l2374:	
   700  0029  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   701  002A  0009               	retfie
   702  002B                     __end_of_ISR:	
   703  007E                     btemp	set	126	;btemp
   704  007E                     int$flags	set	126
   705  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       8
    BANK0            80      0      21
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_DelayMs
    _DelayMs->_DelayUs

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      90
                            _DelayMs
                      _POWER_INITIAL
                       _UART_INITIAL
 ---------------------------------------------------------------------------------
 (1) _UART_INITIAL                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POWER_INITIAL                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DelayMs                                              3     3      0      90
                                              2 COMMON     3     3      0
                            _DelayUs
 ---------------------------------------------------------------------------------
 (2) _DelayUs                                              2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayMs
     _DelayUs
   _POWER_INITIAL
   _UART_INITIAL

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       8       2       57.1%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0      15       5       26.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      1D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      1D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


GNU Macro Assembler for 8 bit devices.     
Symbol Table                                                                                   Fri Nov 05 14:56:40 2021

                      _i 0076                      _TCF 24E0                      _ISR 0004  
                    _mmm 0075                     ?_ISR 0070                     l2783 0073  
                   l2839 0067                     l2847 0062                     l2895 005E  
                   _TCEN 2475                     _WPDA 020C                     _WPDB 020D  
                   _WPDC 020E                     _WPDD 020F                     _TXEF 2495  
                   _WPUA 018C                     _WPUB 018D                     _WPUC 018E  
                   _WPUD 018F           _ad3nop_absaddr 0003                     _main 0052  
                   fsr1h 0007                     indf1 0001                     fsr1l 0006  
                   btemp 007E                     start 002B          __end_of_DelayMs 0071  
        __end_of_DelayUs 007A                    ??_ISR 0070                    ?_main 0070  
                  _PCKEN 009A                    _PSRC0 011A                    _PSRC1 011B  
                  _PORTA 000C                    _PORTB 000D                    _PORTC 000E  
                  _PORTD 000F                    _URDLH 0495                    _URDLL 0494  
                  _TRISA 008C                    _TRISB 008D                    _TRISC 008E  
                  _TRISD 008F                    _URIER 048E                    _RXNEF 2490  
                  _URLCR 048F                    _URMCR 0491                    wtemp0 007E  
        __initialization 002D             __end_of_main 0060                   ??_main 0075  
                 _ANSELA 0197                   i1l2374 0029                   i1l2911 0016  
                 i1l2923 0027                   i1l2925 0028                   _INTCON 000B  
              ??_DelayMs 0072                ??_DelayUs 0070                   _OSCCON 0099  
                 _PSINK0 019A                   _PSINK1 019B                   _PSINK2 019C  
                 _PSINK3 019D                   _URRXNE 2470                   _ad3nop 0003  
                 _toSend 0020    __end_of_POWER_INITIAL 00A4  __end_of__initialization 004F  
         __pcstackCOMMON 0070             __pidataBANK0 0000               __pbssBANK0 002B  
             __pmaintext 0052               __pintentry 0004            ?_UART_INITIAL 0070  
                _URDATAL 048C                  _DelayMs 0060                  _DelayUs 0071  
         ??_UART_INITIAL 0070                  __ptext1 00A4                  __ptext2 007A  
                __ptext3 0060                  __ptext4 0071             __size_of_ISR 0027  
   end_of_initialization 004F           __end_of_ad3nop 0004      start_initialization 002D  
         __p_ad3nop_text 0003              __end_of_ISR 002B     __end_of_UART_INITIAL 00B4  
            __pdataBANK0 0020   __size_of_POWER_INITIAL 002A              __pbssCOMMON 0075  
              ___latbits 0002                 ?_DelayMs 0070                 ?_DelayUs 0070  
          _POWER_INITIAL 007A                 DelayMs@a 0073                 DelayMs@b 0074  
               DelayUs@a 0071    __size_of_UART_INITIAL 0010              DelayMs@Time 0072  
         ?_POWER_INITIAL 0070              DelayUs@Time 0070         __size_of_DelayMs 0011  
       __size_of_DelayUs 0009             _UART_INITIAL 00A4            __size_of_main 000E  
            _receivedata 002B                 _senddata 0077                 int$flags 007E  
        ??_POWER_INITIAL 0070                 intlevel1 0000  
