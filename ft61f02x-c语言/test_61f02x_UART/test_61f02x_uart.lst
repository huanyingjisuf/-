

GNU Macro Assembler for 8 bit devices.       
                                                                                               Wed Sep 22 18:27:03 2021

GNU C Code Generator                                                 
     1                           	processor	FT61F02X
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	pa_nodes0,global,class=CODE,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 09/04/2020 
    22                           ; 
    23                           ; SFR Addresses
    24  0000                     
    25                           	psect	text0
    26  0000                     __ptext0:	
    27  001B                     _MSCKCON	set	27
    28  0019                     _CMCON0	set	25
    29  000B                     _INTCON	set	11
    30  0007                     _PORTC	set	7
    31  0005                     _PORTA	set	5
    32  0001                     _TMR0	set	1
    33  005F                     _GIE	set	95
    34  005D                     _T0IE	set	93
    35  005B                     _PAIE	set	91
    36  005A                     _T0IF	set	90
    37  0058                     _PAIF	set	88
    38  002C                     _PA4	set	44
    39  002A                     _PA2	set	42
    40  0095                     _WPUA	set	149
    41  0091                     _ANSEL	set	145
    42  008F                     _OSCCON	set	143
    43  0088                     _WPUC	set	136
    44  0087                     _TRISC	set	135
    45  0085                     _TRISA	set	133
    46  0081                     _OPTION	set	129
    47  04B2                     _IOCA2	set	1202
    48  042A                     _TRISA2	set	1066
    49                           
    50                           	psect	cinit
    51  000B                     start_initialization:	
    52                           ; #config settings
    53                           
    54  000B                     __initialization:	
    55                           
    56                           ; Clear objects allocated to COMMON
    57  000B  01F5               	clrf	__pbssCOMMON& (0+127)
    58  000C                     end_of_initialization:	
    59                           ;End of C runtime variable initialization code
    60                           
    61  000C                     __end_of__initialization:	
    62  000C  0183               	clrf	3
    63  000D  2878               	ljmp	_main	;jump to C main() function
    64                           
    65                           	psect	bssCOMMON
    66  0075                     __pbssCOMMON:	
    67  0075                     _RXFLAG:	
    68  0075                     	ds	1
    69                           
    70                           	psect	cstackCOMMON
    71  0070                     __pcstackCOMMON:	
    72  0070                     ?_POWER_INITIAL:	
    73  0070                     ?_TIMER0_INITIAL:	
    74                           ; 1 bytes @ 0x0
    75                           
    76  0070                     ?_PA2_Level_Change_INITIAL:	
    77                           ; 1 bytes @ 0x0
    78                           
    79  0070                     ?_ISR:	
    80                           ; 1 bytes @ 0x0
    81                           
    82  0070                     ??_ISR:	
    83                           ; 1 bytes @ 0x0
    84                           
    85  0070                     ?_WaitTF0:	
    86                           ; 1 bytes @ 0x0
    87                           
    88  0070                     ?_WByte:	
    89                           ; 1 bytes @ 0x0
    90                           
    91  0070                     ?_RByte:	
    92                           ; 1 bytes @ 0x0
    93                           
    94  0070                     ?_main:	
    95                           ; 1 bytes @ 0x0
    96                           
    97                           
    98                           ; 1 bytes @ 0x0
    99  0070                     	ds	2
   100  0072                     ??_POWER_INITIAL:	
   101  0072                     ??_TIMER0_INITIAL:	
   102                           ; 1 bytes @ 0x2
   103                           
   104  0072                     ??_PA2_Level_Change_INITIAL:	
   105                           ; 1 bytes @ 0x2
   106                           
   107  0072                     ??_WaitTF0:	
   108                           ; 1 bytes @ 0x2
   109                           
   110  0072                     ??_WByte:	
   111                           ; 1 bytes @ 0x2
   112                           
   113  0072                     ??_RByte:	
   114                           ; 1 bytes @ 0x2
   115                           
   116  0072                     WByte@input:	
   117                           ; 1 bytes @ 0x2
   118                           
   119  0072                     RByte@i:	
   120                           ; 1 bytes @ 0x2
   121                           
   122                           
   123                           ; 1 bytes @ 0x2
   124  0072                     	ds	1
   125  0073                     WByte@i:	
   126  0073                     RByte@Output:	
   127                           ; 1 bytes @ 0x3
   128                           
   129                           
   130                           ; 1 bytes @ 0x3
   131  0073                     	ds	1
   132  0074                     ??_main:	
   133  0074                     main@rdata:	
   134                           ; 1 bytes @ 0x4
   135                           
   136                           
   137                           ; 1 bytes @ 0x4
   138  0074                     	ds	1
   139                           
   140                           	psect	maintext
   141  0078                     __pmaintext:	
   142 ;;
   143 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   144 ;;
   145 ;; *************** function _main *****************
   146 ;; Defined at:
   147 ;;		line 205 in file "test_61f02x_UART.C"
   148 ;; Parameters:    Size  Location     Type
   149 ;;		None
   150 ;; Auto vars:     Size  Location     Type
   151 ;;  rdata           1    4[COMMON] unsigned char 
   152 ;; Return value:  Size  Location     Type
   153 ;;                  1    wreg      void 
   154 ;; Registers used:
   155 ;;		wreg, status,2, status,0, pclath, cstack
   156 ;; Tracked objects:
   157 ;;		On entry : B00/0
   158 ;;		On exit  : 300/100
   159 ;;		Unchanged: 0/0
   160 ;; Data sizes:     COMMON   BANK0   BANK1
   161 ;;      Params:         0       0       0
   162 ;;      Locals:         1       0       0
   163 ;;      Temps:          0       0       0
   164 ;;      Totals:         1       0       0
   165 ;;Total ram usage:        1 bytes
   166 ;; Hardware stack levels required when called:    3
   167 ;; This function calls:
   168 ;;		_PA2_Level_Change_INITIAL
   169 ;;		_POWER_INITIAL
   170 ;;		_RByte
   171 ;;		_TIMER0_INITIAL
   172 ;;		_WByte
   173 ;; This function is called by:
   174 ;;		Startup code after reset
   175 ;; This function uses a non-reentrant model
   176 ;;
   177                           
   178                           
   179                           ;psect for function _main
   180  0078                     _main:	
   181                           
   182                           ;test_61f02x_UART.C: 208: POWER_INITIAL();
   183                           
   184                           ;incstack = 0
   185                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   186  0078  2063               	fcall	_POWER_INITIAL
   187                           
   188                           ;test_61f02x_UART.C: 209: TIMER0_INITIAL();
   189  0079  2096               	fcall	_TIMER0_INITIAL
   190                           
   191                           ;test_61f02x_UART.C: 210: PA2_Level_Change_INITIAL();
   192  007A  2089               	fcall	_PA2_Level_Change_INITIAL
   193                           
   194                           ;test_61f02x_UART.C: 211: GIE = 1;
   195  007B  178B               	bsf	11,7	;volatile
   196                           
   197                           ;test_61f02x_UART.C: 212: T0IE = 1;
   198  007C  168B               	bsf	11,5	;volatile
   199  007D                     l1609:	
   200                           
   201                           ;test_61f02x_UART.C: 214: {
   202                           ;test_61f02x_UART.C: 215: if(RXFLAG)
   203  007D  0875               	movf	_RXFLAG,w
   204  007E  1903               	btfsc	3,2
   205  007F  287D               	goto	l1609
   206                           
   207                           ;test_61f02x_UART.C: 216: {
   208                           ;test_61f02x_UART.C: 217: rdata = RByte();
   209  0080  204A               	fcall	_RByte
   210  0081  00F4               	movwf	main@rdata
   211                           
   212                           ;test_61f02x_UART.C: 218: WByte(rdata);
   213  0082  0874               	movf	main@rdata,w
   214  0083  200E               	fcall	_WByte
   215                           
   216                           ;test_61f02x_UART.C: 220: IOCA2 =1;
   217  0084  1683               	bsf	3,5	;RP0=1, select bank1
   218  0085  1516               	bsf	22,2	;volatile
   219                           
   220                           ;test_61f02x_UART.C: 221: PAIE =1;
   221  0086  158B               	bsf	11,3	;volatile
   222                           
   223                           ;test_61f02x_UART.C: 222: RXFLAG = 0;
   224  0087  01F5               	clrf	_RXFLAG
   225  0088  287D               	goto	l1609
   226  0089                     __end_of_main:	
   227                           
   228                           	psect	text1
   229  000E                     __ptext1:	
   230 ;; *************** function _WByte *****************
   231 ;; Defined at:
   232 ;;		line 141 in file "test_61f02x_UART.C"
   233 ;; Parameters:    Size  Location     Type
   234 ;;  input           1    wreg     unsigned char 
   235 ;; Auto vars:     Size  Location     Type
   236 ;;  input           1    2[COMMON] unsigned char 
   237 ;;  i               1    3[COMMON] unsigned char 
   238 ;; Return value:  Size  Location     Type
   239 ;;                  1    wreg      void 
   240 ;; Registers used:
   241 ;;		wreg, status,2, status,0, pclath, cstack
   242 ;; Tracked objects:
   243 ;;		On entry : 200/100
   244 ;;		On exit  : 300/0
   245 ;;		Unchanged: 0/0
   246 ;; Data sizes:     COMMON   BANK0   BANK1
   247 ;;      Params:         0       0       0
   248 ;;      Locals:         2       0       0
   249 ;;      Temps:          0       0       0
   250 ;;      Totals:         2       0       0
   251 ;;Total ram usage:        2 bytes
   252 ;; Hardware stack levels used:    1
   253 ;; Hardware stack levels required when called:    2
   254 ;; This function calls:
   255 ;;		_WaitTF0
   256 ;; This function is called by:
   257 ;;		_main
   258 ;; This function uses a non-reentrant model
   259 ;;
   260                           
   261                           
   262                           ;psect for function _WByte
   263  000E                     _WByte:	
   264                           
   265                           ;incstack = 0
   266                           ; Regs used in _WByte: [wreg+status,2+status,0+pclath+cstack]
   267                           ;WByte@input stored from wreg
   268  000E  00F2               	movwf	WByte@input
   269                           
   270                           ;test_61f02x_UART.C: 144: unsigned char i=8;
   271  000F  3008               	movlw	8
   272  0010  00F3               	movwf	WByte@i
   273                           
   274                           ;test_61f02x_UART.C: 145: PA4 = 1;
   275  0011  1283               	bcf	3,5	;RP0=0, select bank0
   276  0012  1605               	bsf	5,4	;volatile
   277                           
   278                           ;test_61f02x_UART.C: 146: TMR0 = 49;
   279  0013  3031               	movlw	49
   280  0014  0081               	movwf	1	;volatile
   281                           
   282                           ;test_61f02x_UART.C: 147: T0IE = 1;
   283  0015  168B               	bsf	11,5	;volatile
   284                           
   285                           ;test_61f02x_UART.C: 148: WaitTF0();
   286  0016  209D               	fcall	_WaitTF0
   287                           
   288                           ;test_61f02x_UART.C: 149: PA4=0;
   289  0017  1283               	bcf	3,5	;RP0=0, select bank0
   290  0018  1205               	bcf	5,4	;volatile
   291                           
   292                           ;test_61f02x_UART.C: 150: WaitTF0();
   293  0019  209D               	fcall	_WaitTF0
   294                           
   295                           ;test_61f02x_UART.C: 152: while(i--)
   296  001A  2825               	goto	l1547
   297  001B                     l1093:	
   298                           
   299                           ;test_61f02x_UART.C: 153: {
   300                           ;test_61f02x_UART.C: 154: if(input&0x01)
   301  001B  1C72               	btfss	WByte@input,0
   302  001C  2820               	goto	l1094
   303                           
   304                           ;test_61f02x_UART.C: 155: {
   305                           ;test_61f02x_UART.C: 156: PA4=1;
   306  001D  1283               	bcf	3,5	;RP0=0, select bank0
   307  001E  1605               	bsf	5,4	;volatile
   308                           
   309                           ;test_61f02x_UART.C: 157: }
   310  001F  2822               	goto	l1543
   311  0020                     l1094:	
   312                           
   313                           ;test_61f02x_UART.C: 158: else
   314                           ;test_61f02x_UART.C: 159: {
   315                           ;test_61f02x_UART.C: 160: PA4 = 0;
   316  0020  1283               	bcf	3,5	;RP0=0, select bank0
   317  0021  1205               	bcf	5,4	;volatile
   318  0022                     l1543:	
   319                           
   320                           ;test_61f02x_UART.C: 161: }
   321                           ;test_61f02x_UART.C: 162: WaitTF0();
   322  0022  209D               	fcall	_WaitTF0
   323                           
   324                           ;test_61f02x_UART.C: 163: input=input>>1;
   325  0023  1003               	clrc
   326  0024  0CF2               	rrf	WByte@input,f
   327  0025                     l1547:	
   328  0025  03F3               	decf	WByte@i,f
   329  0026  0F73               	incfsz	WByte@i,w
   330  0027  281B               	goto	l1093
   331                           
   332                           ;test_61f02x_UART.C: 164: }
   333                           ;test_61f02x_UART.C: 167: PA4=(bit)1;
   334  0028  1283               	bcf	3,5	;RP0=0, select bank0
   335  0029  1605               	bsf	5,4	;volatile
   336                           
   337                           ;test_61f02x_UART.C: 168: T0IE=0;
   338  002A  128B               	bcf	11,5	;volatile
   339  002B  0008               	return
   340  002C                     __end_of_WByte:	
   341                           
   342                           	psect	text2
   343  0096                     __ptext2:	
   344 ;; *************** function _TIMER0_INITIAL *****************
   345 ;; Defined at:
   346 ;;		line 65 in file "test_61f02x_UART.C"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;		None
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      void 
   353 ;; Registers used:
   354 ;;		wreg, status,2
   355 ;; Tracked objects:
   356 ;;		On entry : B00/0
   357 ;;		On exit  : B00/0
   358 ;;		Unchanged: 800/0
   359 ;; Data sizes:     COMMON   BANK0   BANK1
   360 ;;      Params:         0       0       0
   361 ;;      Locals:         0       0       0
   362 ;;      Temps:          0       0       0
   363 ;;      Totals:         0       0       0
   364 ;;Total ram usage:        0 bytes
   365 ;; Hardware stack levels used:    1
   366 ;; Hardware stack levels required when called:    1
   367 ;; This function calls:
   368 ;;		Nothing
   369 ;; This function is called by:
   370 ;;		_main
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           
   374                           
   375                           ;psect for function _TIMER0_INITIAL
   376  0096                     _TIMER0_INITIAL:	
   377                           
   378                           ;test_61f02x_UART.C: 67: OPTION = 0B00000000;
   379                           
   380                           ;incstack = 0
   381                           ; Regs used in _TIMER0_INITIAL: [wreg+status,2]
   382  0096  1683               	bsf	3,5	;RP0=1, select bank1
   383  0097  0181               	clrf	1	;volatile
   384                           
   385                           ;test_61f02x_UART.C: 74: TMR0 = 49;
   386  0098  3031               	movlw	49
   387  0099  1283               	bcf	3,5	;RP0=0, select bank0
   388  009A  0081               	movwf	1	;volatile
   389                           
   390                           ;test_61f02x_UART.C: 75: T0IF = 0;
   391  009B  110B               	bcf	11,2	;volatile
   392  009C  0008               	return
   393  009D                     __end_of_TIMER0_INITIAL:	
   394                           
   395                           	psect	text3
   396  004A                     __ptext3:	
   397 ;; *************** function _RByte *****************
   398 ;; Defined at:
   399 ;;		line 176 in file "test_61f02x_UART.C"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;  Output          1    3[COMMON] unsigned char 
   404 ;;  i               1    2[COMMON] unsigned char 
   405 ;; Return value:  Size  Location     Type
   406 ;;                  1    wreg      unsigned char 
   407 ;; Registers used:
   408 ;;		wreg, status,2, status,0, pclath, cstack
   409 ;; Tracked objects:
   410 ;;		On entry : 200/100
   411 ;;		On exit  : 200/0
   412 ;;		Unchanged: 0/0
   413 ;; Data sizes:     COMMON   BANK0   BANK1
   414 ;;      Params:         0       0       0
   415 ;;      Locals:         2       0       0
   416 ;;      Temps:          0       0       0
   417 ;;      Totals:         2       0       0
   418 ;;Total ram usage:        2 bytes
   419 ;; Hardware stack levels used:    1
   420 ;; Hardware stack levels required when called:    2
   421 ;; This function calls:
   422 ;;		_WaitTF0
   423 ;; This function is called by:
   424 ;;		_main
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           
   429                           ;psect for function _RByte
   430  004A                     _RByte:	
   431  004A  3008               	movlw	8
   432                           
   433                           ;test_61f02x_UART.C: 178: unsigned char Output=0;
   434                           
   435                           ;incstack = 0
   436                           ; Regs used in _RByte: [wreg+status,2+status,0+pclath+cstack]
   437  004B  01F3               	clrf	RByte@Output
   438                           
   439                           ;test_61f02x_UART.C: 179: unsigned char i=8;
   440  004C  00F2               	movwf	RByte@i
   441                           
   442                           ;test_61f02x_UART.C: 180: T0IE=1;
   443  004D  168B               	bsf	11,5	;volatile
   444                           
   445                           ;test_61f02x_UART.C: 181: TMR0 = 49;
   446  004E  3031               	movlw	49
   447  004F  1283               	bcf	3,5	;RP0=0, select bank0
   448  0050  0081               	movwf	1	;volatile
   449                           
   450                           ;test_61f02x_UART.C: 182: WaitTF0();
   451  0051  209D               	fcall	_WaitTF0
   452                           
   453                           ;test_61f02x_UART.C: 183: T0IE=1;
   454  0052  168B               	bsf	11,5	;volatile
   455                           
   456                           ;test_61f02x_UART.C: 184: TMR0 = 49;
   457  0053  3031               	movlw	49
   458  0054  1283               	bcf	3,5	;RP0=0, select bank0
   459  0055  0081               	movwf	1	;volatile
   460                           
   461                           ;test_61f02x_UART.C: 187: while(i--)
   462  0056  285C               	goto	l1563
   463  0057                     l1101:	
   464                           
   465                           ;test_61f02x_UART.C: 188: {
   466                           ;test_61f02x_UART.C: 189: Output >>=1;
   467  0057  1003               	clrc
   468  0058  0CF3               	rrf	RByte@Output,f
   469                           
   470                           ;test_61f02x_UART.C: 190: if(PA2)
   471  0059  1283               	bcf	3,5	;RP0=0, select bank0
   472  005A  1905               	btfsc	5,2	;volatile
   473                           
   474                           ;test_61f02x_UART.C: 191: {
   475                           ;test_61f02x_UART.C: 192: Output |=0x80;
   476  005B  17F3               	bsf	RByte@Output,7
   477  005C                     l1563:	
   478                           
   479                           ;test_61f02x_UART.C: 185: WaitTF0();
   480  005C  209D               	fcall	_WaitTF0
   481  005D  03F2               	decf	RByte@i,f
   482  005E  0F72               	incfsz	RByte@i,w
   483  005F  2857               	goto	l1101
   484                           
   485                           ;test_61f02x_UART.C: 195: }
   486                           ;test_61f02x_UART.C: 196: T0IE=0;
   487  0060  128B               	bcf	11,5	;volatile
   488                           
   489                           ;test_61f02x_UART.C: 197: return Output;
   490  0061  0873               	movf	RByte@Output,w
   491  0062  0008               	return
   492  0063                     __end_of_RByte:	
   493                           
   494                           	psect	text4
   495  009D                     __ptext4:	
   496 ;; *************** function _WaitTF0 *****************
   497 ;; Defined at:
   498 ;;		line 130 in file "test_61f02x_UART.C"
   499 ;; Parameters:    Size  Location     Type
   500 ;;		None
   501 ;; Auto vars:     Size  Location     Type
   502 ;;		None
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		None
   507 ;; Tracked objects:
   508 ;;		On entry : 200/0
   509 ;;		On exit  : 200/0
   510 ;;		Unchanged: 200/0
   511 ;; Data sizes:     COMMON   BANK0   BANK1
   512 ;;      Params:         0       0       0
   513 ;;      Locals:         0       0       0
   514 ;;      Temps:          0       0       0
   515 ;;      Totals:         0       0       0
   516 ;;Total ram usage:        0 bytes
   517 ;; Hardware stack levels used:    1
   518 ;; Hardware stack levels required when called:    1
   519 ;; This function calls:
   520 ;;		Nothing
   521 ;; This function is called by:
   522 ;;		_WByte
   523 ;;		_RByte
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           
   528                           ;psect for function _WaitTF0
   529  009D                     _WaitTF0:	
   530  009D                     l1086:	
   531                           ;test_61f02x_UART.C: 132: while(T0IE);
   532                           
   533                           ;incstack = 0
   534                           ; Regs used in _WaitTF0: []
   535                           
   536  009D  1A8B               	btfsc	11,5	;volatile
   537  009E  289D               	goto	l1086
   538                           
   539                           ;test_61f02x_UART.C: 133: T0IE=1;
   540  009F  168B               	bsf	11,5	;volatile
   541  00A0  0008               	return
   542  00A1                     __end_of_WaitTF0:	
   543                           
   544                           	psect	text5
   545  0063                     __ptext5:	
   546 ;; *************** function _POWER_INITIAL *****************
   547 ;; Defined at:
   548 ;;		line 39 in file "test_61f02x_UART.C"
   549 ;; Parameters:    Size  Location     Type
   550 ;;		None
   551 ;; Auto vars:     Size  Location     Type
   552 ;;		None
   553 ;; Return value:  Size  Location     Type
   554 ;;                  1    wreg      void 
   555 ;; Registers used:
   556 ;;		wreg, status,2
   557 ;; Tracked objects:
   558 ;;		On entry : B00/0
   559 ;;		On exit  : B00/0
   560 ;;		Unchanged: 800/0
   561 ;; Data sizes:     COMMON   BANK0   BANK1
   562 ;;      Params:         0       0       0
   563 ;;      Locals:         0       0       0
   564 ;;      Temps:          0       0       0
   565 ;;      Totals:         0       0       0
   566 ;;Total ram usage:        0 bytes
   567 ;; Hardware stack levels used:    1
   568 ;; Hardware stack levels required when called:    1
   569 ;; This function calls:
   570 ;;		Nothing
   571 ;; This function is called by:
   572 ;;		_main
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576                           
   577                           ;psect for function _POWER_INITIAL
   578  0063                     _POWER_INITIAL:	
   579                           
   580                           ;test_61f02x_UART.C: 41: OSCCON = 0B01110001;
   581                           
   582                           ;incstack = 0
   583                           ; Regs used in _POWER_INITIAL: [wreg+status,2]
   584  0063  3071               	movlw	113
   585  0064  1683               	bsf	3,5	;RP0=1, select bank1
   586  0065  008F               	movwf	15	;volatile
   587                           
   588                           ;test_61f02x_UART.C: 42: INTCON = 0;
   589  0066  018B               	clrf	11	;volatile
   590                           
   591                           ;test_61f02x_UART.C: 44: PORTA = 0B00000000;
   592  0067  1283               	bcf	3,5	;RP0=0, select bank0
   593  0068  0185               	clrf	5	;volatile
   594                           
   595                           ;test_61f02x_UART.C: 45: TRISA = 0B00000100;
   596  0069  3004               	movlw	4
   597  006A  1683               	bsf	3,5	;RP0=1, select bank1
   598  006B  0085               	movwf	5	;volatile
   599                           
   600                           ;test_61f02x_UART.C: 46: PORTC = 0B00000000;
   601  006C  1283               	bcf	3,5	;RP0=0, select bank0
   602  006D  0187               	clrf	7	;volatile
   603                           
   604                           ;test_61f02x_UART.C: 47: TRISC = 0B00000000;
   605  006E  1683               	bsf	3,5	;RP0=1, select bank1
   606  006F  0187               	clrf	7	;volatile
   607                           
   608                           ;test_61f02x_UART.C: 49: WPUA = 0B00000100;
   609  0070  0095               	movwf	21	;volatile
   610                           
   611                           ;test_61f02x_UART.C: 50: WPUC = 0B00000000;
   612  0071  0188               	clrf	8	;volatile
   613                           
   614                           ;test_61f02x_UART.C: 51: OPTION = 0B00000000;
   615  0072  0181               	clrf	1	;volatile
   616                           
   617                           ;test_61f02x_UART.C: 52: MSCKCON = 0B00000000;
   618  0073  1283               	bcf	3,5	;RP0=0, select bank0
   619  0074  019B               	clrf	27	;volatile
   620                           
   621                           ;test_61f02x_UART.C: 57: CMCON0 = 0B00000111;
   622  0075  3007               	movlw	7
   623  0076  0099               	movwf	25	;volatile
   624  0077  0008               	return
   625  0078                     __end_of_POWER_INITIAL:	
   626                           
   627                           	psect	text6
   628  0089                     __ptext6:	
   629 ;; *************** function _PA2_Level_Change_INITIAL *****************
   630 ;; Defined at:
   631 ;;		line 83 in file "test_61f02x_UART.C"
   632 ;; Parameters:    Size  Location     Type
   633 ;;		None
   634 ;; Auto vars:     Size  Location     Type
   635 ;;		None
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      void 
   638 ;; Registers used:
   639 ;;		wreg, status,2, status,0
   640 ;; Tracked objects:
   641 ;;		On entry : B00/0
   642 ;;		On exit  : B00/100
   643 ;;		Unchanged: 800/0
   644 ;; Data sizes:     COMMON   BANK0   BANK1
   645 ;;      Params:         0       0       0
   646 ;;      Locals:         0       0       0
   647 ;;      Temps:          0       0       0
   648 ;;      Totals:         0       0       0
   649 ;;Total ram usage:        0 bytes
   650 ;; Hardware stack levels used:    1
   651 ;; Hardware stack levels required when called:    1
   652 ;; This function calls:
   653 ;;		Nothing
   654 ;; This function is called by:
   655 ;;		_main
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           
   660                           ;psect for function _PA2_Level_Change_INITIAL
   661  0089                     _PA2_Level_Change_INITIAL:	
   662                           
   663                           ;test_61f02x_UART.C: 85: TRISA2 =1;
   664                           
   665                           ;incstack = 0
   666                           ; Regs used in _PA2_Level_Change_INITIAL: [wreg+status,2+status,0]
   667  0089  1683               	bsf	3,5	;RP0=1, select bank1
   668  008A  1505               	bsf	5,2	;volatile
   669                           
   670                           ;test_61f02x_UART.C: 86: ANSEL &= 0xeb;
   671  008B  30EB               	movlw	235
   672  008C  0591               	andwf	17,f	;volatile
   673                           
   674                           ;test_61f02x_UART.C: 87: CMCON0 = 0B00000111;
   675  008D  3007               	movlw	7
   676  008E  1283               	bcf	3,5	;RP0=0, select bank0
   677  008F  0099               	movwf	25	;volatile
   678                           
   679                           ;test_61f02x_UART.C: 88: ReadAPin = PORTA;
   680  0090  0805               	movf	5,w	;volatile
   681                           
   682                           ;test_61f02x_UART.C: 89: PAIF = 0;
   683  0091  100B               	bcf	11,0	;volatile
   684                           
   685                           ;test_61f02x_UART.C: 90: IOCA2 = 1;
   686  0092  1683               	bsf	3,5	;RP0=1, select bank1
   687  0093  1516               	bsf	22,2	;volatile
   688                           
   689                           ;test_61f02x_UART.C: 91: PAIE = 1;
   690  0094  158B               	bsf	11,3	;volatile
   691  0095  0008               	return
   692  0096                     __end_of_PA2_Level_Change_INITIAL:	
   693                           
   694                           	psect	text7
   695  002C                     __ptext7:	
   696 ;; *************** function _ISR *****************
   697 ;; Defined at:
   698 ;;		line 100 in file "test_61f02x_UART.C"
   699 ;; Parameters:    Size  Location     Type
   700 ;;		None
   701 ;; Auto vars:     Size  Location     Type
   702 ;;		None
   703 ;; Return value:  Size  Location     Type
   704 ;;                  1    wreg      void 
   705 ;; Registers used:
   706 ;;		wreg
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 0/0
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMMON   BANK0   BANK1
   712 ;;      Params:         0       0       0
   713 ;;      Locals:         0       0       0
   714 ;;      Temps:          2       0       0
   715 ;;      Totals:         2       0       0
   716 ;;Total ram usage:        2 bytes
   717 ;; Hardware stack levels used:    1
   718 ;; This function calls:
   719 ;;		Nothing
   720 ;; This function is called by:
   721 ;;		Interrupt level 1
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           
   726                           ;psect for function _ISR
   727  002C                     _ISR:	
   728                           
   729                           ;test_61f02x_UART.C: 103: if(T0IE && T0IF)
   730  002C  1A8B               	btfsc	11,5	;volatile
   731  002D  1D0B               	btfss	11,2	;volatile
   732  002E  2835               	goto	i1l1585
   733                           
   734                           ;test_61f02x_UART.C: 104: {
   735                           ;test_61f02x_UART.C: 105: TMR0 = 49;
   736  002F  3031               	movlw	49
   737  0030  1283               	bcf	3,5	;RP0=0, select bank0
   738  0031  1303               	bcf	3,6	;RP1=0, select bank0
   739  0032  0081               	movwf	1	;volatile
   740                           
   741                           ;test_61f02x_UART.C: 107: T0IF = 0;
   742  0033  110B               	bcf	11,2	;volatile
   743                           
   744                           ;test_61f02x_UART.C: 108: T0IE = 0;
   745  0034  128B               	bcf	11,5	;volatile
   746  0035                     i1l1585:	
   747                           
   748                           ;test_61f02x_UART.C: 109: }
   749                           ;test_61f02x_UART.C: 112: if(PAIE && PAIF)
   750  0035  198B               	btfsc	11,3	;volatile
   751  0036  1C0B               	btfss	11,0	;volatile
   752  0037  2843               	goto	i1l1083
   753                           
   754                           ;test_61f02x_UART.C: 113: {
   755                           ;test_61f02x_UART.C: 114: ReadAPin = PORTA;
   756  0038  1283               	bcf	3,5	;RP0=0, select bank0
   757  0039  1303               	bcf	3,6	;RP1=0, select bank0
   758  003A  0805               	movf	5,w	;volatile
   759                           
   760                           ;test_61f02x_UART.C: 115: PAIF = 0;
   761  003B  100B               	bcf	11,0	;volatile
   762                           
   763                           ;test_61f02x_UART.C: 116: if(PA2 == 0)
   764  003C  1905               	btfsc	5,2	;volatile
   765  003D  2843               	goto	i1l1083
   766                           
   767                           ;test_61f02x_UART.C: 117: {
   768                           ;test_61f02x_UART.C: 118: PAIE = 0;
   769  003E  118B               	bcf	11,3	;volatile
   770                           
   771                           ;test_61f02x_UART.C: 119: IOCA2 = 0;
   772  003F  1683               	bsf	3,5	;RP0=1, select bank1
   773  0040  1116               	bcf	22,2	;volatile
   774                           
   775                           ;test_61f02x_UART.C: 120: RXFLAG = 1;
   776  0041  01F5               	clrf	_RXFLAG
   777  0042  0AF5               	incf	_RXFLAG,f
   778  0043                     i1l1083:	
   779  0043  0871               	movf	??_ISR+1,w
   780  0044  008A               	movwf	10
   781  0045  0E70               	swapf	??_ISR^(0+-128),w
   782  0046  0083               	movwf	3
   783  0047  0EFE               	swapf	126,f
   784  0048  0E7E               	swapf	126,w
   785  0049  0009               	retfie
   786  004A                     __end_of_ISR:	
   787  007E                     btemp	set	126	;btemp
   788  007E                     wtemp0	set	126
   789                           
   790                           	psect	intentry
   791  0004                     __pintentry:	
   792                           ;incstack = 0
   793                           ; Regs used in _ISR: [wreg]
   794                           
   795  0004                     interrupt_function:	
   796  007E                     saved_w	set	btemp
   797  0004  00FE               	movwf	btemp
   798  0005  0E03               	swapf	3,w
   799  0006  00F0               	movwf	??_ISR
   800  0007  080A               	movf	10,w
   801  0008  00F1               	movwf	??_ISR+1
   802  0009  282C               	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       6
    BANK0            80      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_RByte
    _main->_WByte

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      75
                                              4 COMMON     1     1      0
           _PA2_Level_Change_INITIAL
                      _POWER_INITIAL
                              _RByte
                     _TIMER0_INITIAL
                              _WByte
 ---------------------------------------------------------------------------------
 (1) _WByte                                                2     2      0      30
                                              2 COMMON     2     2      0
                            _WaitTF0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_INITIAL                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RByte                                                2     2      0      30
                                              2 COMMON     2     2      0
                            _WaitTF0
 ---------------------------------------------------------------------------------
 (2) _WaitTF0                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POWER_INITIAL                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PA2_Level_Change_INITIAL                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PA2_Level_Change_INITIAL
   _POWER_INITIAL
   _RByte
     _WaitTF0
   _TIMER0_INITIAL
   _WByte
     _WaitTF0

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       0       4        0.0%
BITBANK1            20      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               20      0       0       6        0.0%
ABS                  0      0       6       7        0.0%
DATA                 0      0       6       8        0.0%


GNU Macro Assembler for 8 bit devices.     
Symbol Table                                                                                   Wed Sep 22 18:27:03 2021

                              _GIE 005F                                _PA2 002A  
                              _PA4 002C                                _ISR 002C  
                             ?_ISR 0070                               l1101 0057  
                             l1093 001B                               l1086 009D  
                             l1094 0020                               l1543 0022  
                             l1609 007D                               l1563 005C  
                             l1547 0025                               _T0IE 005D  
                             _T0IF 005A                               _PAIE 005B  
                             _PAIF 0058                               _TMR0 0001  
                             _WPUA 0095                               _WPUC 0088  
                             _main 0078                               btemp 007E  
                             start 000A                              ??_ISR 0070  
                  __end_of_WaitTF0 00A1                     _TIMER0_INITIAL 0096  
                            ?_main 0070                              _ANSEL 0091  
                            _IOCA2 04B2                              _PORTA 0005  
                            _PORTC 0007                              _TRISA 0085  
                            _TRISC 0087                              _RByte 004A  
                            _WByte 000E                              pclath 000A  
                            status 0003                              wtemp0 007E  
                  __initialization 000B                       __end_of_main 0089  
           __end_of_TIMER0_INITIAL 009D                             ??_main 0074  
                           ?_RByte 0070                             ?_WByte 0070  
                           _CMCON0 0019                             i1l1083 0043  
                           i1l1585 0035                             _INTCON 000B  
                           RByte@i 0072                             _OSCCON 008F  
                           _OPTION 0081                             _TRISA2 042A  
                           _RXFLAG 0075                             WByte@i 0073  
                        ??_WaitTF0 0072                    ?_TIMER0_INITIAL 0070  
__size_of_PA2_Level_Change_INITIAL 000D          ?_PA2_Level_Change_INITIAL 0070  
                           saved_w 007E              __end_of_POWER_INITIAL 0078  
          __end_of__initialization 000C                      __end_of_RByte 0063  
                    __end_of_WByte 002C                     __pcstackCOMMON 0070  
                          ??_RByte 0072                            ??_WByte 0072  
                       __pmaintext 0078                         __pintentry 0004  
                          _MSCKCON 001B                            _WaitTF0 009D  
                          __ptext0 0000                            __ptext1 000E  
                          __ptext2 0096                            __ptext3 004A  
                          __ptext4 009D                            __ptext5 0063  
                          __ptext6 0089                            __ptext7 002C  
                     __size_of_ISR 001E               end_of_initialization 000C  
 __end_of_PA2_Level_Change_INITIAL 0096                   ??_TIMER0_INITIAL 0072  
              start_initialization 000B                        __end_of_ISR 004A  
         _PA2_Level_Change_INITIAL 0089             __size_of_POWER_INITIAL 0015  
                      __pbssCOMMON 0075                          ___latbits 0000  
                         ?_WaitTF0 0070                     __size_of_RByte 0019  
                   __size_of_WByte 001E                  interrupt_function 0004  
                    _POWER_INITIAL 0063                          main@rdata 0074  
                   ?_POWER_INITIAL 0070                        RByte@Output 0073  
                 __size_of_WaitTF0 0004         ??_PA2_Level_Change_INITIAL 0072  
                    __size_of_main 0011            __size_of_TIMER0_INITIAL 0007  
                  ??_POWER_INITIAL 0072                           intlevel1 0000  
                       WByte@input 0072  
