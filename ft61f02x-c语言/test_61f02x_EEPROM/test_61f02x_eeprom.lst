

GNU Macro Assembler for 8 bit devices.       
                                                                                               Thu Oct 14 10:06:56 2021

GNU C Code Generator                                                 
     1                           	processor	FT61F02X
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	pa_nodes0,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 09/04/2020 
    17                           ; 
    18                           ; SFR Addresses
    19  0000                     
    20                           	psect	text0
    21  0000                     __ptext0:	
    22  001B                     _MSCKCON	set	27
    23  0019                     _CMCON0	set	25
    24  000B                     _INTCON	set	11
    25  0007                     _PORTC	set	7
    26  0005                     _PORTA	set	5
    27  0067                     _EEIF	set	103
    28  005F                     _GIE	set	95
    29  009C                     _EECON1	set	156
    30  009B                     _EEADR	set	155
    31  009A                     _EEDAT	set	154
    32  0095                     _WPUA	set	149
    33  008F                     _OSCCON	set	143
    34  0088                     _WPUC	set	136
    35  0087                     _TRISC	set	135
    36  0085                     _TRISA	set	133
    37  0081                     _OPTION	set	129
    38  04E8                     _WR	set	1256
    39  04E0                     _RD	set	1248
    40                           
    41                           	psect	cinit
    42  07FD                     start_initialization:	
    43                           ; #config settings
    44                           
    45  07FD                     __initialization:	
    46                           
    47                           ; Clear objects allocated to COMMON
    48  07FD  01F2               	clrf	__pbssCOMMON& (0+127)
    49  07FE                     end_of_initialization:	
    50                           ;End of C runtime variable initialization code
    51                           
    52  07FE                     __end_of__initialization:	
    53  07FE  0183               	clrf	3
    54  07FF  2FC3               	ljmp	_main	;jump to C main() function
    55                           
    56                           	psect	bssCOMMON
    57  0072                     __pbssCOMMON:	
    58  0072                     _EEReadData:	
    59  0072                     	ds	1
    60                           
    61                           	psect	cstackCOMMON
    62  0070                     __pcstackCOMMON:	
    63  0070                     ?_POWER_INITIAL:	
    64  0070                     ??_POWER_INITIAL:	
    65                           ; 1 bytes @ 0x0
    66                           
    67  0070                     ?_EEPROMread:	
    68                           ; 1 bytes @ 0x0
    69                           
    70  0070                     ??_EEPROMread:	
    71                           ; 1 bytes @ 0x0
    72                           
    73  0070                     ?_EEPROMwrite:	
    74                           ; 1 bytes @ 0x0
    75                           
    76  0070                     ?_main:	
    77                           ; 1 bytes @ 0x0
    78                           
    79  0070                     EEPROMread@EEAddr:	
    80                           ; 1 bytes @ 0x0
    81                           
    82  0070                     EEPROMwrite@Data:	
    83                           ; 1 bytes @ 0x0
    84                           
    85                           
    86                           ; 1 bytes @ 0x0
    87  0070                     	ds	1
    88  0071                     ??_EEPROMwrite:	
    89  0071                     EEPROMread@ReEEPROMread:	
    90                           ; 1 bytes @ 0x1
    91                           
    92  0071                     EEPROMwrite@EEAddr:	
    93                           ; 1 bytes @ 0x1
    94                           
    95                           
    96                           ; 1 bytes @ 0x1
    97  0071                     	ds	1
    98  0072                     ??_main:	
    99                           
   100                           	psect	maintext
   101  07C3                     __pmaintext:	
   102                           ; 1 bytes @ 0x2
   103 ;;
   104 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   105 ;;
   106 ;; *************** function _main *****************
   107 ;; Defined at:
   108 ;;		line 91 in file "test_61f02x_EEPROM.C"
   109 ;; Parameters:    Size  Location     Type
   110 ;;		None
   111 ;; Auto vars:     Size  Location     Type
   112 ;;		None
   113 ;; Return value:  Size  Location     Type
   114 ;;                  1    wreg      void 
   115 ;; Registers used:
   116 ;;		wreg, status,2, status,0, pclath, cstack
   117 ;; Tracked objects:
   118 ;;		On entry : B00/0
   119 ;;		On exit  : 0/0
   120 ;;		Unchanged: 0/0
   121 ;; Data sizes:     COMMON   BANK0   BANK1
   122 ;;      Params:         0       0       0
   123 ;;      Locals:         0       0       0
   124 ;;      Temps:          0       0       0
   125 ;;      Totals:         0       0       0
   126 ;;Total ram usage:        0 bytes
   127 ;; Hardware stack levels required when called:    1
   128 ;; This function calls:
   129 ;;		_EEPROMread
   130 ;;		_EEPROMwrite
   131 ;;		_POWER_INITIAL
   132 ;; This function is called by:
   133 ;;		Startup code after reset
   134 ;; This function uses a non-reentrant model
   135 ;;
   136                           
   137                           
   138                           ;psect for function _main
   139  07C3                     _main:	
   140                           
   141                           ;test_61f02x_EEPROM.C: 93: POWER_INITIAL();
   142                           
   143                           ;incstack = 0
   144                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   145  07C3  27E8               	fcall	_POWER_INITIAL
   146                           
   147                           ;test_61f02x_EEPROM.C: 94: EEPROMwrite(0xff,0xaa);
   148  07C4  30AA               	movlw	170
   149  07C5  00F0               	movwf	EEPROMwrite@Data
   150  07C6  30FF               	movlw	255
   151  07C7  27D5               	fcall	_EEPROMwrite
   152                           
   153                           ;test_61f02x_EEPROM.C: 95: EEPROMwrite(0xff,0xaa);
   154  07C8  30AA               	movlw	170
   155  07C9  00F0               	movwf	EEPROMwrite@Data
   156  07CA  30FF               	movlw	255
   157  07CB  27D5               	fcall	_EEPROMwrite
   158                           
   159                           ;test_61f02x_EEPROM.C: 97: EEReadData = EEPROMread(0x12);
   160  07CC  3012               	movlw	18
   161  07CD  27BD               	fcall	_EEPROMread
   162  07CE  00F2               	movwf	_EEReadData
   163                           
   164                           ;test_61f02x_EEPROM.C: 98: EEPROMwrite(0x13,~EEReadData);
   165  07CF  0972               	comf	_EEReadData,w
   166  07D0  00F0               	movwf	EEPROMwrite@Data
   167  07D1  3013               	movlw	19
   168  07D2  27D5               	fcall	_EEPROMwrite
   169  07D3                     l1521:	
   170                           
   171                           ;test_61f02x_EEPROM.C: 100: {
   172                           ;test_61f02x_EEPROM.C: 101: __nop();
   173  07D3  0000               	nop
   174  07D4  2FD3               	goto	l1521
   175  07D5                     __end_of_main:	
   176                           
   177                           	psect	text1
   178  07E8                     __ptext1:	
   179 ;; *************** function _POWER_INITIAL *****************
   180 ;; Defined at:
   181 ;;		line 32 in file "test_61f02x_EEPROM.C"
   182 ;; Parameters:    Size  Location     Type
   183 ;;		None
   184 ;; Auto vars:     Size  Location     Type
   185 ;;		None
   186 ;; Return value:  Size  Location     Type
   187 ;;                  1    wreg      void 
   188 ;; Registers used:
   189 ;;		wreg, status,2
   190 ;; Tracked objects:
   191 ;;		On entry : B00/0
   192 ;;		On exit  : B00/0
   193 ;;		Unchanged: 800/0
   194 ;; Data sizes:     COMMON   BANK0   BANK1
   195 ;;      Params:         0       0       0
   196 ;;      Locals:         0       0       0
   197 ;;      Temps:          0       0       0
   198 ;;      Totals:         0       0       0
   199 ;;Total ram usage:        0 bytes
   200 ;; Hardware stack levels used:    1
   201 ;; This function calls:
   202 ;;		Nothing
   203 ;; This function is called by:
   204 ;;		_main
   205 ;; This function uses a non-reentrant model
   206 ;;
   207                           
   208                           
   209                           ;psect for function _POWER_INITIAL
   210  07E8                     _POWER_INITIAL:	
   211                           
   212                           ;test_61f02x_EEPROM.C: 34: OSCCON = 0B01110001;
   213                           
   214                           ;incstack = 0
   215                           ; Regs used in _POWER_INITIAL: [wreg+status,2]
   216  07E8  3071               	movlw	113
   217  07E9  1683               	bsf	3,5	;RP0=1, select bank1
   218  07EA  008F               	movwf	15	;volatile
   219                           
   220                           ;test_61f02x_EEPROM.C: 35: INTCON = 0;
   221  07EB  018B               	clrf	11	;volatile
   222                           
   223                           ;test_61f02x_EEPROM.C: 36: PORTA = 0B00000000;
   224  07EC  1283               	bcf	3,5	;RP0=0, select bank0
   225  07ED  0185               	clrf	5	;volatile
   226                           
   227                           ;test_61f02x_EEPROM.C: 37: TRISA = 0B00000000;
   228  07EE  1683               	bsf	3,5	;RP0=1, select bank1
   229  07EF  0185               	clrf	5	;volatile
   230                           
   231                           ;test_61f02x_EEPROM.C: 38: PORTC = 0B00000000;
   232  07F0  1283               	bcf	3,5	;RP0=0, select bank0
   233  07F1  0187               	clrf	7	;volatile
   234                           
   235                           ;test_61f02x_EEPROM.C: 39: TRISC = 0B00000000;
   236  07F2  1683               	bsf	3,5	;RP0=1, select bank1
   237  07F3  0187               	clrf	7	;volatile
   238                           
   239                           ;test_61f02x_EEPROM.C: 40: WPUA = 0;
   240  07F4  0195               	clrf	21	;volatile
   241                           
   242                           ;test_61f02x_EEPROM.C: 41: WPUC = 0;
   243  07F5  0188               	clrf	8	;volatile
   244                           
   245                           ;test_61f02x_EEPROM.C: 43: OPTION = 0B00001000;
   246  07F6  3008               	movlw	8
   247  07F7  0081               	movwf	1	;volatile
   248                           
   249                           ;test_61f02x_EEPROM.C: 44: MSCKCON = 0B00000000;
   250  07F8  1283               	bcf	3,5	;RP0=0, select bank0
   251  07F9  019B               	clrf	27	;volatile
   252                           
   253                           ;test_61f02x_EEPROM.C: 48: CMCON0 = 0B00000111;
   254  07FA  3007               	movlw	7
   255  07FB  0099               	movwf	25	;volatile
   256  07FC  0008               	return
   257  07FD                     __end_of_POWER_INITIAL:	
   258                           
   259                           	psect	text2
   260  07D5                     __ptext2:	
   261 ;; *************** function _EEPROMwrite *****************
   262 ;; Defined at:
   263 ;;		line 73 in file "test_61f02x_EEPROM.C"
   264 ;; Parameters:    Size  Location     Type
   265 ;;  EEAddr          1    wreg     unsigned char 
   266 ;;  Data            1    0[COMMON] unsigned char 
   267 ;; Auto vars:     Size  Location     Type
   268 ;;  EEAddr          1    1[COMMON] unsigned char 
   269 ;; Return value:  Size  Location     Type
   270 ;;                  1    wreg      void 
   271 ;; Registers used:
   272 ;;		wreg
   273 ;; Tracked objects:
   274 ;;		On entry : 200/0
   275 ;;		On exit  : 300/100
   276 ;;		Unchanged: 0/0
   277 ;; Data sizes:     COMMON   BANK0   BANK1
   278 ;;      Params:         1       0       0
   279 ;;      Locals:         1       0       0
   280 ;;      Temps:          0       0       0
   281 ;;      Totals:         2       0       0
   282 ;;Total ram usage:        2 bytes
   283 ;; Hardware stack levels used:    1
   284 ;; This function calls:
   285 ;;		Nothing
   286 ;; This function is called by:
   287 ;;		_main
   288 ;; This function uses a non-reentrant model
   289 ;;
   290                           
   291                           
   292                           ;psect for function _EEPROMwrite
   293  07D5                     _EEPROMwrite:	
   294                           
   295                           ;incstack = 0
   296                           ; Regs used in _EEPROMwrite: [wreg]
   297                           ;EEPROMwrite@EEAddr stored from wreg
   298  07D5  00F1               	movwf	EEPROMwrite@EEAddr
   299                           
   300                           ;test_61f02x_EEPROM.C: 75: GIE = 0;
   301  07D6  138B               	bcf	11,7	;volatile
   302  07D7                     l1075:	
   303                           ;test_61f02x_EEPROM.C: 76: while(GIE);
   304                           
   305  07D7  1B8B               	btfsc	11,7	;volatile
   306  07D8  2FD7               	goto	l1075
   307                           
   308                           ;test_61f02x_EEPROM.C: 77: EEADR = EEAddr;
   309  07D9  0871               	movf	EEPROMwrite@EEAddr,w
   310  07DA  1683               	bsf	3,5	;RP0=1, select bank1
   311  07DB  009B               	movwf	27	;volatile
   312                           
   313                           ;test_61f02x_EEPROM.C: 78: EEDAT = Data;
   314  07DC  0870               	movf	EEPROMwrite@Data,w
   315  07DD  009A               	movwf	26	;volatile
   316                           
   317                           ;test_61f02x_EEPROM.C: 79: EEIF = 0;
   318  07DE  1283               	bcf	3,5	;RP0=0, select bank0
   319  07DF  138C               	bcf	12,7	;volatile
   320                           
   321                           ;test_61f02x_EEPROM.C: 80: EECON1 = 0x34;
   322  07E0  3034               	movlw	52
   323  07E1  1683               	bsf	3,5	;RP0=1, select bank1
   324  07E2  009C               	movwf	28	;volsfr
   325                           
   326                           ;test_61f02x_EEPROM.C: 81: WR = 1;
   327  07E3  141D               	bsf	29,0	;volsfr
   328  07E4                     l1078:	
   329                           ;test_61f02x_EEPROM.C: 82: while(WR);
   330                           
   331  07E4  181D               	btfsc	29,0	;volsfr
   332  07E5  2FE4               	goto	l1078
   333                           
   334                           ;test_61f02x_EEPROM.C: 83: GIE = 1;
   335  07E6  178B               	bsf	11,7	;volatile
   336  07E7  0008               	return
   337  07E8                     __end_of_EEPROMwrite:	
   338                           
   339                           	psect	text3
   340  07BD                     __ptext3:	
   341 ;; *************** function _EEPROMread *****************
   342 ;; Defined at:
   343 ;;		line 56 in file "test_61f02x_EEPROM.C"
   344 ;; Parameters:    Size  Location     Type
   345 ;;  EEAddr          1    wreg     unsigned char 
   346 ;; Auto vars:     Size  Location     Type
   347 ;;  EEAddr          1    0[COMMON] unsigned char 
   348 ;;  ReEEPROMread    1    1[COMMON] unsigned char 
   349 ;; Return value:  Size  Location     Type
   350 ;;                  1    wreg      unsigned char 
   351 ;; Registers used:
   352 ;;		wreg
   353 ;; Tracked objects:
   354 ;;		On entry : 300/100
   355 ;;		On exit  : 300/100
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMMON   BANK0   BANK1
   358 ;;      Params:         0       0       0
   359 ;;      Locals:         2       0       0
   360 ;;      Temps:          0       0       0
   361 ;;      Totals:         2       0       0
   362 ;;Total ram usage:        2 bytes
   363 ;; Hardware stack levels used:    1
   364 ;; This function calls:
   365 ;;		Nothing
   366 ;; This function is called by:
   367 ;;		_main
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371                           
   372                           ;psect for function _EEPROMread
   373  07BD                     _EEPROMread:	
   374                           
   375                           ;incstack = 0
   376                           ; Regs used in _EEPROMread: [wreg]
   377                           ;EEPROMread@EEAddr stored from wreg
   378  07BD  00F0               	movwf	EEPROMread@EEAddr
   379                           
   380                           ;test_61f02x_EEPROM.C: 58: unsigned char ReEEPROMread;
   381                           ;test_61f02x_EEPROM.C: 60: EEADR = EEAddr;
   382  07BE  009B               	movwf	27	;volatile
   383                           
   384                           ;test_61f02x_EEPROM.C: 61: RD = 1;
   385  07BF  141C               	bsf	28,0	;volsfr
   386                           
   387                           ;test_61f02x_EEPROM.C: 62: ReEEPROMread = EEDAT;
   388  07C0  081A               	movf	26,w	;volatile
   389  07C1  00F1               	movwf	EEPROMread@ReEEPROMread
   390                           
   391                           ;test_61f02x_EEPROM.C: 63: return ReEEPROMread;
   392  07C2  0008               	return
   393  07C3                     __end_of_EEPROMread:	
   394  007E                     btemp	set	126	;btemp
   395  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       3
    BANK0            80      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_EEPROMread
    _main->_EEPROMwrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     203
                         _EEPROMread
                        _EEPROMwrite
                      _POWER_INITIAL
 ---------------------------------------------------------------------------------
 (1) _POWER_INITIAL                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EEPROMwrite                                          2     1      1     173
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _EEPROMread                                           2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROMread
   _EEPROMwrite
   _POWER_INITIAL

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       0       4        0.0%
BITBANK1            20      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               20      0       0       6        0.0%
ABS                  0      0       3       7        0.0%
DATA                 0      0       3       8        0.0%


GNU Macro Assembler for 8 bit devices.     
Symbol Table                                                                                   Thu Oct 14 10:06:56 2021

                     _RD 04E0                       _WR 04E8                      _GIE 005F  
                   l1075 07D7                     l1078 07E4                     l1521 07D3  
                   _EEIF 0067                     _WPUA 0095                     _WPUC 0088  
                   _main 07C3                     btemp 007E                     start 0000  
    __size_of_EEPROMread 0006                    ?_main 0070                    _EEADR 009B  
                  _EEDAT 009A                    _PORTA 0005                    _PORTC 0007  
                  _TRISA 0085                    _TRISC 0087                    status 0003  
                  wtemp0 007E          __initialization 07FD             __end_of_main 07D5  
   __size_of_EEPROMwrite 0013                   ??_main 0072                   _EECON1 009C  
                 _CMCON0 0019                   _INTCON 000B                   _OSCCON 008F  
                 _OPTION 0081             ??_EEPROMread 0070    __end_of_POWER_INITIAL 07FD  
__end_of__initialization 07FE           __pcstackCOMMON 0070       __end_of_EEPROMread 07C3  
             __pmaintext 07C3          EEPROMwrite@Data 0070                  _MSCKCON 001B  
       EEPROMread@EEAddr 0070        EEPROMwrite@EEAddr 0071                  __ptext0 0000  
                __ptext1 07E8                  __ptext2 07D5                  __ptext3 07BD  
   end_of_initialization 07FE            ??_EEPROMwrite 0071      __end_of_EEPROMwrite 07E8  
    start_initialization 07FD   __size_of_POWER_INITIAL 0015              __pbssCOMMON 0072  
              ___latbits 0000              _EEPROMwrite 07D5            _POWER_INITIAL 07E8  
         ?_POWER_INITIAL 0070               _EEPROMread 07BD            __size_of_main 0012  
 EEPROMread@ReEEPROMread 0071               _EEReadData 0072          ??_POWER_INITIAL 0070  
           ?_EEPROMwrite 0070              ?_EEPROMread 0070  
