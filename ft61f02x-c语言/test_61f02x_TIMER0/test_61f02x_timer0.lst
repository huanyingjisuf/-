

GNU Macro Assembler for 8 bit devices.       
                                                                                               Sat Nov 20 17:00:55 2021

GNU C Code Generator                                                 
     1                           	processor	FT61F02X
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	pa_nodes0,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 09/04/2020 
    17                           ; 
    18                           ; SFR Addresses
    19  0000                     
    20                           	psect	text0
    21  0000                     __ptext0:	
    22  001B                     _MSCKCON	set	27
    23  0019                     _CMCON0	set	25
    24  000B                     _INTCON	set	11
    25  0007                     _PORTC	set	7
    26  0005                     _PORTA	set	5
    27  005F                     _GIE	set	95
    28  005D                     _T0IE	set	93
    29  005A                     _T0IF	set	90
    30  002B                     _PA3	set	43
    31  0095                     _WPUA	set	149
    32  008F                     _OSCCON	set	143
    33  0088                     _WPUC	set	136
    34  0087                     _TRISC	set	135
    35  0085                     _TRISA	set	133
    36  0081                     _OPTION	set	129
    37                           
    38                           	psect	cinit
    39  000B                     start_initialization:	
    40                           ; #config settings
    41                           
    42  000B                     __initialization:	
    43  000B                     end_of_initialization:	
    44                           ;End of C runtime variable initialization code
    45                           
    46  000B                     __end_of__initialization:	
    47  000B  0183               	clrf	3
    48  000C  2831               	ljmp	_main	;jump to C main() function
    49                           
    50                           	psect	cstackCOMMON
    51  0070                     __pcstackCOMMON:	
    52  0070                     ?_ISR:	
    53  0070                     ??_ISR:	
    54                           ; 1 bytes @ 0x0
    55                           
    56  0070                     ?_POWER_INITIAL:	
    57                           ; 1 bytes @ 0x0
    58                           
    59  0070                     ?_TIMER0_INITIAL:	
    60                           ; 1 bytes @ 0x0
    61                           
    62  0070                     ?_main:	
    63                           ; 1 bytes @ 0x0
    64                           
    65                           
    66                           ; 1 bytes @ 0x0
    67  0070                     	ds	2
    68  0072                     ??_POWER_INITIAL:	
    69  0072                     ??_TIMER0_INITIAL:	
    70                           ; 1 bytes @ 0x2
    71                           
    72  0072                     ??_main:	
    73                           ; 1 bytes @ 0x2
    74                           
    75                           
    76                           	psect	maintext
    77  0031                     __pmaintext:	
    78                           ; 1 bytes @ 0x2
    79 ;;
    80 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    81 ;;
    82 ;; *************** function _main *****************
    83 ;; Defined at:
    84 ;;		line 86 in file "TEST_61F02x_Timer0.c"
    85 ;; Parameters:    Size  Location     Type
    86 ;;		None
    87 ;; Auto vars:     Size  Location     Type
    88 ;;		None
    89 ;; Return value:  Size  Location     Type
    90 ;;                  1    wreg      void 
    91 ;; Registers used:
    92 ;;		wreg, status,2, status,0, pclath, cstack
    93 ;; Tracked objects:
    94 ;;		On entry : B00/0
    95 ;;		On exit  : 0/0
    96 ;;		Unchanged: 0/0
    97 ;; Data sizes:     COMMON   BANK0   BANK1
    98 ;;      Params:         0       0       0
    99 ;;      Locals:         0       0       0
   100 ;;      Temps:          0       0       0
   101 ;;      Totals:         0       0       0
   102 ;;Total ram usage:        0 bytes
   103 ;; Hardware stack levels required when called:    2
   104 ;; This function calls:
   105 ;;		_POWER_INITIAL
   106 ;;		_TIMER0_INITIAL
   107 ;; This function is called by:
   108 ;;		Startup code after reset
   109 ;; This function uses a non-reentrant model
   110 ;;
   111                           
   112                           
   113                           ;psect for function _main
   114  0031                     _main:	
   115                           
   116                           ;TEST_61F02x_Timer0.c: 88: POWER_INITIAL();
   117                           
   118                           ;incstack = 0
   119                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   120  0031  200D               	fcall	_POWER_INITIAL
   121                           
   122                           ;TEST_61F02x_Timer0.c: 89: TIMER0_INITIAL();
   123  0032  2037               	fcall	_TIMER0_INITIAL
   124                           
   125                           ;TEST_61F02x_Timer0.c: 90: GIE = 1;
   126  0033  178B               	bsf	11,7	;volatile
   127                           
   128                           ;TEST_61F02x_Timer0.c: 91: T0IE = 1;
   129  0034  168B               	bsf	11,5	;volatile
   130  0035                     l1498:	
   131                           
   132                           ;TEST_61F02x_Timer0.c: 93: {
   133                           ;TEST_61F02x_Timer0.c: 94: __nop();
   134  0035  0000               	nop
   135  0036  2835               	goto	l1498
   136  0037                     __end_of_main:	
   137                           
   138                           	psect	text1
   139  0037                     __ptext1:	
   140 ;; *************** function _TIMER0_INITIAL *****************
   141 ;; Defined at:
   142 ;;		line 69 in file "TEST_61F02x_Timer0.c"
   143 ;; Parameters:    Size  Location     Type
   144 ;;		None
   145 ;; Auto vars:     Size  Location     Type
   146 ;;		None
   147 ;; Return value:  Size  Location     Type
   148 ;;                  1    wreg      void 
   149 ;; Registers used:
   150 ;;		wreg
   151 ;; Tracked objects:
   152 ;;		On entry : B00/0
   153 ;;		On exit  : B00/100
   154 ;;		Unchanged: 800/0
   155 ;; Data sizes:     COMMON   BANK0   BANK1
   156 ;;      Params:         0       0       0
   157 ;;      Locals:         0       0       0
   158 ;;      Temps:          0       0       0
   159 ;;      Totals:         0       0       0
   160 ;;Total ram usage:        0 bytes
   161 ;; Hardware stack levels used:    1
   162 ;; Hardware stack levels required when called:    1
   163 ;; This function calls:
   164 ;;		Nothing
   165 ;; This function is called by:
   166 ;;		_main
   167 ;; This function uses a non-reentrant model
   168 ;;
   169                           
   170                           
   171                           ;psect for function _TIMER0_INITIAL
   172  0037                     _TIMER0_INITIAL:	
   173                           
   174                           ;TEST_61F02x_Timer0.c: 71: OPTION = 0B00000111;
   175                           
   176                           ;incstack = 0
   177                           ; Regs used in _TIMER0_INITIAL: [wreg]
   178  0037  3007               	movlw	7
   179  0038  1683               	bsf	3,5	;RP0=1, select bank1
   180  0039  0081               	movwf	1	;volatile
   181                           
   182                           ;TEST_61F02x_Timer0.c: 78: T0IF = 0;
   183  003A  110B               	bcf	11,2	;volatile
   184  003B  0008               	return
   185  003C                     __end_of_TIMER0_INITIAL:	
   186                           
   187                           	psect	text2
   188  000D                     __ptext2:	
   189 ;; *************** function _POWER_INITIAL *****************
   190 ;; Defined at:
   191 ;;		line 44 in file "TEST_61F02x_Timer0.c"
   192 ;; Parameters:    Size  Location     Type
   193 ;;		None
   194 ;; Auto vars:     Size  Location     Type
   195 ;;		None
   196 ;; Return value:  Size  Location     Type
   197 ;;                  1    wreg      void 
   198 ;; Registers used:
   199 ;;		wreg, status,2
   200 ;; Tracked objects:
   201 ;;		On entry : B00/0
   202 ;;		On exit  : B00/0
   203 ;;		Unchanged: 800/0
   204 ;; Data sizes:     COMMON   BANK0   BANK1
   205 ;;      Params:         0       0       0
   206 ;;      Locals:         0       0       0
   207 ;;      Temps:          0       0       0
   208 ;;      Totals:         0       0       0
   209 ;;Total ram usage:        0 bytes
   210 ;; Hardware stack levels used:    1
   211 ;; Hardware stack levels required when called:    1
   212 ;; This function calls:
   213 ;;		Nothing
   214 ;; This function is called by:
   215 ;;		_main
   216 ;; This function uses a non-reentrant model
   217 ;;
   218                           
   219                           
   220                           ;psect for function _POWER_INITIAL
   221  000D                     _POWER_INITIAL:	
   222                           
   223                           ;TEST_61F02x_Timer0.c: 46: OSCCON = 0B01110001;
   224                           
   225                           ;incstack = 0
   226                           ; Regs used in _POWER_INITIAL: [wreg+status,2]
   227  000D  3071               	movlw	113
   228  000E  1683               	bsf	3,5	;RP0=1, select bank1
   229  000F  008F               	movwf	15	;volatile
   230                           
   231                           ;TEST_61F02x_Timer0.c: 47: INTCON = 0;
   232  0010  018B               	clrf	11	;volatile
   233                           
   234                           ;TEST_61F02x_Timer0.c: 48: PORTA = 0B00000000;
   235  0011  1283               	bcf	3,5	;RP0=0, select bank0
   236  0012  0185               	clrf	5	;volatile
   237                           
   238                           ;TEST_61F02x_Timer0.c: 49: TRISA = 0B00000000;
   239  0013  1683               	bsf	3,5	;RP0=1, select bank1
   240  0014  0185               	clrf	5	;volatile
   241                           
   242                           ;TEST_61F02x_Timer0.c: 51: PORTC = 0B00000000;
   243  0015  1283               	bcf	3,5	;RP0=0, select bank0
   244  0016  0187               	clrf	7	;volatile
   245                           
   246                           ;TEST_61F02x_Timer0.c: 52: TRISC = 0B00000000;
   247  0017  1683               	bsf	3,5	;RP0=1, select bank1
   248  0018  0187               	clrf	7	;volatile
   249                           
   250                           ;TEST_61F02x_Timer0.c: 53: WPUA = 0B00000000;
   251  0019  0195               	clrf	21	;volatile
   252                           
   253                           ;TEST_61F02x_Timer0.c: 54: WPUC = 0B0000000;
   254  001A  0188               	clrf	8	;volatile
   255                           
   256                           ;TEST_61F02x_Timer0.c: 56: OPTION = 0B00001000;
   257  001B  3008               	movlw	8
   258  001C  0081               	movwf	1	;volatile
   259                           
   260                           ;TEST_61F02x_Timer0.c: 57: MSCKCON = 0B00000000;
   261  001D  1283               	bcf	3,5	;RP0=0, select bank0
   262  001E  019B               	clrf	27	;volatile
   263                           
   264                           ;TEST_61F02x_Timer0.c: 61: CMCON0 = 0B00000111;
   265  001F  3007               	movlw	7
   266  0020  0099               	movwf	25	;volatile
   267  0021  0008               	return
   268  0022                     __end_of_POWER_INITIAL:	
   269                           
   270                           	psect	text3
   271  0022                     __ptext3:	
   272 ;; *************** function _ISR *****************
   273 ;; Defined at:
   274 ;;		line 30 in file "TEST_61F02x_Timer0.c"
   275 ;; Parameters:    Size  Location     Type
   276 ;;		None
   277 ;; Auto vars:     Size  Location     Type
   278 ;;		None
   279 ;; Return value:  Size  Location     Type
   280 ;;                  1    wreg      void 
   281 ;; Registers used:
   282 ;;		wreg
   283 ;; Tracked objects:
   284 ;;		On entry : 0/0
   285 ;;		On exit  : 0/0
   286 ;;		Unchanged: 0/0
   287 ;; Data sizes:     COMMON   BANK0   BANK1
   288 ;;      Params:         0       0       0
   289 ;;      Locals:         0       0       0
   290 ;;      Temps:          2       0       0
   291 ;;      Totals:         2       0       0
   292 ;;Total ram usage:        2 bytes
   293 ;; Hardware stack levels used:    1
   294 ;; This function calls:
   295 ;;		Nothing
   296 ;; This function is called by:
   297 ;;		Interrupt level 1
   298 ;; This function uses a non-reentrant model
   299 ;;
   300                           
   301                           
   302                           ;psect for function _ISR
   303  0022                     _ISR:	
   304                           
   305                           ;TEST_61F02x_Timer0.c: 32: if(T0IE && T0IF)
   306  0022  1A8B               	btfsc	11,5	;volatile
   307  0023  1D0B               	btfss	11,2	;volatile
   308  0024  282A               	goto	i1l1070
   309                           
   310                           ;TEST_61F02x_Timer0.c: 33: {
   311                           ;TEST_61F02x_Timer0.c: 34: T0IF = 0;
   312  0025  110B               	bcf	11,2	;volatile
   313                           
   314                           ;TEST_61F02x_Timer0.c: 35: PA3 = ~PA3;
   315  0026  3008               	movlw	8
   316  0027  1283               	bcf	3,5	;RP0=0, select bank0
   317  0028  1303               	bcf	3,6	;RP1=0, select bank0
   318  0029  0685               	xorwf	5,f
   319  002A                     i1l1070:	
   320  002A  0871               	movf	??_ISR+1,w
   321  002B  008A               	movwf	10
   322  002C  0E70               	swapf	??_ISR^(0+-128),w
   323  002D  0083               	movwf	3
   324  002E  0EFE               	swapf	126,f
   325  002F  0E7E               	swapf	126,w
   326  0030  0009               	retfie
   327  0031                     __end_of_ISR:	
   328  007E                     btemp	set	126	;btemp
   329  007E                     wtemp0	set	126
   330                           
   331                           	psect	intentry
   332  0004                     __pintentry:	
   333                           ;incstack = 0
   334                           ; Regs used in _ISR: [wreg]
   335                           
   336  0004                     interrupt_function:	
   337  007E                     saved_w	set	btemp
   338  0004  00FE               	movwf	btemp
   339  0005  0E03               	swapf	3,w
   340  0006  00F0               	movwf	??_ISR
   341  0007  080A               	movf	10,w
   342  0008  00F1               	movwf	??_ISR+1
   343  0009  2822               	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                      _POWER_INITIAL
                     _TIMER0_INITIAL
 ---------------------------------------------------------------------------------
 (1) _TIMER0_INITIAL                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POWER_INITIAL                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _POWER_INITIAL
   _TIMER0_INITIAL

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       0       4        0.0%
BITBANK1            20      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               20      0       0       6        0.0%
ABS                  0      0       0       7        0.0%
DATA                 0      0       0       8        0.0%


GNU Macro Assembler for 8 bit devices.     
Symbol Table                                                                                   Sat Nov 20 17:00:55 2021

                    _GIE 005F                      _PA3 002B                      _ISR 0022  
                   ?_ISR 0070                     l1498 0035                     _T0IE 005D  
                   _T0IF 005A                     _WPUA 0095                     _WPUC 0088  
                   _main 0031                     btemp 007E                     start 000A  
                  ??_ISR 0070           _TIMER0_INITIAL 0037                    ?_main 0070  
                  _PORTA 0005                    _PORTC 0007                    _TRISA 0085  
                  _TRISC 0087                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000B             __end_of_main 0037  
 __end_of_TIMER0_INITIAL 003C                   ??_main 0072                   _CMCON0 0019  
                 i1l1070 002A                   _INTCON 000B                   _OSCCON 008F  
                 _OPTION 0081          ?_TIMER0_INITIAL 0070                   saved_w 007E  
  __end_of_POWER_INITIAL 0022  __end_of__initialization 000B           __pcstackCOMMON 0070  
             __pmaintext 0031               __pintentry 0004                  _MSCKCON 001B  
                __ptext0 0000                  __ptext1 0037                  __ptext2 000D  
                __ptext3 0022             __size_of_ISR 000F     end_of_initialization 000B  
       ??_TIMER0_INITIAL 0072      start_initialization 000B              __end_of_ISR 0031  
 __size_of_POWER_INITIAL 0015                ___latbits 0000        interrupt_function 0004  
          _POWER_INITIAL 000D           ?_POWER_INITIAL 0070            __size_of_main 0006  
__size_of_TIMER0_INITIAL 0005          ??_POWER_INITIAL 0072                 intlevel1 0000  
