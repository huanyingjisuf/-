

GNU Macro Assembler for 8 bit devices.       
                                                                                               Thu Oct 14 11:00:19 2021

GNU C Code Generator                                                 
     1                           	processor	FT61F02X
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	pa_nodes0,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 09/04/2020 
    18                           ; 
    19                           ; SFR Addresses
    20  0000                     
    21                           	psect	nvBANK0
    22  0020                     __pnvBANK0:	
    23  0020                     _TestADC:	
    24  0020                     	ds	2
    25  001F                     _ADCON0	set	31
    26  001E                     _ADRESH	set	30
    27  001B                     _MSCKCON	set	27
    28  0019                     _CMCON0	set	25
    29  000B                     _INTCON	set	11
    30  0007                     _PORTC	set	7
    31  0005                     _PORTA	set	5
    32  00F9                     _GO_DONE	set	249
    33  009F                     _ADCON1	set	159
    34  009E                     _ADRESL	set	158
    35  0095                     _WPUA	set	149
    36  0091                     _ANSEL	set	145
    37  008F                     _OSCCON	set	143
    38  0088                     _WPUC	set	136
    39  0087                     _TRISC	set	135
    40  0085                     _TRISA	set	133
    41  0081                     _OPTION	set	129
    42  043C                     _TRISC4	set	1084
    43  0111                     _T3CKDIV	set	273
    44  0110                     _PWM3CR1	set	272
    45  010F                     _PWM3CR0	set	271
    46  010E                     _PR3L	set	270
    47  010D                     _TMR3H	set	269
    48  0882                     _TMR3ON	set	2178
    49                           
    50                           	psect	cinit
    51  07FE                     start_initialization:	
    52                           ; #config settings
    53                           
    54  07FE                     __initialization:	
    55  07FE                     end_of_initialization:	
    56                           ;End of C runtime variable initialization code
    57                           
    58  07FE                     __end_of__initialization:	
    59  07FE  0183               	clrf	3
    60  07FF  2FB7               	ljmp	_main	;jump to C main() function
    61                           
    62                           	psect	cstackCOMMON
    63  0070                     __pcstackCOMMON:	
    64  0070                     ?_POWER_INITIAL:	
    65  0070                     ??_POWER_INITIAL:	
    66                           ; 1 bytes @ 0x0
    67                           
    68  0070                     ?_DelayUs:	
    69                           ; 1 bytes @ 0x0
    70                           
    71  0070                     ??_DelayUs:	
    72                           ; 1 bytes @ 0x0
    73                           
    74  0070                     ?_ADC_INITIAL:	
    75                           ; 1 bytes @ 0x0
    76                           
    77  0070                     ??_ADC_INITIAL:	
    78                           ; 1 bytes @ 0x0
    79                           
    80  0070                     ?_PWM_INITIAL:	
    81                           ; 1 bytes @ 0x0
    82                           
    83  0070                     ??_PWM_INITIAL:	
    84                           ; 1 bytes @ 0x0
    85                           
    86  0070                     ?_main:	
    87                           ; 1 bytes @ 0x0
    88                           
    89  0070                     DelayUs@Time:	
    90                           ; 1 bytes @ 0x0
    91                           
    92                           
    93                           ; 1 bytes @ 0x0
    94  0070                     	ds	1
    95  0071                     DelayUs@a:	
    96                           
    97                           ; 1 bytes @ 0x1
    98  0071                     	ds	1
    99  0072                     ?_GET_ADC_DATA:	
   100                           
   101                           ; 2 bytes @ 0x2
   102  0072                     	ds	3
   103  0075                     ??_GET_ADC_DATA:	
   104  0075                     GET_ADC_DATA@tBuffer:	
   105                           ; 1 bytes @ 0x5
   106                           
   107                           
   108                           ; 2 bytes @ 0x5
   109  0075                     	ds	2
   110  0077                     GET_ADC_DATA@AN_CH:	
   111                           
   112                           ; 1 bytes @ 0x7
   113  0077                     	ds	1
   114  0078                     GET_ADC_DATA@ADC_DATA:	
   115                           
   116                           ; 2 bytes @ 0x8
   117  0078                     	ds	2
   118  007A                     GET_ADC_DATA@ADCON0Buff:	
   119                           
   120                           ; 1 bytes @ 0xA
   121  007A                     	ds	1
   122  007B                     ??_main:	
   123                           
   124                           ; 1 bytes @ 0xB
   125  007B                     	ds	2
   126                           
   127                           	psect	maintext
   128  07B7                     __pmaintext:	
   129 ;;
   130 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   131 ;;
   132 ;; *************** function _main *****************
   133 ;; Defined at:
   134 ;;		line 158 in file "test_61f02x_ADC.C"
   135 ;; Parameters:    Size  Location     Type
   136 ;;		None
   137 ;; Auto vars:     Size  Location     Type
   138 ;;		None
   139 ;; Return value:  Size  Location     Type
   140 ;;                  1    wreg      void 
   141 ;; Registers used:
   142 ;;		wreg, status,2, status,0, pclath, cstack
   143 ;; Tracked objects:
   144 ;;		On entry : B00/0
   145 ;;		On exit  : 0/0
   146 ;;		Unchanged: 0/0
   147 ;; Data sizes:     COMMON   BANK0   BANK1
   148 ;;      Params:         0       0       0
   149 ;;      Locals:         0       0       0
   150 ;;      Temps:          2       0       0
   151 ;;      Totals:         2       0       0
   152 ;;Total ram usage:        2 bytes
   153 ;; Hardware stack levels required when called:    2
   154 ;; This function calls:
   155 ;;		_ADC_INITIAL
   156 ;;		_GET_ADC_DATA
   157 ;;		_POWER_INITIAL
   158 ;;		_PWM_INITIAL
   159 ;; This function is called by:
   160 ;;		Startup code after reset
   161 ;; This function uses a non-reentrant model
   162 ;;
   163                           
   164                           
   165                           ;psect for function _main
   166  07B7                     _main:	
   167                           
   168                           ;test_61f02x_ADC.C: 160: POWER_INITIAL();
   169                           
   170                           ;incstack = 0
   171                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   172  07B7  27A1               	fcall	_POWER_INITIAL
   173                           
   174                           ;test_61f02x_ADC.C: 161: ADC_INITIAL();
   175  07B8  278A               	fcall	_ADC_INITIAL
   176                           
   177                           ;test_61f02x_ADC.C: 162: PWM_INITIAL();
   178  07B9  2794               	fcall	_PWM_INITIAL
   179                           
   180                           ;test_61f02x_ADC.C: 163: TMR3ON = 1;
   181  07BA  1510               	bsf	16,2	;volatile
   182                           
   183                           ;test_61f02x_ADC.C: 164: TRISC4 = 0;
   184  07BB  1683               	bsf	3,5	;RP0=1, select bank1
   185  07BC  1303               	bcf	3,6	;RP1=0, select bank1
   186  07BD  1207               	bcf	7,4	;volatile
   187  07BE                     l1092:	
   188                           ;test_61f02x_ADC.C: 165: while(1)
   189                           
   190                           
   191                           ;test_61f02x_ADC.C: 166: {
   192                           ;test_61f02x_ADC.C: 167: TestADC = GET_ADC_DATA(2);
   193  07BE  3002               	movlw	2
   194  07BF  27D5               	fcall	_GET_ADC_DATA
   195  07C0  0873               	movf	?_GET_ADC_DATA+1,w
   196  07C1  1283               	bcf	3,5	;RP0=0, select bank0
   197  07C2  00A1               	movwf	_TestADC+1	;volatile
   198  07C3  0872               	movf	?_GET_ADC_DATA,w
   199  07C4  00A0               	movwf	_TestADC	;volatile
   200                           
   201                           ;test_61f02x_ADC.C: 168: PR3L = TestADC >> 2;
   202  07C5  0821               	movf	_TestADC+1,w	;volatile
   203  07C6  00FC               	movwf	??_main+1
   204  07C7  0820               	movf	_TestADC,w	;volatile
   205  07C8  00FB               	movwf	??_main
   206  07C9  1003               	clrc
   207  07CA  0CFC               	rrf	??_main+1,f
   208  07CB  0CFB               	rrf	??_main,f
   209  07CC  1003               	clrc
   210  07CD  0CFC               	rrf	??_main+1,f
   211  07CE  0CFB               	rrf	??_main,f
   212  07CF  087B               	movf	??_main,w
   213  07D0  1703               	bsf	3,6	;RP1=1, select bank2
   214  07D1  008E               	movwf	14	;volatile
   215                           
   216                           ;test_61f02x_ADC.C: 170: __nop();
   217  07D2  0000               	nop
   218                           
   219                           ;test_61f02x_ADC.C: 171: __nop();
   220  07D3  0000               	nop
   221  07D4  2FBE               	goto	l1092
   222  07D5                     __end_of_main:	
   223                           
   224                           	psect	text1
   225  0794                     __ptext1:	
   226 ;; *************** function _PWM_INITIAL *****************
   227 ;; Defined at:
   228 ;;		line 132 in file "test_61f02x_ADC.C"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;		None
   233 ;; Return value:  Size  Location     Type
   234 ;;                  1    wreg      void 
   235 ;; Registers used:
   236 ;;		wreg, status,2
   237 ;; Tracked objects:
   238 ;;		On entry : B00/100
   239 ;;		On exit  : B00/200
   240 ;;		Unchanged: 800/0
   241 ;; Data sizes:     COMMON   BANK0   BANK1
   242 ;;      Params:         0       0       0
   243 ;;      Locals:         0       0       0
   244 ;;      Temps:          0       0       0
   245 ;;      Totals:         0       0       0
   246 ;;Total ram usage:        0 bytes
   247 ;; Hardware stack levels used:    1
   248 ;; This function calls:
   249 ;;		Nothing
   250 ;; This function is called by:
   251 ;;		_main
   252 ;; This function uses a non-reentrant model
   253 ;;
   254                           
   255                           
   256                           ;psect for function _PWM_INITIAL
   257  0794                     _PWM_INITIAL:	
   258                           
   259                           ;test_61f02x_ADC.C: 134: TRISC4 =1;
   260                           
   261                           ;incstack = 0
   262                           ; Regs used in _PWM_INITIAL: [wreg+status,2]
   263  0794  1607               	bsf	7,4	;volatile
   264                           
   265                           ;test_61f02x_ADC.C: 136: PWM3CR0 = 0B00110010;
   266  0795  3032               	movlw	50
   267  0796  1283               	bcf	3,5	;RP0=0, select bank2
   268  0797  1703               	bsf	3,6	;RP1=1, select bank2
   269  0798  008F               	movwf	15	;volatile
   270                           
   271                           ;test_61f02x_ADC.C: 141: PWM3CR1 = 0B10000000;
   272  0799  3080               	movlw	128
   273  079A  0090               	movwf	16	;volatile
   274                           
   275                           ;test_61f02x_ADC.C: 148: TMR3H=0;
   276  079B  018D               	clrf	13	;volatile
   277                           
   278                           ;test_61f02x_ADC.C: 149: T3CKDIV = 30;
   279  079C  301E               	movlw	30
   280  079D  0091               	movwf	17	;volatile
   281                           
   282                           ;test_61f02x_ADC.C: 150: PR3L = 128;
   283  079E  3080               	movlw	128
   284  079F  008E               	movwf	14	;volatile
   285  07A0  0008               	return
   286  07A1                     __end_of_PWM_INITIAL:	
   287                           
   288                           	psect	text2
   289  07A1                     __ptext2:	
   290 ;; *************** function _POWER_INITIAL *****************
   291 ;; Defined at:
   292 ;;		line 35 in file "test_61f02x_ADC.C"
   293 ;; Parameters:    Size  Location     Type
   294 ;;		None
   295 ;; Auto vars:     Size  Location     Type
   296 ;;		None
   297 ;; Return value:  Size  Location     Type
   298 ;;                  1    wreg      void 
   299 ;; Registers used:
   300 ;;		wreg, status,2
   301 ;; Tracked objects:
   302 ;;		On entry : B00/0
   303 ;;		On exit  : B00/0
   304 ;;		Unchanged: 800/0
   305 ;; Data sizes:     COMMON   BANK0   BANK1
   306 ;;      Params:         0       0       0
   307 ;;      Locals:         0       0       0
   308 ;;      Temps:          0       0       0
   309 ;;      Totals:         0       0       0
   310 ;;Total ram usage:        0 bytes
   311 ;; Hardware stack levels used:    1
   312 ;; This function calls:
   313 ;;		Nothing
   314 ;; This function is called by:
   315 ;;		_main
   316 ;; This function uses a non-reentrant model
   317 ;;
   318                           
   319                           
   320                           ;psect for function _POWER_INITIAL
   321  07A1                     _POWER_INITIAL:	
   322                           
   323                           ;test_61f02x_ADC.C: 37: OSCCON = 0B01110001;
   324                           
   325                           ;incstack = 0
   326                           ; Regs used in _POWER_INITIAL: [wreg+status,2]
   327  07A1  3071               	movlw	113
   328  07A2  1683               	bsf	3,5	;RP0=1, select bank1
   329  07A3  008F               	movwf	15	;volatile
   330                           
   331                           ;test_61f02x_ADC.C: 38: INTCON = 0;
   332  07A4  018B               	clrf	11	;volatile
   333                           
   334                           ;test_61f02x_ADC.C: 40: PORTA = 0B00000000;
   335  07A5  1283               	bcf	3,5	;RP0=0, select bank0
   336  07A6  0185               	clrf	5	;volatile
   337                           
   338                           ;test_61f02x_ADC.C: 41: TRISA = 0B00000100;
   339  07A7  3004               	movlw	4
   340  07A8  1683               	bsf	3,5	;RP0=1, select bank1
   341  07A9  0085               	movwf	5	;volatile
   342                           
   343                           ;test_61f02x_ADC.C: 43: PORTC = 0B00000000;
   344  07AA  1283               	bcf	3,5	;RP0=0, select bank0
   345  07AB  0187               	clrf	7	;volatile
   346                           
   347                           ;test_61f02x_ADC.C: 44: TRISC = 0B00000000;
   348  07AC  1683               	bsf	3,5	;RP0=1, select bank1
   349  07AD  0187               	clrf	7	;volatile
   350                           
   351                           ;test_61f02x_ADC.C: 45: WPUA = 0;
   352  07AE  0195               	clrf	21	;volatile
   353                           
   354                           ;test_61f02x_ADC.C: 46: WPUC = 0;
   355  07AF  0188               	clrf	8	;volatile
   356                           
   357                           ;test_61f02x_ADC.C: 48: OPTION = 0B00001000;
   358  07B0  3008               	movlw	8
   359  07B1  0081               	movwf	1	;volatile
   360                           
   361                           ;test_61f02x_ADC.C: 49: MSCKCON = 0B00000000;
   362  07B2  1283               	bcf	3,5	;RP0=0, select bank0
   363  07B3  019B               	clrf	27	;volatile
   364                           
   365                           ;test_61f02x_ADC.C: 53: CMCON0 = 0B00000111;
   366  07B4  3007               	movlw	7
   367  07B5  0099               	movwf	25	;volatile
   368  07B6  0008               	return
   369  07B7                     __end_of_POWER_INITIAL:	
   370                           
   371                           	psect	text3
   372  07D5                     __ptext3:	
   373 ;; *************** function _GET_ADC_DATA *****************
   374 ;; Defined at:
   375 ;;		line 99 in file "test_61f02x_ADC.C"
   376 ;; Parameters:    Size  Location     Type
   377 ;;  AN_CH           1    wreg     unsigned char 
   378 ;; Auto vars:     Size  Location     Type
   379 ;;  AN_CH           1    7[COMMON] unsigned char 
   380 ;;  ADC_DATA        2    8[COMMON] unsigned int 
   381 ;;  tBuffer         2    5[COMMON] unsigned int 
   382 ;;  ADCON0Buff      1   10[COMMON] unsigned char 
   383 ;;  i               1    0        unsigned char 
   384 ;; Return value:  Size  Location     Type
   385 ;;                  2    2[COMMON] unsigned int 
   386 ;; Registers used:
   387 ;;		wreg, status,2, status,0, pclath, cstack
   388 ;; Tracked objects:
   389 ;;		On entry : 0/100
   390 ;;		On exit  : 300/100
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMMON   BANK0   BANK1
   393 ;;      Params:         3       0       0
   394 ;;      Locals:         6       0       0
   395 ;;      Temps:          0       0       0
   396 ;;      Totals:         9       0       0
   397 ;;Total ram usage:        9 bytes
   398 ;; Hardware stack levels used:    1
   399 ;; Hardware stack levels required when called:    1
   400 ;; This function calls:
   401 ;;		_DelayUs
   402 ;; This function is called by:
   403 ;;		_main
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           
   407                           
   408                           ;psect for function _GET_ADC_DATA
   409  07D5                     _GET_ADC_DATA:	
   410                           
   411                           ;incstack = 0
   412                           ; Regs used in _GET_ADC_DATA: [wreg+status,2+status,0+pclath+cstack]
   413                           ;GET_ADC_DATA@AN_CH stored from wreg
   414  07D5  00F7               	movwf	GET_ADC_DATA@AN_CH
   415                           
   416                           ;test_61f02x_ADC.C: 104: unsigned int ADC_DATA=0;
   417  07D6  01F8               	clrf	GET_ADC_DATA@ADC_DATA
   418  07D7  01F9               	clrf	GET_ADC_DATA@ADC_DATA+1
   419                           
   420                           ;test_61f02x_ADC.C: 106: ADCON0Buff = ADCON0 & 0B11100011;
   421  07D8  1283               	bcf	3,5	;RP0=0, select bank0
   422  07D9  1303               	bcf	3,6	;RP1=0, select bank0
   423  07DA  081F               	movf	31,w	;volatile
   424  07DB  00FA               	movwf	GET_ADC_DATA@ADCON0Buff
   425  07DC  30E3               	movlw	227
   426  07DD  05FA               	andwf	GET_ADC_DATA@ADCON0Buff,f
   427                           
   428                           ;test_61f02x_ADC.C: 108: AN_CH <<=2;
   429  07DE  1003               	clrc
   430  07DF  0DF7               	rlf	GET_ADC_DATA@AN_CH,f
   431  07E0  1003               	clrc
   432  07E1  0DF7               	rlf	GET_ADC_DATA@AN_CH,f
   433                           
   434                           ;test_61f02x_ADC.C: 109: ADCON0Buff |= AN_CH;
   435  07E2  0877               	movf	GET_ADC_DATA@AN_CH,w
   436  07E3  04FA               	iorwf	GET_ADC_DATA@ADCON0Buff,f
   437                           
   438                           ;test_61f02x_ADC.C: 111: ADCON0 = ADCON0Buff;
   439  07E4  087A               	movf	GET_ADC_DATA@ADCON0Buff,w
   440  07E5  009F               	movwf	31	;volatile
   441                           
   442                           ;test_61f02x_ADC.C: 112: DelayUs(20);
   443  07E6  3014               	movlw	20
   444  07E7  2781               	fcall	_DelayUs
   445                           
   446                           ;test_61f02x_ADC.C: 113: GO_DONE = 1;
   447  07E8  1283               	bcf	3,5	;RP0=0, select bank0
   448  07E9  1303               	bcf	3,6	;RP1=0, select bank0
   449  07EA  149F               	bsf	31,1	;volatile
   450  07EB                     l1081:	
   451                           ;test_61f02x_ADC.C: 114: while( GO_DONE==1 );
   452                           
   453  07EB  189F               	btfsc	31,1	;volatile
   454  07EC  2FEB               	goto	l1081
   455                           
   456                           ;test_61f02x_ADC.C: 116: ADC_DATA = ADRESH;
   457  07ED  081E               	movf	30,w	;volatile
   458  07EE  00F8               	movwf	GET_ADC_DATA@ADC_DATA
   459  07EF  01F9               	clrf	GET_ADC_DATA@ADC_DATA+1
   460                           
   461                           ;test_61f02x_ADC.C: 117: ADC_DATA <<=8;
   462  07F0  00F9               	movwf	GET_ADC_DATA@ADC_DATA+1
   463  07F1  01F8               	clrf	GET_ADC_DATA@ADC_DATA
   464                           
   465                           ;test_61f02x_ADC.C: 118: ADC_DATA |= ADRESL;
   466  07F2  1683               	bsf	3,5	;RP0=1, select bank1
   467  07F3  081E               	movf	30,w	;volatile
   468  07F4  04F8               	iorwf	GET_ADC_DATA@ADC_DATA,f
   469                           
   470                           ;test_61f02x_ADC.C: 119: tBuffer = ADC_DATA;
   471  07F5  0879               	movf	GET_ADC_DATA@ADC_DATA+1,w
   472  07F6  00F6               	movwf	GET_ADC_DATA@tBuffer+1
   473  07F7  0878               	movf	GET_ADC_DATA@ADC_DATA,w
   474  07F8  00F5               	movwf	GET_ADC_DATA@tBuffer
   475                           
   476                           ;test_61f02x_ADC.C: 120: return tBuffer;
   477  07F9  0876               	movf	GET_ADC_DATA@tBuffer+1,w
   478  07FA  00F3               	movwf	?_GET_ADC_DATA+1
   479  07FB  0875               	movf	GET_ADC_DATA@tBuffer,w
   480  07FC  00F2               	movwf	?_GET_ADC_DATA
   481  07FD  0008               	return
   482  07FE                     __end_of_GET_ADC_DATA:	
   483                           
   484                           	psect	text4
   485  0781                     __ptext4:	
   486 ;; *************** function _DelayUs *****************
   487 ;; Defined at:
   488 ;;		line 61 in file "test_61f02x_ADC.C"
   489 ;; Parameters:    Size  Location     Type
   490 ;;  Time            1    wreg     unsigned char 
   491 ;; Auto vars:     Size  Location     Type
   492 ;;  Time            1    0[COMMON] unsigned char 
   493 ;;  a               1    1[COMMON] unsigned char 
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		wreg, status,2, status,0
   498 ;; Tracked objects:
   499 ;;		On entry : 300/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMMON   BANK0   BANK1
   503 ;;      Params:         0       0       0
   504 ;;      Locals:         2       0       0
   505 ;;      Temps:          0       0       0
   506 ;;      Totals:         2       0       0
   507 ;;Total ram usage:        2 bytes
   508 ;; Hardware stack levels used:    1
   509 ;; This function calls:
   510 ;;		Nothing
   511 ;; This function is called by:
   512 ;;		_GET_ADC_DATA
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           
   517                           ;psect for function _DelayUs
   518  0781                     _DelayUs:	
   519                           
   520                           ;incstack = 0
   521                           ; Regs used in _DelayUs: [wreg+status,2+status,0]
   522                           ;DelayUs@Time stored from wreg
   523  0781  00F0               	movwf	DelayUs@Time
   524                           
   525                           ;test_61f02x_ADC.C: 63: unsigned char a;
   526                           ;test_61f02x_ADC.C: 64: for(a=0;a<Time;a++)
   527  0782  01F1               	clrf	DelayUs@a
   528  0783                     l1543:	
   529  0783  0870               	movf	DelayUs@Time,w
   530  0784  0271               	subwf	DelayUs@a,w
   531  0785  1803               	btfsc	3,0
   532  0786  0008               	return
   533                           
   534                           ;test_61f02x_ADC.C: 65: {
   535                           ;test_61f02x_ADC.C: 66: __nop();
   536  0787  0000               	nop
   537  0788  0AF1               	incf	DelayUs@a,f
   538  0789  2F83               	goto	l1543
   539  078A                     __end_of_DelayUs:	
   540                           
   541                           	psect	text5
   542  078A                     __ptext5:	
   543 ;; *************** function _ADC_INITIAL *****************
   544 ;; Defined at:
   545 ;;		line 75 in file "test_61f02x_ADC.C"
   546 ;; Parameters:    Size  Location     Type
   547 ;;		None
   548 ;; Auto vars:     Size  Location     Type
   549 ;;		None
   550 ;; Return value:  Size  Location     Type
   551 ;;                  1    wreg      void 
   552 ;; Registers used:
   553 ;;		wreg
   554 ;; Tracked objects:
   555 ;;		On entry : B00/0
   556 ;;		On exit  : B00/100
   557 ;;		Unchanged: 800/0
   558 ;; Data sizes:     COMMON   BANK0   BANK1
   559 ;;      Params:         0       0       0
   560 ;;      Locals:         0       0       0
   561 ;;      Temps:          0       0       0
   562 ;;      Totals:         0       0       0
   563 ;;Total ram usage:        0 bytes
   564 ;; Hardware stack levels used:    1
   565 ;; This function calls:
   566 ;;		Nothing
   567 ;; This function is called by:
   568 ;;		_main
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           
   573                           ;psect for function _ADC_INITIAL
   574  078A                     _ADC_INITIAL:	
   575                           
   576                           ;test_61f02x_ADC.C: 77: ADCON1 = 0B01100000;
   577                           
   578                           ;incstack = 0
   579                           ; Regs used in _ADC_INITIAL: [wreg]
   580  078A  3060               	movlw	96
   581  078B  1683               	bsf	3,5	;RP0=1, select bank1
   582  078C  009F               	movwf	31	;volatile
   583                           
   584                           ;test_61f02x_ADC.C: 81: ADCON0 = 0B10001001;
   585  078D  3089               	movlw	137
   586  078E  1283               	bcf	3,5	;RP0=0, select bank0
   587  078F  009F               	movwf	31	;volatile
   588                           
   589                           ;test_61f02x_ADC.C: 91: ANSEL = 0B00000100;
   590  0790  3004               	movlw	4
   591  0791  1683               	bsf	3,5	;RP0=1, select bank1
   592  0792  0091               	movwf	17	;volatile
   593  0793  0008               	return
   594  0794                     __end_of_ADC_INITIAL:	
   595  007E                     btemp	set	126	;btemp
   596  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      0       2
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_GET_ADC_DATA
    _GET_ADC_DATA->_DelayUs

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     144
                                             11 COMMON     2     2      0
                        _ADC_INITIAL
                       _GET_ADC_DATA
                      _POWER_INITIAL
                        _PWM_INITIAL
 ---------------------------------------------------------------------------------
 (1) _PWM_INITIAL                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POWER_INITIAL                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GET_ADC_DATA                                        10     7      3     144
                                              2 COMMON     9     6      3
                            _DelayUs
 ---------------------------------------------------------------------------------
 (2) _DelayUs                                              2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_INITIAL                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_INITIAL
   _GET_ADC_DATA
     _DelayUs
   _POWER_INITIAL
   _PWM_INITIAL

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       2       4        2.5%
BITBANK1            20      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               20      0       0       6        0.0%
ABS                  0      0       F       7        0.0%
DATA                 0      0       F       8        0.0%


GNU Macro Assembler for 8 bit devices.     
Symbol Table                                                                                   Thu Oct 14 11:00:19 2021

   __size_of_ADC_INITIAL 000A                     l1081 07EB                     l1092 07BE  
                   l1543 0783                     _PR3L 010E                     _WPUA 0095  
                   _WPUC 0088                     _main 07B7                     btemp 007E  
                   start 0000          __end_of_DelayUs 078A                    ?_main 0070  
                  _ANSEL 0091                    _TMR3H 010D                    _PORTA 0005  
                  _PORTC 0007                    _TRISA 0085                    _TRISC 0087  
                  status 0003                    wtemp0 007E          __initialization 07FE  
           __end_of_main 07D5                   ??_main 007B      GET_ADC_DATA@tBuffer 0075  
   __end_of_GET_ADC_DATA 07FE     GET_ADC_DATA@ADC_DATA 0078                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
                 _CMCON0 0019                   _INTCON 000B                ??_DelayUs 0070  
                 _OSCCON 008F                   _OPTION 0081                   _TMR3ON 0882  
                 _TRISC4 043C    __end_of_POWER_INITIAL 07B7  __end_of__initialization 07FE  
           ?_PWM_INITIAL 0070           __pcstackCOMMON 0070        GET_ADC_DATA@AN_CH 0077  
          ??_ADC_INITIAL 0070               __pmaintext 07B7                  _T3CKDIV 0111  
  __size_of_GET_ADC_DATA 0029                  _GO_DONE 00F9                  _MSCKCON 001B  
                _PWM3CR0 010F                  _PWM3CR1 0110                  _DelayUs 0781  
                _TestADC 0020             _GET_ADC_DATA 07D5      __end_of_ADC_INITIAL 0794  
                __ptext1 0794                  __ptext2 07A1                  __ptext3 07D5  
                __ptext4 0781                  __ptext5 078A     end_of_initialization 07FE  
   __size_of_PWM_INITIAL 000D              _ADC_INITIAL 078A      start_initialization 07FE  
 __size_of_POWER_INITIAL 0016                ___latbits 0000                 ?_DelayUs 0070  
              __pnvBANK0 0020   GET_ADC_DATA@ADCON0Buff 007A            _POWER_INITIAL 07A1  
               DelayUs@a 0071           ?_POWER_INITIAL 0070              DelayUs@Time 0070  
       __size_of_DelayUs 0009            ??_PWM_INITIAL 0070             ?_ADC_INITIAL 0070  
          __size_of_main 001E      __end_of_PWM_INITIAL 07A1          ??_POWER_INITIAL 0070  
          ?_GET_ADC_DATA 0072              _PWM_INITIAL 0794           ??_GET_ADC_DATA 0075  
