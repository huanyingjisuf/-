

GNU Macro Assembler for 8 bit devices.       
                                                                                               Mon Aug 15 13:04:48 2022

GNU C Code Generator                                                 
     1                           	processor	FT61F02X
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	bitnvCOMMON,global,bit,class=COMMON,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	pa_nodes0,global,class=CODE,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 09/04/2020 
    22                           ; 
    23                           ; SFR Addresses
    24  0000                     
    25                           	psect	nvCOMMON
    26  0078                     __pnvCOMMON:	
    27  0078                     _pwm_d:	
    28  0078                     	ds	2
    29                           
    30                           	psect	bitnvCOMMON
    31  03D0                     __pbitnvCOMMON:	
    32  03D0                     _SAFlag:	
    33  03D0                     	ds	1
    34  001B                     _MSCKCON	set	27
    35  0019                     _CMCON0	set	25
    36  0017                     _ECCPAS	set	23
    37  0016                     _PWM1CON	set	22
    38  0015                     _CCP1CON	set	21
    39  0013                     _CCPR1L	set	19
    40  0012                     _T2CON	set	18
    41  0010                     _T1CON	set	16
    42  000F                     _TMR1H	set	15
    43  000E                     _TMR1L	set	14
    44  000B                     _INTCON	set	11
    45  0007                     _PORTC	set	7
    46  0005                     _PORTA	set	5
    47  0092                     _TMR2ON	set	146
    48  0080                     _TMR1ON	set	128
    49  0061                     _TMR2IF	set	97
    50  0060                     _TMR1IF	set	96
    51  005F                     _GIE	set	95
    52  005E                     _PEIE	set	94
    53  0095                     _WPUA	set	149
    54  0092                     _PR2	set	146
    55  0090                     _PWM1AUX	set	144
    56  008F                     _OSCCON	set	143
    57  0088                     _WPUC	set	136
    58  0087                     _TRISC	set	135
    59  0085                     _TRISA	set	133
    60  0081                     _OPTION	set	129
    61  0480                     _P1AOE	set	1152
    62  0460                     _TMR1IE	set	1120
    63  043D                     _TRISC5	set	1085
    64                           
    65                           	psect	cinit
    66  000B                     start_initialization:	
    67                           ; #config settings
    68                           
    69  000B                     __initialization:	
    70  000B                     end_of_initialization:	
    71                           ;End of C runtime variable initialization code
    72                           
    73  000B                     __end_of__initialization:	
    74  000B  0183               	clrf	3
    75  000C  280D               	ljmp	_main	;jump to C main() function
    76                           
    77                           	psect	cstackCOMMON
    78  0070                     __pcstackCOMMON:	
    79  0070                     ?_ISR:	
    80  0070                     ??_ISR:	
    81                           ; 1 bytes @ 0x0
    82                           
    83  0070                     ?_POWER_INITIAL:	
    84                           ; 1 bytes @ 0x0
    85                           
    86  0070                     ?_TIMER1_INITIAL:	
    87                           ; 1 bytes @ 0x0
    88                           
    89  0070                     ?_pwm_duty_count:	
    90                           ; 1 bytes @ 0x0
    91                           
    92  0070                     ?_PWM_INITIAL:	
    93                           ; 1 bytes @ 0x0
    94                           
    95  0070                     ?_DelayUs:	
    96                           ; 1 bytes @ 0x0
    97                           
    98  0070                     ?_DelayMs:	
    99                           ; 1 bytes @ 0x0
   100                           
   101  0070                     ?_main:	
   102                           ; 1 bytes @ 0x0
   103                           
   104                           
   105                           ; 1 bytes @ 0x0
   106  0070                     	ds	2
   107  0072                     ??_POWER_INITIAL:	
   108  0072                     ??_TIMER1_INITIAL:	
   109                           ; 1 bytes @ 0x2
   110                           
   111  0072                     ??_pwm_duty_count:	
   112                           ; 1 bytes @ 0x2
   113                           
   114  0072                     ??_DelayUs:	
   115                           ; 1 bytes @ 0x2
   116                           
   117  0072                     DelayUs@Time:	
   118                           ; 1 bytes @ 0x2
   119                           
   120                           
   121                           ; 1 bytes @ 0x2
   122  0072                     	ds	1
   123  0073                     DelayUs@a:	
   124                           
   125                           ; 1 bytes @ 0x3
   126  0073                     	ds	1
   127  0074                     ??_DelayMs:	
   128  0074                     DelayMs@Time:	
   129                           ; 1 bytes @ 0x4
   130                           
   131  0074                     pwm_duty_count@lsb22:	
   132                           ; 1 bytes @ 0x4
   133                           
   134                           
   135                           ; 2 bytes @ 0x4
   136  0074                     	ds	1
   137  0075                     DelayMs@a:	
   138                           
   139                           ; 1 bytes @ 0x5
   140  0075                     	ds	1
   141  0076                     pwm_duty_count@lsb23:	
   142  0076                     DelayMs@b:	
   143                           ; 1 bytes @ 0x6
   144                           
   145                           
   146                           ; 1 bytes @ 0x6
   147  0076                     	ds	1
   148  0077                     ??_PWM_INITIAL:	
   149  0077                     PWM_INITIAL@SET_PR2:	
   150                           ; 1 bytes @ 0x7
   151                           
   152                           
   153                           ; 1 bytes @ 0x7
   154  0077                     	ds	1
   155  0078                     ??_main:	
   156                           
   157                           	psect	maintext
   158  000D                     __pmaintext:	
   159                           ; 1 bytes @ 0x8
   160 ;;
   161 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   162 ;;
   163 ;; *************** function _main *****************
   164 ;; Defined at:
   165 ;;		line 188 in file "TEST_61F02x_PWM.c"
   166 ;; Parameters:    Size  Location     Type
   167 ;;		None
   168 ;; Auto vars:     Size  Location     Type
   169 ;;		None
   170 ;; Return value:  Size  Location     Type
   171 ;;                  1    wreg      void 
   172 ;; Registers used:
   173 ;;		wreg, status,2, status,0, pclath, cstack
   174 ;; Tracked objects:
   175 ;;		On entry : B00/0
   176 ;;		On exit  : 0/0
   177 ;;		Unchanged: 0/0
   178 ;; Data sizes:     COMMON   BANK0   BANK1
   179 ;;      Params:         0       0       0
   180 ;;      Locals:         0       0       0
   181 ;;      Temps:          0       0       0
   182 ;;      Totals:         0       0       0
   183 ;;Total ram usage:        0 bytes
   184 ;; Hardware stack levels required when called:    3
   185 ;; This function calls:
   186 ;;		_DelayMs
   187 ;;		_POWER_INITIAL
   188 ;;		_PWM_INITIAL
   189 ;;		_TIMER1_INITIAL
   190 ;;		_pwm_duty_count
   191 ;; This function is called by:
   192 ;;		Startup code after reset
   193 ;; This function uses a non-reentrant model
   194 ;;
   195                           
   196                           
   197                           ;psect for function _main
   198  000D                     _main:	
   199                           
   200                           ;TEST_61F02x_PWM.c: 190: POWER_INITIAL();
   201                           
   202                           ;incstack = 0
   203                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   204  000D  205C               	fcall	_POWER_INITIAL
   205                           
   206                           ;TEST_61F02x_PWM.c: 191: TIMER1_INITIAL();
   207  000E  20A5               	fcall	_TIMER1_INITIAL
   208                           
   209                           ;TEST_61F02x_PWM.c: 192: pwm_d = 10;
   210  000F  300A               	movlw	10
   211  0010  00F8               	movwf	_pwm_d	;volatile
   212  0011  01F9               	clrf	_pwm_d+1	;volatile
   213                           
   214                           ;TEST_61F02x_PWM.c: 193: PWM_INITIAL(99);
   215  0012  3063               	movlw	99
   216  0013  2072               	fcall	_PWM_INITIAL
   217                           
   218                           ;TEST_61F02x_PWM.c: 195: P1AOE = 1;
   219  0014  1683               	bsf	3,5	;RP0=1, select bank1
   220  0015  1410               	bsf	16,0	;volatile
   221                           
   222                           ;TEST_61F02x_PWM.c: 197: TRISC5 = 0;
   223  0016  1287               	bcf	7,5	;volatile
   224                           
   225                           ;TEST_61F02x_PWM.c: 199: TMR2ON = 1;
   226  0017  1283               	bcf	3,5	;RP0=0, select bank0
   227  0018  1512               	bsf	18,2	;volatile
   228                           
   229                           ;TEST_61F02x_PWM.c: 200: SAFlag = 1;
   230  0019  147A               	bsf	_SAFlag/(0+8),_SAFlag& (0+7)	;volatile
   231  001A                     l1596:	
   232                           
   233                           ;TEST_61F02x_PWM.c: 202: {
   234                           ;TEST_61F02x_PWM.c: 203: if(SAFlag == 1)
   235  001A  1C7A               	btfss	_SAFlag/(0+8),_SAFlag& (0+7)	;volatile
   236  001B  2828               	goto	l1604
   237                           
   238                           ;TEST_61F02x_PWM.c: 204: {
   239                           ;TEST_61F02x_PWM.c: 205: pwm_d++;
   240  001C  0AF8               	incf	_pwm_d,f	;volatile
   241  001D  1903               	skipnz
   242  001E  0AF9               	incf	_pwm_d+1,f	;volatile
   243                           
   244                           ;TEST_61F02x_PWM.c: 206: if(pwm_d > 400)
   245  001F  3001               	movlw	1
   246  0020  0279               	subwf	_pwm_d+1,w	;volatile
   247  0021  3091               	movlw	145
   248  0022  1903               	skipnz
   249  0023  0278               	subwf	_pwm_d,w	;volatile
   250  0024  1C03               	skipc
   251  0025  2832               	goto	l1610
   252                           
   253                           ;TEST_61F02x_PWM.c: 207: {
   254                           ;TEST_61F02x_PWM.c: 208: SAFlag = 0;
   255  0026  107A               	bcf	_SAFlag/(0+8),_SAFlag& (0+7)	;volatile
   256  0027  2832               	goto	l1610
   257  0028                     l1604:	
   258                           
   259                           ;TEST_61F02x_PWM.c: 211: else
   260                           ;TEST_61F02x_PWM.c: 212: {
   261                           ;TEST_61F02x_PWM.c: 213: pwm_d--;
   262  0028  3001               	movlw	1
   263  0029  02F8               	subwf	_pwm_d,f	;volatile
   264  002A  3000               	movlw	0
   265  002B  1C03               	skipc
   266  002C  03F9               	decf	_pwm_d+1,f	;volatile
   267  002D  02F9               	subwf	_pwm_d+1,f	;volatile
   268                           
   269                           ;TEST_61F02x_PWM.c: 214: if(pwm_d == 0)
   270  002E  0878               	movf	_pwm_d,w	;volatile
   271  002F  0479               	iorwf	_pwm_d+1,w	;volatile
   272  0030  1903               	btfsc	3,2
   273                           
   274                           ;TEST_61F02x_PWM.c: 215: {
   275                           ;TEST_61F02x_PWM.c: 216: SAFlag = 1;
   276  0031  147A               	bsf	_SAFlag/(0+8),_SAFlag& (0+7)	;volatile
   277  0032                     l1610:	
   278                           
   279                           ;TEST_61F02x_PWM.c: 217: }
   280                           ;TEST_61F02x_PWM.c: 218: }
   281                           ;TEST_61F02x_PWM.c: 219: pwm_duty_count();
   282  0032  2036               	fcall	_pwm_duty_count
   283                           
   284                           ;TEST_61F02x_PWM.c: 220: DelayMs(10);
   285  0033  300A               	movlw	10
   286  0034  2085               	fcall	_DelayMs
   287  0035  281A               	goto	l1596
   288  0036                     __end_of_main:	
   289                           
   290                           	psect	text1
   291  00A5                     __ptext1:	
   292 ;; *************** function _TIMER1_INITIAL *****************
   293 ;; Defined at:
   294 ;;		line 81 in file "TEST_61F02x_PWM.c"
   295 ;; Parameters:    Size  Location     Type
   296 ;;		None
   297 ;; Auto vars:     Size  Location     Type
   298 ;;		None
   299 ;; Return value:  Size  Location     Type
   300 ;;                  1    wreg      void 
   301 ;; Registers used:
   302 ;;		wreg, status,2
   303 ;; Tracked objects:
   304 ;;		On entry : B00/0
   305 ;;		On exit  : B00/0
   306 ;;		Unchanged: 800/0
   307 ;; Data sizes:     COMMON   BANK0   BANK1
   308 ;;      Params:         0       0       0
   309 ;;      Locals:         0       0       0
   310 ;;      Temps:          0       0       0
   311 ;;      Totals:         0       0       0
   312 ;;Total ram usage:        0 bytes
   313 ;; Hardware stack levels used:    1
   314 ;; Hardware stack levels required when called:    1
   315 ;; This function calls:
   316 ;;		Nothing
   317 ;; This function is called by:
   318 ;;		_main
   319 ;; This function uses a non-reentrant model
   320 ;;
   321                           
   322                           
   323                           ;psect for function _TIMER1_INITIAL
   324  00A5                     _TIMER1_INITIAL:	
   325                           
   326                           ;TEST_61F02x_PWM.c: 84: T1CON = 0B00000000;
   327                           
   328                           ;incstack = 0
   329                           ; Regs used in _TIMER1_INITIAL: [wreg+status,2]
   330  00A5  0190               	clrf	16	;volatile
   331                           
   332                           ;TEST_61F02x_PWM.c: 88: TMR1L = 0X80;
   333  00A6  3080               	movlw	128
   334  00A7  008E               	movwf	14	;volatile
   335                           
   336                           ;TEST_61F02x_PWM.c: 89: TMR1H = 0XC1;
   337  00A8  30C1               	movlw	193
   338  00A9  008F               	movwf	15	;volatile
   339                           
   340                           ;TEST_61F02x_PWM.c: 90: TMR1IE = 1;
   341  00AA  1683               	bsf	3,5	;RP0=1, select bank1
   342  00AB  140C               	bsf	12,0	;volatile
   343                           
   344                           ;TEST_61F02x_PWM.c: 91: TMR1ON = 1;
   345  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   346  00AD  1410               	bsf	16,0	;volatile
   347                           
   348                           ;TEST_61F02x_PWM.c: 92: PEIE=1;
   349  00AE  170B               	bsf	11,6	;volatile
   350                           
   351                           ;TEST_61F02x_PWM.c: 93: GIE = 1;
   352  00AF  178B               	bsf	11,7	;volatile
   353  00B0  0008               	return
   354  00B1                     __end_of_TIMER1_INITIAL:	
   355                           
   356                           	psect	text2
   357  0072                     __ptext2:	
   358 ;; *************** function _PWM_INITIAL *****************
   359 ;; Defined at:
   360 ;;		line 121 in file "TEST_61F02x_PWM.c"
   361 ;; Parameters:    Size  Location     Type
   362 ;;  SET_PR2         1    wreg     unsigned char 
   363 ;; Auto vars:     Size  Location     Type
   364 ;;  SET_PR2         1    7[COMMON] unsigned char 
   365 ;; Return value:  Size  Location     Type
   366 ;;                  1    wreg      void 
   367 ;; Registers used:
   368 ;;		wreg, status,2, status,0, pclath, cstack
   369 ;; Tracked objects:
   370 ;;		On entry : B00/0
   371 ;;		On exit  : 300/0
   372 ;;		Unchanged: 0/0
   373 ;; Data sizes:     COMMON   BANK0   BANK1
   374 ;;      Params:         0       0       0
   375 ;;      Locals:         1       0       0
   376 ;;      Temps:          0       0       0
   377 ;;      Totals:         1       0       0
   378 ;;Total ram usage:        1 bytes
   379 ;; Hardware stack levels used:    1
   380 ;; Hardware stack levels required when called:    2
   381 ;; This function calls:
   382 ;;		_pwm_duty_count
   383 ;; This function is called by:
   384 ;;		_main
   385 ;; This function uses a non-reentrant model
   386 ;;
   387                           
   388                           
   389                           ;psect for function _PWM_INITIAL
   390  0072                     _PWM_INITIAL:	
   391                           
   392                           ;incstack = 0
   393                           ; Regs used in _PWM_INITIAL: [wreg+status,2+status,0+pclath+cstack]
   394                           ;PWM_INITIAL@SET_PR2 stored from wreg
   395  0072  00F7               	movwf	PWM_INITIAL@SET_PR2
   396                           
   397                           ;TEST_61F02x_PWM.c: 123: MSCKCON = 0B00000000;
   398  0073  019B               	clrf	27	;volatile
   399                           
   400                           ;TEST_61F02x_PWM.c: 127: T2CON = 0B00000000;
   401  0074  0192               	clrf	18	;volatile
   402                           
   403                           ;TEST_61F02x_PWM.c: 128: PR2 = SET_PR2;
   404  0075  1683               	bsf	3,5	;RP0=1, select bank1
   405  0076  0092               	movwf	18	;volatile
   406                           
   407                           ;TEST_61F02x_PWM.c: 129: CCP1CON = 0B10001101;
   408  0077  308D               	movlw	141
   409  0078  1283               	bcf	3,5	;RP0=0, select bank0
   410  0079  0095               	movwf	21	;volatile
   411                           
   412                           ;TEST_61F02x_PWM.c: 134: pwm_duty_count();
   413  007A  2036               	fcall	_pwm_duty_count
   414                           
   415                           ;TEST_61F02x_PWM.c: 136: PWM1CON = 0B10000001;
   416  007B  3081               	movlw	129
   417  007C  0096               	movwf	22	;volatile
   418                           
   419                           ;TEST_61F02x_PWM.c: 140: ECCPAS = 0B00001111;
   420  007D  300F               	movlw	15
   421  007E  0097               	movwf	23	;volatile
   422                           
   423                           ;TEST_61F02x_PWM.c: 144: PWM1AUX = 0B10000000;
   424  007F  3080               	movlw	128
   425  0080  1683               	bsf	3,5	;RP0=1, select bank1
   426  0081  0090               	movwf	16	;volatile
   427                           
   428                           ;TEST_61F02x_PWM.c: 149: TMR2IF = 0;
   429  0082  1283               	bcf	3,5	;RP0=0, select bank0
   430  0083  108C               	bcf	12,1	;volatile
   431  0084  0008               	return
   432  0085                     __end_of_PWM_INITIAL:	
   433                           
   434                           	psect	text3
   435  0036                     __ptext3:	
   436 ;; *************** function _pwm_duty_count *****************
   437 ;; Defined at:
   438 ;;		line 101 in file "TEST_61F02x_PWM.c"
   439 ;; Parameters:    Size  Location     Type
   440 ;;		None
   441 ;; Auto vars:     Size  Location     Type
   442 ;;  lsb22           2    4[COMMON] unsigned int 
   443 ;;  lsb23           1    6[COMMON] unsigned char 
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		wreg, status,2, status,0
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 300/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMMON   BANK0   BANK1
   453 ;;      Params:         0       0       0
   454 ;;      Locals:         3       0       0
   455 ;;      Temps:          2       0       0
   456 ;;      Totals:         5       0       0
   457 ;;Total ram usage:        5 bytes
   458 ;; Hardware stack levels used:    1
   459 ;; Hardware stack levels required when called:    1
   460 ;; This function calls:
   461 ;;		Nothing
   462 ;; This function is called by:
   463 ;;		_PWM_INITIAL
   464 ;;		_main
   465 ;; This function uses a non-reentrant model
   466 ;;
   467                           
   468                           
   469                           ;psect for function _pwm_duty_count
   470  0036                     _pwm_duty_count:	
   471                           
   472                           ;TEST_61F02x_PWM.c: 103: unsigned int lsb22;
   473                           ;TEST_61F02x_PWM.c: 104: unsigned char lsb23;
   474                           ;TEST_61F02x_PWM.c: 105: lsb22 = (unsigned char) pwm_d & 0B00000011;
   475                           
   476                           ;incstack = 0
   477                           ; Regs used in _pwm_duty_count: [wreg+status,2+status,0]
   478  0036  0878               	movf	_pwm_d,w	;volatile
   479  0037  3903               	andlw	3
   480  0038  00F4               	movwf	pwm_duty_count@lsb22
   481  0039  30CF               	movlw	207
   482  003A  01F5               	clrf	pwm_duty_count@lsb22+1
   483                           
   484                           ;TEST_61F02x_PWM.c: 106: CCP1CON = CCP1CON & 0B11001111;
   485  003B  1283               	bcf	3,5	;RP0=0, select bank0
   486  003C  1303               	bcf	3,6	;RP1=0, select bank0
   487  003D  0595               	andwf	21,f	;volatile
   488  003E  30F0               	movlw	240
   489                           
   490                           ;TEST_61F02x_PWM.c: 107: lsb22 <<= 4;
   491  003F  0EF4               	swapf	pwm_duty_count@lsb22,f
   492  0040  0EF5               	swapf	pwm_duty_count@lsb22+1,f
   493  0041  05F5               	andwf	pwm_duty_count@lsb22+1,f
   494  0042  0874               	movf	pwm_duty_count@lsb22,w
   495  0043  390F               	andlw	15
   496  0044  04F5               	iorwf	pwm_duty_count@lsb22+1,f
   497  0045  30F0               	movlw	240
   498  0046  05F4               	andwf	pwm_duty_count@lsb22,f
   499                           
   500                           ;TEST_61F02x_PWM.c: 108: lsb23 = (unsigned char)lsb22;
   501  0047  0874               	movf	pwm_duty_count@lsb22,w
   502  0048  00F6               	movwf	pwm_duty_count@lsb23
   503                           
   504                           ;TEST_61F02x_PWM.c: 109: CCP1CON = CCP1CON | lsb23;
   505  0049  0495               	iorwf	21,f	;volatile
   506                           
   507                           ;TEST_61F02x_PWM.c: 110: lsb22 = pwm_d >> 2;
   508  004A  0879               	movf	_pwm_d+1,w	;volatile
   509  004B  00F3               	movwf	??_pwm_duty_count+1
   510  004C  0878               	movf	_pwm_d,w	;volatile
   511  004D  00F2               	movwf	??_pwm_duty_count
   512  004E  1003               	clrc
   513  004F  0CF3               	rrf	??_pwm_duty_count+1,f
   514  0050  0CF2               	rrf	??_pwm_duty_count,f
   515  0051  1003               	clrc
   516  0052  0CF3               	rrf	??_pwm_duty_count+1,f
   517  0053  0CF2               	rrf	??_pwm_duty_count,f
   518  0054  0872               	movf	??_pwm_duty_count,w
   519  0055  00F4               	movwf	pwm_duty_count@lsb22
   520  0056  0873               	movf	??_pwm_duty_count+1,w
   521  0057  00F5               	movwf	pwm_duty_count@lsb22+1
   522                           
   523                           ;TEST_61F02x_PWM.c: 111: lsb23 = (unsigned char)lsb22;
   524  0058  0874               	movf	pwm_duty_count@lsb22,w
   525  0059  00F6               	movwf	pwm_duty_count@lsb23
   526                           
   527                           ;TEST_61F02x_PWM.c: 112: CCPR1L = lsb23;
   528  005A  0093               	movwf	19	;volatile
   529  005B  0008               	return
   530  005C                     __end_of_pwm_duty_count:	
   531                           
   532                           	psect	text4
   533  005C                     __ptext4:	
   534 ;; *************** function _POWER_INITIAL *****************
   535 ;; Defined at:
   536 ;;		line 56 in file "TEST_61F02x_PWM.c"
   537 ;; Parameters:    Size  Location     Type
   538 ;;		None
   539 ;; Auto vars:     Size  Location     Type
   540 ;;		None
   541 ;; Return value:  Size  Location     Type
   542 ;;                  1    wreg      void 
   543 ;; Registers used:
   544 ;;		wreg, status,2
   545 ;; Tracked objects:
   546 ;;		On entry : B00/0
   547 ;;		On exit  : B00/0
   548 ;;		Unchanged: 800/0
   549 ;; Data sizes:     COMMON   BANK0   BANK1
   550 ;;      Params:         0       0       0
   551 ;;      Locals:         0       0       0
   552 ;;      Temps:          0       0       0
   553 ;;      Totals:         0       0       0
   554 ;;Total ram usage:        0 bytes
   555 ;; Hardware stack levels used:    1
   556 ;; Hardware stack levels required when called:    1
   557 ;; This function calls:
   558 ;;		Nothing
   559 ;; This function is called by:
   560 ;;		_main
   561 ;; This function uses a non-reentrant model
   562 ;;
   563                           
   564                           
   565                           ;psect for function _POWER_INITIAL
   566  005C                     _POWER_INITIAL:	
   567                           
   568                           ;TEST_61F02x_PWM.c: 58: OSCCON = 0B01110001;
   569                           
   570                           ;incstack = 0
   571                           ; Regs used in _POWER_INITIAL: [wreg+status,2]
   572  005C  3071               	movlw	113
   573  005D  1683               	bsf	3,5	;RP0=1, select bank1
   574  005E  008F               	movwf	15	;volatile
   575                           
   576                           ;TEST_61F02x_PWM.c: 59: INTCON = 0;
   577  005F  018B               	clrf	11	;volatile
   578                           
   579                           ;TEST_61F02x_PWM.c: 61: PORTA = 0B00000000;
   580  0060  1283               	bcf	3,5	;RP0=0, select bank0
   581  0061  0185               	clrf	5	;volatile
   582                           
   583                           ;TEST_61F02x_PWM.c: 62: TRISA = 0B00000000;
   584  0062  1683               	bsf	3,5	;RP0=1, select bank1
   585  0063  0185               	clrf	5	;volatile
   586                           
   587                           ;TEST_61F02x_PWM.c: 63: PORTC = 0B00000000;
   588  0064  1283               	bcf	3,5	;RP0=0, select bank0
   589  0065  0187               	clrf	7	;volatile
   590                           
   591                           ;TEST_61F02x_PWM.c: 64: TRISC = 0B11111111;
   592  0066  30FF               	movlw	255
   593  0067  1683               	bsf	3,5	;RP0=1, select bank1
   594  0068  0087               	movwf	7	;volatile
   595                           
   596                           ;TEST_61F02x_PWM.c: 66: WPUA = 0;
   597  0069  0195               	clrf	21	;volatile
   598                           
   599                           ;TEST_61F02x_PWM.c: 67: WPUC = 0 ;
   600  006A  0188               	clrf	8	;volatile
   601                           
   602                           ;TEST_61F02x_PWM.c: 68: OPTION = 0B00001000;
   603  006B  3008               	movlw	8
   604  006C  0081               	movwf	1	;volatile
   605                           
   606                           ;TEST_61F02x_PWM.c: 69: MSCKCON = 0B00000000;
   607  006D  1283               	bcf	3,5	;RP0=0, select bank0
   608  006E  019B               	clrf	27	;volatile
   609                           
   610                           ;TEST_61F02x_PWM.c: 73: CMCON0 = 0B00000111;
   611  006F  3007               	movlw	7
   612  0070  0099               	movwf	25	;volatile
   613  0071  0008               	return
   614  0072                     __end_of_POWER_INITIAL:	
   615                           
   616                           	psect	text5
   617  0085                     __ptext5:	
   618 ;; *************** function _DelayMs *****************
   619 ;; Defined at:
   620 ;;		line 171 in file "TEST_61F02x_PWM.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;  Time            1    wreg     unsigned char 
   623 ;; Auto vars:     Size  Location     Type
   624 ;;  Time            1    4[COMMON] unsigned char 
   625 ;;  b               1    6[COMMON] unsigned char 
   626 ;;  a               1    5[COMMON] unsigned char 
   627 ;; Return value:  Size  Location     Type
   628 ;;                  1    wreg      void 
   629 ;; Registers used:
   630 ;;		wreg, status,2, status,0, pclath, cstack
   631 ;; Tracked objects:
   632 ;;		On entry : 300/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMMON   BANK0   BANK1
   636 ;;      Params:         0       0       0
   637 ;;      Locals:         3       0       0
   638 ;;      Temps:          0       0       0
   639 ;;      Totals:         3       0       0
   640 ;;Total ram usage:        3 bytes
   641 ;; Hardware stack levels used:    1
   642 ;; Hardware stack levels required when called:    2
   643 ;; This function calls:
   644 ;;		_DelayUs
   645 ;; This function is called by:
   646 ;;		_main
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           
   651                           ;psect for function _DelayMs
   652  0085                     _DelayMs:	
   653                           
   654                           ;incstack = 0
   655                           ; Regs used in _DelayMs: [wreg+status,2+status,0+pclath+cstack]
   656                           ;DelayMs@Time stored from wreg
   657  0085  00F4               	movwf	DelayMs@Time
   658                           
   659                           ;TEST_61F02x_PWM.c: 173: unsigned char a,b;
   660                           ;TEST_61F02x_PWM.c: 174: for(a=0;a<Time;a++)
   661  0086  01F5               	clrf	DelayMs@a
   662  0087                     l1574:	
   663  0087  0874               	movf	DelayMs@Time,w
   664  0088  0275               	subwf	DelayMs@a,w
   665  0089  1803               	btfsc	3,0
   666  008A  0008               	return
   667                           
   668                           ;TEST_61F02x_PWM.c: 175: {
   669                           ;TEST_61F02x_PWM.c: 176: for(b=0;b<5;b++)
   670  008B  01F6               	clrf	DelayMs@b
   671  008C                     l1566:	
   672                           
   673                           ;TEST_61F02x_PWM.c: 177: {
   674                           ;TEST_61F02x_PWM.c: 178: DelayUs(197);
   675  008C  30C5               	movlw	197
   676  008D  20B1               	fcall	_DelayUs
   677  008E  3005               	movlw	5
   678  008F  0AF6               	incf	DelayMs@b,f
   679  0090  0276               	subwf	DelayMs@b,w
   680  0091  1C03               	skipc
   681  0092  288C               	goto	l1566
   682  0093  0AF5               	incf	DelayMs@a,f
   683  0094  2887               	goto	l1574
   684  0095                     __end_of_DelayMs:	
   685                           
   686                           	psect	text6
   687  00B1                     __ptext6:	
   688 ;; *************** function _DelayUs *****************
   689 ;; Defined at:
   690 ;;		line 157 in file "TEST_61F02x_PWM.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;  Time            1    wreg     unsigned char 
   693 ;; Auto vars:     Size  Location     Type
   694 ;;  Time            1    2[COMMON] unsigned char 
   695 ;;  a               1    3[COMMON] unsigned char 
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		wreg, status,2, status,0
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMMON   BANK0   BANK1
   705 ;;      Params:         0       0       0
   706 ;;      Locals:         2       0       0
   707 ;;      Temps:          0       0       0
   708 ;;      Totals:         2       0       0
   709 ;;Total ram usage:        2 bytes
   710 ;; Hardware stack levels used:    1
   711 ;; Hardware stack levels required when called:    1
   712 ;; This function calls:
   713 ;;		Nothing
   714 ;; This function is called by:
   715 ;;		_DelayMs
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           
   720                           ;psect for function _DelayUs
   721  00B1                     _DelayUs:	
   722                           
   723                           ;incstack = 0
   724                           ; Regs used in _DelayUs: [wreg+status,2+status,0]
   725                           ;DelayUs@Time stored from wreg
   726  00B1  00F2               	movwf	DelayUs@Time
   727                           
   728                           ;TEST_61F02x_PWM.c: 159: unsigned char a;
   729                           ;TEST_61F02x_PWM.c: 160: for(a=0;a<Time;a++)
   730  00B2  01F3               	clrf	DelayUs@a
   731  00B3                     l1508:	
   732  00B3  0872               	movf	DelayUs@Time,w
   733  00B4  0273               	subwf	DelayUs@a,w
   734  00B5  1803               	btfsc	3,0
   735  00B6  0008               	return
   736                           
   737                           ;TEST_61F02x_PWM.c: 161: {
   738                           ;TEST_61F02x_PWM.c: 162: __nop();
   739  00B7  0000               	nop
   740  00B8  0AF3               	incf	DelayUs@a,f
   741  00B9  28B3               	goto	l1508
   742  00BA                     __end_of_DelayUs:	
   743                           
   744                           	psect	text7
   745  0095                     __ptext7:	
   746 ;; *************** function _ISR *****************
   747 ;; Defined at:
   748 ;;		line 39 in file "TEST_61F02x_PWM.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;		None
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      void 
   755 ;; Registers used:
   756 ;;		wreg
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 300/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMMON   BANK0   BANK1
   762 ;;      Params:         0       0       0
   763 ;;      Locals:         0       0       0
   764 ;;      Temps:          2       0       0
   765 ;;      Totals:         2       0       0
   766 ;;Total ram usage:        2 bytes
   767 ;; Hardware stack levels used:    1
   768 ;; This function calls:
   769 ;;		Nothing
   770 ;; This function is called by:
   771 ;;		Interrupt level 1
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           
   776                           ;psect for function _ISR
   777  0095                     _ISR:	
   778                           
   779                           ;TEST_61F02x_PWM.c: 41: if(TMR1IF)
   780  0095  1283               	bcf	3,5	;RP0=0, select bank0
   781  0096  1303               	bcf	3,6	;RP1=0, select bank0
   782  0097  1C0C               	btfss	12,0	;volatile
   783  0098  289E               	goto	i1l1074
   784                           
   785                           ;TEST_61F02x_PWM.c: 42: {
   786                           ;TEST_61F02x_PWM.c: 43: TMR1IF = 0;
   787  0099  100C               	bcf	12,0	;volatile
   788                           
   789                           ;TEST_61F02x_PWM.c: 46: TMR1L = 0X80;
   790  009A  3080               	movlw	128
   791  009B  008E               	movwf	14	;volatile
   792                           
   793                           ;TEST_61F02x_PWM.c: 47: TMR1H = 0XC1;
   794  009C  30C1               	movlw	193
   795  009D  008F               	movwf	15	;volatile
   796  009E                     i1l1074:	
   797  009E  0871               	movf	??_ISR+1,w
   798  009F  008A               	movwf	10
   799  00A0  0E70               	swapf	??_ISR^(0+-128),w
   800  00A1  0083               	movwf	3
   801  00A2  0EFE               	swapf	126,f
   802  00A3  0E7E               	swapf	126,w
   803  00A4  0009               	retfie
   804  00A5                     __end_of_ISR:	
   805  007E                     btemp	set	126	;btemp
   806  007E                     wtemp0	set	126
   807                           
   808                           	psect	intentry
   809  0004                     __pintentry:	
   810                           ;incstack = 0
   811                           ; Regs used in _ISR: [wreg]
   812                           
   813  0004                     interrupt_function:	
   814  007E                     saved_w	set	btemp
   815  0004  00FE               	movwf	btemp
   816  0005  0E03               	swapf	3,w
   817  0006  00F0               	movwf	??_ISR
   818  0007  080A               	movf	10,w
   819  0008  00F1               	movwf	??_ISR+1
   820  0009  2895               	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM_INITIAL
    _PWM_INITIAL->_pwm_duty_count
    _DelayMs->_DelayUs

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     225
                            _DelayMs
                      _POWER_INITIAL
                        _PWM_INITIAL
                     _TIMER1_INITIAL
                     _pwm_duty_count
 ---------------------------------------------------------------------------------
 (1) _TIMER1_INITIAL                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_INITIAL                                          1     1      0      75
                                              7 COMMON     1     1      0
                     _pwm_duty_count
 ---------------------------------------------------------------------------------
 (1) _pwm_duty_count                                       5     5      0      60
                                              2 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _POWER_INITIAL                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DelayMs                                              3     3      0      90
                                              4 COMMON     3     3      0
                            _DelayUs
 ---------------------------------------------------------------------------------
 (2) _DelayUs                                              2     2      0      30
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayMs
     _DelayUs
   _POWER_INITIAL
   _PWM_INITIAL
     _pwm_duty_count
   _TIMER1_INITIAL
   _pwm_duty_count

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       0       4        0.0%
BITBANK1            20      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               20      0       0       6        0.0%
ABS                  0      0       B       7        0.0%
DATA                 0      0       B       8        0.0%


GNU Macro Assembler for 8 bit devices.     
Symbol Table                                                                                   Mon Aug 15 13:04:48 2022

                    _GIE 005F                      _PR2 0092                      _ISR 0095  
                   ?_ISR 0070                     l1610 0032                     l1508 00B3  
                   l1604 0028                     l1566 008C                     l1574 0087  
                   l1596 001A                     _PEIE 005E                     _WPUA 0095  
                   _WPUC 0088                     _main 000D                     btemp 007E  
                   start 000A          __end_of_DelayMs 0095          __end_of_DelayUs 00BA  
                  ??_ISR 0070           _pwm_duty_count 0036           _TIMER1_INITIAL 00A5  
                  ?_main 0070                    _P1AOE 0480                    _T1CON 0010  
                  _T2CON 0012                    _TMR1H 000F                    _TMR1L 000E  
                  _PORTA 0005                    _PORTC 0007                    _TRISA 0085  
                  _TRISC 0087                    _pwm_d 0078                    pclath 000A  
                  status 0003                    wtemp0 007E   __end_of_pwm_duty_count 005C  
        __initialization 000B             __end_of_main 0036   __end_of_TIMER1_INITIAL 00B1  
                 ??_main 0078                   _ECCPAS 0017                   _CCPR1L 0013  
                 _CMCON0 0019                   i1l1074 009E                   _INTCON 000B  
              ??_DelayMs 0074                ??_DelayUs 0072                   _OSCCON 008F  
                 _SAFlag 03D0                   _TMR1IE 0460                   _TMR1IF 0060  
                 _TMR2IF 0061                   _OPTION 0081                   _TMR1ON 0080  
                 _TMR2ON 0092                   _TRISC5 043D          ?_pwm_duty_count 0070  
        ?_TIMER1_INITIAL 0070                   saved_w 007E    __end_of_POWER_INITIAL 0072  
__end_of__initialization 000B             ?_PWM_INITIAL 0070           __pcstackCOMMON 0070  
             __pnvCOMMON 0078               __pmaintext 000D               __pintentry 0004  
                _CCP1CON 0015                  _MSCKCON 001B                  _PWM1CON 0016  
                _PWM1AUX 0090                  _DelayMs 0085                  _DelayUs 00B1  
                __ptext1 00A5                  __ptext2 0072                  __ptext3 0036  
                __ptext4 005C                  __ptext5 0085                  __ptext6 00B1  
                __ptext7 0095             __size_of_ISR 0010     end_of_initialization 000B  
       ??_pwm_duty_count 0072         ??_TIMER1_INITIAL 0072     __size_of_PWM_INITIAL 0013  
          __pbitnvCOMMON 03D0      start_initialization 000B              __end_of_ISR 00A5  
     PWM_INITIAL@SET_PR2 0077   __size_of_POWER_INITIAL 0016                ___latbits 0000  
               ?_DelayMs 0070                 ?_DelayUs 0070        interrupt_function 0004  
          _POWER_INITIAL 005C                 DelayMs@a 0075                 DelayMs@b 0076  
               DelayUs@a 0073              DelayMs@Time 0074           ?_POWER_INITIAL 0070  
            DelayUs@Time 0072         __size_of_DelayMs 0010         __size_of_DelayUs 0009  
          ??_PWM_INITIAL 0077            __size_of_main 0029      __end_of_PWM_INITIAL 0085  
__size_of_pwm_duty_count 0026  __size_of_TIMER1_INITIAL 000C          ??_POWER_INITIAL 0072  
               intlevel1 0000              _PWM_INITIAL 0072      pwm_duty_count@lsb22 0074  
    pwm_duty_count@lsb23 0076  
