

GNU Macro Assembler for 8 bit devices.       
                                                                                               Thu Oct 14 17:22:52 2021

GNU C Code Generator                                                 
     1                           	processor	FT61F02X
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	bitnvCOMMON,global,bit,class=COMMON,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	pa_nodes0,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 09/04/2020 
    18                           ; 
    19                           ; SFR Addresses
    20  0000                     
    21                           	psect	bitnvCOMMON
    22  03A8                     __pbitnvCOMMON:	
    23  03A8                     _SAFlag:	
    24  03A8                     	ds	1
    25  001B                     _MSCKCON	set	27
    26  0019                     _CMCON0	set	25
    27  000B                     _INTCON	set	11
    28  0007                     _PORTC	set	7
    29  0005                     _PORTA	set	5
    30  00DE                     _VREG_OE	set	222
    31  0095                     _WPUA	set	149
    32  008F                     _OSCCON	set	143
    33  0088                     _WPUC	set	136
    34  0087                     _TRISC	set	135
    35  0085                     _TRISA	set	133
    36  0081                     _OPTION	set	129
    37  0109                     _VCON2	set	265
    38  0108                     _VCON1	set	264
    39                           
    40                           	psect	cinit
    41  07FD                     start_initialization:	
    42                           ; #config settings
    43                           
    44  07FD                     __initialization:	
    45                           
    46                           ; Clear objects allocated to COMMON
    47  07FD  01F6               	clrf	__pbssCOMMON& (0+127)
    48  07FE                     end_of_initialization:	
    49                           ;End of C runtime variable initialization code
    50                           
    51  07FE                     __end_of__initialization:	
    52  07FE  0183               	clrf	3
    53  07FF  2FE1               	ljmp	_main	;jump to C main() function
    54                           
    55                           	psect	bssCOMMON
    56  0076                     __pbssCOMMON:	
    57  0076                     _VREGC:	
    58  0076                     	ds	1
    59                           
    60                           	psect	cstackCOMMON
    61  0070                     __pcstackCOMMON:	
    62  0070                     ?_POWER_INITIAL:	
    63  0070                     ??_POWER_INITIAL:	
    64                           ; 1 bytes @ 0x0
    65                           
    66  0070                     ?_DelayUs:	
    67                           ; 1 bytes @ 0x0
    68                           
    69  0070                     ??_DelayUs:	
    70                           ; 1 bytes @ 0x0
    71                           
    72  0070                     ?_DelayMs:	
    73                           ; 1 bytes @ 0x0
    74                           
    75  0070                     ?_VREG_INITIAL:	
    76                           ; 1 bytes @ 0x0
    77                           
    78  0070                     ??_VREG_INITIAL:	
    79                           ; 1 bytes @ 0x0
    80                           
    81  0070                     ?_main:	
    82                           ; 1 bytes @ 0x0
    83                           
    84  0070                     DelayUs@Time:	
    85                           ; 1 bytes @ 0x0
    86                           
    87                           
    88                           ; 1 bytes @ 0x0
    89  0070                     	ds	1
    90  0071                     DelayUs@a:	
    91                           
    92                           ; 1 bytes @ 0x1
    93  0071                     	ds	1
    94  0072                     ??_DelayMs:	
    95  0072                     DelayMs@Time:	
    96                           ; 1 bytes @ 0x2
    97                           
    98                           
    99                           ; 1 bytes @ 0x2
   100  0072                     	ds	1
   101  0073                     DelayMs@a:	
   102                           
   103                           ; 1 bytes @ 0x3
   104  0073                     	ds	1
   105  0074                     DelayMs@b:	
   106                           
   107                           ; 1 bytes @ 0x4
   108  0074                     	ds	1
   109  0075                     ??_main:	
   110                           
   111                           	psect	maintext
   112  07E1                     __pmaintext:	
   113                           ; 1 bytes @ 0x5
   114 ;;
   115 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   116 ;;
   117 ;; *************** function _main *****************
   118 ;; Defined at:
   119 ;;		line 114 in file "test_61f02x_VREG.C"
   120 ;; Parameters:    Size  Location     Type
   121 ;;		None
   122 ;; Auto vars:     Size  Location     Type
   123 ;;		None
   124 ;; Return value:  Size  Location     Type
   125 ;;                  1    wreg      void 
   126 ;; Registers used:
   127 ;;		wreg, status,2, status,0, pclath, cstack
   128 ;; Tracked objects:
   129 ;;		On entry : B00/0
   130 ;;		On exit  : 0/0
   131 ;;		Unchanged: 0/0
   132 ;; Data sizes:     COMMON   BANK0   BANK1
   133 ;;      Params:         0       0       0
   134 ;;      Locals:         0       0       0
   135 ;;      Temps:          0       0       0
   136 ;;      Totals:         0       0       0
   137 ;;Total ram usage:        0 bytes
   138 ;; Hardware stack levels required when called:    2
   139 ;; This function calls:
   140 ;;		_DelayMs
   141 ;;		_POWER_INITIAL
   142 ;;		_VREG_INITIAL
   143 ;; This function is called by:
   144 ;;		Startup code after reset
   145 ;; This function uses a non-reentrant model
   146 ;;
   147                           
   148                           
   149                           ;psect for function _main
   150  07E1                     _main:	
   151                           
   152                           ;test_61f02x_VREG.C: 116: POWER_INITIAL();
   153                           
   154                           ;incstack = 0
   155                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   156  07E1  27CC               	fcall	_POWER_INITIAL
   157                           
   158                           ;test_61f02x_VREG.C: 117: VREG_INITIAL();
   159  07E2  27B3               	fcall	_VREG_INITIAL
   160                           
   161                           ;test_61f02x_VREG.C: 118: SAFlag = 1;
   162  07E3  1475               	bsf	_SAFlag/(0+8),_SAFlag& (0+7)	;volatile
   163  07E4                     l1530:	
   164                           
   165                           ;test_61f02x_VREG.C: 120: {
   166                           ;test_61f02x_VREG.C: 121: if(SAFlag == 1)
   167  07E4  1C75               	btfss	_SAFlag/(0+8),_SAFlag& (0+7)	;volatile
   168  07E5  2FEE               	goto	l1542
   169                           
   170                           ;test_61f02x_VREG.C: 122: {
   171                           ;test_61f02x_VREG.C: 123: VREGC++;
   172  07E6  0AF6               	incf	_VREGC,f	;volatile
   173                           
   174                           ;test_61f02x_VREG.C: 124: VCON1 &= 0B11100000;
   175                           
   176                           ;test_61f02x_VREG.C: 125: VCON1 |= VREGC;
   177  07E7  27F6               	fcall	PL2	;call to abstracted procedure
   178                           
   179                           ;test_61f02x_VREG.C: 126: if(VREGC >= 31)
   180  07E8  301F               	movlw	31
   181  07E9  0276               	subwf	_VREGC,w	;volatile
   182  07EA  1C03               	skipc
   183  07EB  2FF3               	goto	l1552
   184                           
   185                           ;test_61f02x_VREG.C: 127: {
   186                           ;test_61f02x_VREG.C: 128: SAFlag = 0;
   187  07EC  1075               	bcf	_SAFlag/(0+8),_SAFlag& (0+7)	;volatile
   188  07ED  2FF3               	goto	l1552
   189  07EE                     l1542:	
   190                           
   191                           ;test_61f02x_VREG.C: 131: else
   192                           ;test_61f02x_VREG.C: 132: {
   193                           ;test_61f02x_VREG.C: 133: VREGC--;
   194  07EE  03F6               	decf	_VREGC,f	;volatile
   195                           
   196                           ;test_61f02x_VREG.C: 134: VCON1 &= 0B11100000;
   197                           
   198                           ;test_61f02x_VREG.C: 135: VCON1 |= VREGC;
   199  07EF  27F6               	fcall	PL2	;call to abstracted procedure
   200                           
   201                           ;test_61f02x_VREG.C: 136: if(VREGC == 0)
   202  07F0  0876               	movf	_VREGC,w	;volatile
   203  07F1  1903               	btfsc	3,2
   204                           
   205                           ;test_61f02x_VREG.C: 137: {
   206                           ;test_61f02x_VREG.C: 138: SAFlag = 1;
   207  07F2  1475               	bsf	_SAFlag/(0+8),_SAFlag& (0+7)	;volatile
   208  07F3                     l1552:	
   209                           
   210                           ;test_61f02x_VREG.C: 139: }
   211                           ;test_61f02x_VREG.C: 140: }
   212                           ;test_61f02x_VREG.C: 141: DelayMs(1);
   213  07F3  3001               	movlw	1
   214  07F4  27BC               	fcall	_DelayMs
   215  07F5  2FE4               	goto	l1530
   216  07F6                     __end_of_main:	
   217  07F6                     PL2:	
   218  07F6  30E0               	movlw	224
   219  07F7  1283               	bcf	3,5	;RP0=0, select bank2
   220  07F8  1703               	bsf	3,6	;RP1=1, select bank2
   221  07F9  0588               	andwf	8,f	;volatile
   222  07FA  0876               	movf	_VREGC,w	;volatile
   223  07FB  0488               	iorwf	8,f	;volatile
   224  07FC  0008               	return
   225  07FD                     __end_ofPL2:	
   226                           
   227                           	psect	text1
   228  07B3                     __ptext1:	
   229 ;; *************** function _VREG_INITIAL *****************
   230 ;; Defined at:
   231 ;;		line 95 in file "test_61f02x_VREG.C"
   232 ;; Parameters:    Size  Location     Type
   233 ;;		None
   234 ;; Auto vars:     Size  Location     Type
   235 ;;		None
   236 ;; Return value:  Size  Location     Type
   237 ;;                  1    wreg      void 
   238 ;; Registers used:
   239 ;;		wreg
   240 ;; Tracked objects:
   241 ;;		On entry : B00/0
   242 ;;		On exit  : B00/0
   243 ;;		Unchanged: 800/0
   244 ;; Data sizes:     COMMON   BANK0   BANK1
   245 ;;      Params:         0       0       0
   246 ;;      Locals:         0       0       0
   247 ;;      Temps:          0       0       0
   248 ;;      Totals:         0       0       0
   249 ;;Total ram usage:        0 bytes
   250 ;; Hardware stack levels used:    1
   251 ;; This function calls:
   252 ;;		Nothing
   253 ;; This function is called by:
   254 ;;		_main
   255 ;; This function uses a non-reentrant model
   256 ;;
   257                           
   258                           
   259                           ;psect for function _VREG_INITIAL
   260  07B3                     _VREG_INITIAL:	
   261                           
   262                           ;test_61f02x_VREG.C: 97: VREG_OE = 0;
   263                           
   264                           ;incstack = 0
   265                           ; Regs used in _VREG_INITIAL: [wreg]
   266  07B3  131B               	bcf	27,6	;volatile
   267                           
   268                           ;test_61f02x_VREG.C: 98: VCON1 = 0B00111111;
   269  07B4  303F               	movlw	63
   270  07B5  1703               	bsf	3,6	;RP1=1, select bank2
   271  07B6  0088               	movwf	8	;volatile
   272                           
   273                           ;test_61f02x_VREG.C: 102: VCON2 = 0B00001111;
   274  07B7  300F               	movlw	15
   275  07B8  0089               	movwf	9	;volatile
   276                           
   277                           ;test_61f02x_VREG.C: 106: VREG_OE = 1;
   278  07B9  1303               	bcf	3,6	;RP1=0, select bank0
   279  07BA  171B               	bsf	27,6	;volatile
   280  07BB  0008               	return
   281  07BC                     __end_of_VREG_INITIAL:	
   282                           
   283                           	psect	text2
   284  07CC                     __ptext2:	
   285 ;; *************** function _POWER_INITIAL *****************
   286 ;; Defined at:
   287 ;;		line 34 in file "test_61f02x_VREG.C"
   288 ;; Parameters:    Size  Location     Type
   289 ;;		None
   290 ;; Auto vars:     Size  Location     Type
   291 ;;		None
   292 ;; Return value:  Size  Location     Type
   293 ;;                  1    wreg      void 
   294 ;; Registers used:
   295 ;;		wreg, status,2
   296 ;; Tracked objects:
   297 ;;		On entry : B00/0
   298 ;;		On exit  : B00/0
   299 ;;		Unchanged: 800/0
   300 ;; Data sizes:     COMMON   BANK0   BANK1
   301 ;;      Params:         0       0       0
   302 ;;      Locals:         0       0       0
   303 ;;      Temps:          0       0       0
   304 ;;      Totals:         0       0       0
   305 ;;Total ram usage:        0 bytes
   306 ;; Hardware stack levels used:    1
   307 ;; This function calls:
   308 ;;		Nothing
   309 ;; This function is called by:
   310 ;;		_main
   311 ;; This function uses a non-reentrant model
   312 ;;
   313                           
   314                           
   315                           ;psect for function _POWER_INITIAL
   316  07CC                     _POWER_INITIAL:	
   317                           
   318                           ;test_61f02x_VREG.C: 36: OSCCON = 0B01110001;
   319                           
   320                           ;incstack = 0
   321                           ; Regs used in _POWER_INITIAL: [wreg+status,2]
   322  07CC  3071               	movlw	113
   323  07CD  1683               	bsf	3,5	;RP0=1, select bank1
   324  07CE  008F               	movwf	15	;volatile
   325                           
   326                           ;test_61f02x_VREG.C: 37: INTCON = 0;
   327  07CF  018B               	clrf	11	;volatile
   328                           
   329                           ;test_61f02x_VREG.C: 38: PORTA = 0B00000000;
   330  07D0  1283               	bcf	3,5	;RP0=0, select bank0
   331  07D1  0185               	clrf	5	;volatile
   332                           
   333                           ;test_61f02x_VREG.C: 39: TRISA = 0B00000000;
   334  07D2  1683               	bsf	3,5	;RP0=1, select bank1
   335  07D3  0185               	clrf	5	;volatile
   336                           
   337                           ;test_61f02x_VREG.C: 41: PORTC = 0B00000000;
   338  07D4  1283               	bcf	3,5	;RP0=0, select bank0
   339  07D5  0187               	clrf	7	;volatile
   340                           
   341                           ;test_61f02x_VREG.C: 42: TRISC = 0B00000000;
   342  07D6  1683               	bsf	3,5	;RP0=1, select bank1
   343  07D7  0187               	clrf	7	;volatile
   344                           
   345                           ;test_61f02x_VREG.C: 44: WPUA = 0B00000000;
   346  07D8  0195               	clrf	21	;volatile
   347                           
   348                           ;test_61f02x_VREG.C: 46: WPUC = 0B00000000;
   349  07D9  0188               	clrf	8	;volatile
   350                           
   351                           ;test_61f02x_VREG.C: 48: OPTION = 0B00001000;
   352  07DA  3008               	movlw	8
   353  07DB  0081               	movwf	1	;volatile
   354                           
   355                           ;test_61f02x_VREG.C: 49: MSCKCON = 0B00000000;
   356  07DC  1283               	bcf	3,5	;RP0=0, select bank0
   357  07DD  019B               	clrf	27	;volatile
   358                           
   359                           ;test_61f02x_VREG.C: 54: CMCON0 = 0B00000111;
   360  07DE  3007               	movlw	7
   361  07DF  0099               	movwf	25	;volatile
   362  07E0  0008               	return
   363  07E1                     __end_of_POWER_INITIAL:	
   364                           
   365                           	psect	text3
   366  07BC                     __ptext3:	
   367 ;; *************** function _DelayMs *****************
   368 ;; Defined at:
   369 ;;		line 76 in file "test_61f02x_VREG.C"
   370 ;; Parameters:    Size  Location     Type
   371 ;;  Time            1    wreg     unsigned char 
   372 ;; Auto vars:     Size  Location     Type
   373 ;;  Time            1    2[COMMON] unsigned char 
   374 ;;  b               1    4[COMMON] unsigned char 
   375 ;;  a               1    3[COMMON] unsigned char 
   376 ;; Return value:  Size  Location     Type
   377 ;;                  1    wreg      void 
   378 ;; Registers used:
   379 ;;		wreg, status,2, status,0, pclath, cstack
   380 ;; Tracked objects:
   381 ;;		On entry : 300/200
   382 ;;		On exit  : 0/0
   383 ;;		Unchanged: 0/0
   384 ;; Data sizes:     COMMON   BANK0   BANK1
   385 ;;      Params:         0       0       0
   386 ;;      Locals:         3       0       0
   387 ;;      Temps:          0       0       0
   388 ;;      Totals:         3       0       0
   389 ;;Total ram usage:        3 bytes
   390 ;; Hardware stack levels used:    1
   391 ;; Hardware stack levels required when called:    1
   392 ;; This function calls:
   393 ;;		_DelayUs
   394 ;; This function is called by:
   395 ;;		_main
   396 ;; This function uses a non-reentrant model
   397 ;;
   398                           
   399                           
   400                           ;psect for function _DelayMs
   401  07BC                     _DelayMs:	
   402                           
   403                           ;incstack = 0
   404                           ; Regs used in _DelayMs: [wreg+status,2+status,0+pclath+cstack]
   405                           ;DelayMs@Time stored from wreg
   406  07BC  00F2               	movwf	DelayMs@Time
   407                           
   408                           ;test_61f02x_VREG.C: 78: unsigned char a,b;
   409                           ;test_61f02x_VREG.C: 79: for(a=0;a<Time;a++)
   410  07BD  01F3               	clrf	DelayMs@a
   411  07BE                     l1518:	
   412  07BE  0872               	movf	DelayMs@Time,w
   413  07BF  0273               	subwf	DelayMs@a,w
   414  07C0  1803               	btfsc	3,0
   415  07C1  0008               	return
   416                           
   417                           ;test_61f02x_VREG.C: 80: {
   418                           ;test_61f02x_VREG.C: 81: for(b=0;b<5;b++)
   419  07C2  01F4               	clrf	DelayMs@b
   420  07C3                     l1510:	
   421                           
   422                           ;test_61f02x_VREG.C: 82: {
   423                           ;test_61f02x_VREG.C: 83: DelayUs(197);
   424  07C3  30C5               	movlw	197
   425  07C4  27AA               	fcall	_DelayUs
   426  07C5  3005               	movlw	5
   427  07C6  0AF4               	incf	DelayMs@b,f
   428  07C7  0274               	subwf	DelayMs@b,w
   429  07C8  1C03               	skipc
   430  07C9  2FC3               	goto	l1510
   431  07CA  0AF3               	incf	DelayMs@a,f
   432  07CB  2FBE               	goto	l1518
   433  07CC                     __end_of_DelayMs:	
   434                           
   435                           	psect	text4
   436  07AA                     __ptext4:	
   437 ;; *************** function _DelayUs *****************
   438 ;; Defined at:
   439 ;;		line 62 in file "test_61f02x_VREG.C"
   440 ;; Parameters:    Size  Location     Type
   441 ;;  Time            1    wreg     unsigned char 
   442 ;; Auto vars:     Size  Location     Type
   443 ;;  Time            1    0[COMMON] unsigned char 
   444 ;;  a               1    1[COMMON] unsigned char 
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, status,2, status,0
   449 ;; Tracked objects:
   450 ;;		On entry : 0/200
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMMON   BANK0   BANK1
   454 ;;      Params:         0       0       0
   455 ;;      Locals:         2       0       0
   456 ;;      Temps:          0       0       0
   457 ;;      Totals:         2       0       0
   458 ;;Total ram usage:        2 bytes
   459 ;; Hardware stack levels used:    1
   460 ;; This function calls:
   461 ;;		Nothing
   462 ;; This function is called by:
   463 ;;		_DelayMs
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           
   468                           ;psect for function _DelayUs
   469  07AA                     _DelayUs:	
   470                           
   471                           ;incstack = 0
   472                           ; Regs used in _DelayUs: [wreg+status,2+status,0]
   473                           ;DelayUs@Time stored from wreg
   474  07AA  00F0               	movwf	DelayUs@Time
   475                           
   476                           ;test_61f02x_VREG.C: 64: unsigned char a;
   477                           ;test_61f02x_VREG.C: 65: for(a=0;a<Time;a++)
   478  07AB  01F1               	clrf	DelayUs@a
   479  07AC                     l1480:	
   480  07AC  0870               	movf	DelayUs@Time,w
   481  07AD  0271               	subwf	DelayUs@a,w
   482  07AE  1803               	btfsc	3,0
   483  07AF  0008               	return
   484                           
   485                           ;test_61f02x_VREG.C: 66: {
   486                           ;test_61f02x_VREG.C: 67: __nop();
   487  07B0  0000               	nop
   488  07B1  0AF1               	incf	DelayUs@a,f
   489  07B2  2FAC               	goto	l1480
   490  07B3                     __end_of_DelayUs:	
   491  007E                     btemp	set	126	;btemp
   492  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       7
    BANK0            80      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_DelayMs
    _DelayMs->_DelayUs

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      90
                            _DelayMs
                      _POWER_INITIAL
                       _VREG_INITIAL
 ---------------------------------------------------------------------------------
 (1) _VREG_INITIAL                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POWER_INITIAL                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DelayMs                                              3     3      0      90
                                              2 COMMON     3     3      0
                            _DelayUs
 ---------------------------------------------------------------------------------
 (2) _DelayUs                                              2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayMs
     _DelayUs
   _POWER_INITIAL
   _VREG_INITIAL

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       0       4        0.0%
BITBANK1            20      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               20      0       0       6        0.0%
ABS                  0      0       7       7        0.0%
DATA                 0      0       7       8        0.0%


GNU Macro Assembler for 8 bit devices.     
Symbol Table                                                                                   Thu Oct 14 17:22:52 2021

                     PL2 07F6                     l1510 07C3                     l1530 07E4  
                   l1518 07BE                     l1542 07EE                     l1480 07AC  
                   l1552 07F3                     _WPUA 0095                     _WPUC 0088  
                   _main 07E1                     btemp 007E                     start 0000  
        __end_of_DelayMs 07CC          __end_of_DelayUs 07B3                    ?_main 0070  
                  _VCON1 0108                    _VCON2 0109                    _PORTA 0005  
                  _PORTC 0007                    _VREGC 0076                    _TRISA 0085  
                  _TRISC 0087                    status 0003                    wtemp0 007E  
        __initialization 07FD             __end_of_main 07F6                   ??_main 0075  
                 _CMCON0 0019                   _INTCON 000B                ??_DelayMs 0072  
              ??_DelayUs 0070                   _OSCCON 008F                   _SAFlag 03A8  
                 _OPTION 0081    __end_of_POWER_INITIAL 07E1  __end_of__initialization 07FE  
         __pcstackCOMMON 0070               __end_ofPL2 07FD               __pmaintext 07E1  
                _MSCKCON 001B                  _VREG_OE 00DE                  _DelayMs 07BC  
                _DelayUs 07AA                  __ptext1 07B3                  __ptext2 07CC  
                __ptext3 07BC                  __ptext4 07AA     end_of_initialization 07FE  
          ?_VREG_INITIAL 0070            __pbitnvCOMMON 03A8      start_initialization 07FD  
         ??_VREG_INITIAL 0070   __size_of_POWER_INITIAL 0015              __pbssCOMMON 0076  
              ___latbits 0000                 ?_DelayMs 0070                 ?_DelayUs 0070  
          _POWER_INITIAL 07CC                 DelayMs@a 0073                 DelayMs@b 0074  
               DelayUs@a 0071     __end_of_VREG_INITIAL 07BC              DelayMs@Time 0072  
         ?_POWER_INITIAL 0070              DelayUs@Time 0070         __size_of_DelayMs 0010  
       __size_of_DelayUs 0009            __size_of_main 0015          ??_POWER_INITIAL 0070  
  __size_of_VREG_INITIAL 0009             _VREG_INITIAL 07B3  
