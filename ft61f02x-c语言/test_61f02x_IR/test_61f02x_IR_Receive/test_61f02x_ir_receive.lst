

GNU Macro Assembler for 8 bit devices.       
                                                                                               Thu Nov 18 09:13:16 2021

GNU C Code Generator                                                 
     1                           	processor	FT61F02X
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	pa_nodes0,global,class=CODE,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 09/04/2020 
    20                           ; 
    21                           ; SFR Addresses
    22  0000                     
    23                           	psect	idataCOMMON
    24  0000                     __pidataCOMMON:	
    25  001B                     _MSCKCON	set	27
    26  0019                     _CMCON0	set	25
    27  000B                     _INTCON	set	11
    28  0007                     _PORTC	set	7
    29  0005                     _PORTA	set	5
    30  0001                     _TMR0	set	1
    31  005F                     _GIE	set	95
    32  005D                     _T0IE	set	93
    33  005B                     _PAIE	set	91
    34  005A                     _T0IF	set	90
    35  0058                     _PAIF	set	88
    36  002C                     _PA4	set	44
    37  002A                     _PA2	set	42
    38  0095                     _WPUA	set	149
    39  008F                     _OSCCON	set	143
    40  0088                     _WPUC	set	136
    41  0087                     _TRISC	set	135
    42  0085                     _TRISA	set	133
    43  0081                     _OPTION	set	129
    44  04B4                     _IOCA4	set	1204
    45  042C                     _TRISA4	set	1068
    46                           
    47                           	psect	cinit
    48  000D                     start_initialization:	
    49                           ; #config settings
    50                           
    51  000D                     __initialization:	
    52                           
    53                           ;initializer for _bitdata
    54  000D  3001               	movlw	1
    55  000E  00FC               	movwf	__pdataCOMMON& (0+127)
    56                           
    57                           ; Clear objects allocated to COMMON
    58  000F  01F0               	clrf	__pbssCOMMON& (0+127)
    59  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
    60  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
    61  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
    62  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
    63  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
    64  0015  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
    65  0016                     end_of_initialization:	
    66                           ;End of C runtime variable initialization code
    67                           
    68  0016                     __end_of__initialization:	
    69  0016  0183               	clrf	3
    70  0017  285F               	ljmp	_main	;jump to C main() function
    71                           
    72                           	psect	bssCOMMON
    73  0070                     __pbssCOMMON:	
    74  0070                     _IRDataTimer:	
    75  0070                     	ds	4
    76  0074                     _ReceiveFinish:	
    77  0074                     	ds	1
    78  0075                     _IRbitTime:	
    79  0075                     	ds	1
    80  0076                     _IRbitNum:	
    81  0076                     	ds	1
    82                           
    83                           	psect	dataCOMMON
    84  007C                     __pdataCOMMON:	
    85  007C                     _bitdata:	
    86  007C                     	ds	1
    87                           
    88                           	psect	cstackCOMMON
    89  0077                     __pcstackCOMMON:	
    90  0077                     ?_POWER_INITIAL:	
    91  0077                     ?_TIMER0_INITIAL:	
    92                           ; 1 bytes @ 0x0
    93                           
    94  0077                     ?_PA_Level_Change_INITIAL:	
    95                           ; 1 bytes @ 0x0
    96                           
    97  0077                     ?_ISR:	
    98                           ; 1 bytes @ 0x0
    99                           
   100  0077                     ??_ISR:	
   101                           ; 1 bytes @ 0x0
   102                           
   103  0077                     ?_main:	
   104                           ; 1 bytes @ 0x0
   105                           
   106                           
   107                           ; 1 bytes @ 0x0
   108  0077                     	ds	3
   109  007A                     ??_POWER_INITIAL:	
   110  007A                     ??_TIMER0_INITIAL:	
   111                           ; 1 bytes @ 0x3
   112                           
   113  007A                     ??_PA_Level_Change_INITIAL:	
   114                           ; 1 bytes @ 0x3
   115                           
   116  007A                     ??_main:	
   117                           ; 1 bytes @ 0x3
   118                           
   119  007A                     main@rdata1:	
   120                           ; 1 bytes @ 0x3
   121                           
   122                           
   123                           ; 1 bytes @ 0x3
   124  007A                     	ds	1
   125  007B                     main@rdata2:	
   126                           
   127                           ; 1 bytes @ 0x4
   128  007B                     	ds	1
   129                           
   130                           	psect	maintext
   131  005F                     __pmaintext:	
   132 ;;
   133 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   134 ;;
   135 ;; *************** function _main *****************
   136 ;; Defined at:
   137 ;;		line 166 in file "test_61f02x_IR_Receive.C"
   138 ;; Parameters:    Size  Location     Type
   139 ;;		None
   140 ;; Auto vars:     Size  Location     Type
   141 ;;  rdata2          1    4[COMMON] unsigned char 
   142 ;;  rdata1          1    3[COMMON] unsigned char 
   143 ;; Return value:  Size  Location     Type
   144 ;;                  1    wreg      void 
   145 ;; Registers used:
   146 ;;		wreg, status,2, status,0, pclath, cstack
   147 ;; Tracked objects:
   148 ;;		On entry : B00/0
   149 ;;		On exit  : B00/0
   150 ;;		Unchanged: 800/0
   151 ;; Data sizes:     COMMON   BANK0   BANK1
   152 ;;      Params:         0       0       0
   153 ;;      Locals:         2       0       0
   154 ;;      Temps:          0       0       0
   155 ;;      Totals:         2       0       0
   156 ;;Total ram usage:        2 bytes
   157 ;; Hardware stack levels required when called:    2
   158 ;; This function calls:
   159 ;;		_PA_Level_Change_INITIAL
   160 ;;		_POWER_INITIAL
   161 ;;		_TIMER0_INITIAL
   162 ;; This function is called by:
   163 ;;		Startup code after reset
   164 ;; This function uses a non-reentrant model
   165 ;;
   166                           
   167                           
   168                           ;psect for function _main
   169  005F                     _main:	
   170                           
   171                           ;test_61f02x_IR_Receive.C: 168: unsigned char rdata1,rdata2;
   172                           ;test_61f02x_IR_Receive.C: 169: POWER_INITIAL();
   173                           
   174                           ;incstack = 0
   175                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   176  005F  2077               	fcall	_POWER_INITIAL
   177                           
   178                           ;test_61f02x_IR_Receive.C: 170: TIMER0_INITIAL();
   179  0060  2095               	fcall	_TIMER0_INITIAL
   180                           
   181                           ;test_61f02x_IR_Receive.C: 171: PA_Level_Change_INITIAL();
   182  0061  208C               	fcall	_PA_Level_Change_INITIAL
   183                           
   184                           ;test_61f02x_IR_Receive.C: 172: GIE = 1;
   185  0062  178B               	bsf	11,7	;volatile
   186  0063                     l1573:	
   187                           
   188                           ;test_61f02x_IR_Receive.C: 174: {
   189                           ;test_61f02x_IR_Receive.C: 175: if(ReceiveFinish)
   190  0063  0874               	movf	_ReceiveFinish,w
   191  0064  1903               	btfsc	3,2
   192  0065  2863               	goto	l1573
   193                           
   194                           ;test_61f02x_IR_Receive.C: 176: {
   195                           ;test_61f02x_IR_Receive.C: 177: ReceiveFinish = 0;
   196  0066  01F4               	clrf	_ReceiveFinish
   197                           
   198                           ;test_61f02x_IR_Receive.C: 178: rdata1 = 0xFF - IRDataTimer[0];
   199  0067  0970               	comf	_IRDataTimer,w
   200  0068  00FA               	movwf	main@rdata1
   201                           
   202                           ;test_61f02x_IR_Receive.C: 179: rdata2 = 0xFF - IRDataTimer[2];
   203  0069  0972               	comf	_IRDataTimer+2,w
   204  006A  00FB               	movwf	main@rdata2
   205                           
   206                           ;test_61f02x_IR_Receive.C: 180: if((rdata1 == IRDataTimer[1])&&(rdata2 == IRDataTimer[3]
      +                          ))
   207  006B  0871               	movf	_IRDataTimer+1,w
   208  006C  067A               	xorwf	main@rdata1,w
   209  006D  1D03               	skipz
   210  006E  2863               	goto	l1573
   211  006F  0873               	movf	_IRDataTimer+3,w
   212  0070  067B               	xorwf	main@rdata2,w
   213  0071  1D03               	skipz
   214  0072  2863               	goto	l1573
   215                           
   216                           ;test_61f02x_IR_Receive.C: 181: {
   217                           ;test_61f02x_IR_Receive.C: 182: PA2 = ~PA2;
   218  0073  3004               	movlw	4
   219  0074  1283               	bcf	3,5	;RP0=0, select bank0
   220  0075  0685               	xorwf	5,f
   221  0076  2863               	goto	l1573
   222  0077                     __end_of_main:	
   223                           
   224                           	psect	text1
   225  0095                     __ptext1:	
   226 ;; *************** function _TIMER0_INITIAL *****************
   227 ;; Defined at:
   228 ;;		line 71 in file "test_61f02x_IR_Receive.C"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;		None
   233 ;; Return value:  Size  Location     Type
   234 ;;                  1    wreg      void 
   235 ;; Registers used:
   236 ;;		wreg
   237 ;; Tracked objects:
   238 ;;		On entry : B00/0
   239 ;;		On exit  : B00/0
   240 ;;		Unchanged: 800/0
   241 ;; Data sizes:     COMMON   BANK0   BANK1
   242 ;;      Params:         0       0       0
   243 ;;      Locals:         0       0       0
   244 ;;      Temps:          0       0       0
   245 ;;      Totals:         0       0       0
   246 ;;Total ram usage:        0 bytes
   247 ;; Hardware stack levels used:    1
   248 ;; Hardware stack levels required when called:    1
   249 ;; This function calls:
   250 ;;		Nothing
   251 ;; This function is called by:
   252 ;;		_main
   253 ;; This function uses a non-reentrant model
   254 ;;
   255                           
   256                           
   257                           ;psect for function _TIMER0_INITIAL
   258  0095                     _TIMER0_INITIAL:	
   259                           
   260                           ;test_61f02x_IR_Receive.C: 73: OPTION = 0B00000011;
   261                           
   262                           ;incstack = 0
   263                           ; Regs used in _TIMER0_INITIAL: [wreg]
   264  0095  3003               	movlw	3
   265  0096  1683               	bsf	3,5	;RP0=1, select bank1
   266  0097  0081               	movwf	1	;volatile
   267                           
   268                           ;test_61f02x_IR_Receive.C: 80: TMR0 = 118;
   269  0098  3076               	movlw	118
   270  0099  1283               	bcf	3,5	;RP0=0, select bank0
   271  009A  0081               	movwf	1	;volatile
   272                           
   273                           ;test_61f02x_IR_Receive.C: 81: T0IF = 0;
   274  009B  110B               	bcf	11,2	;volatile
   275  009C  0008               	return
   276  009D                     __end_of_TIMER0_INITIAL:	
   277                           
   278                           	psect	text2
   279  0077                     __ptext2:	
   280 ;; *************** function _POWER_INITIAL *****************
   281 ;; Defined at:
   282 ;;		line 44 in file "test_61f02x_IR_Receive.C"
   283 ;; Parameters:    Size  Location     Type
   284 ;;		None
   285 ;; Auto vars:     Size  Location     Type
   286 ;;		None
   287 ;; Return value:  Size  Location     Type
   288 ;;                  1    wreg      void 
   289 ;; Registers used:
   290 ;;		wreg, status,2
   291 ;; Tracked objects:
   292 ;;		On entry : B00/0
   293 ;;		On exit  : B00/0
   294 ;;		Unchanged: 800/0
   295 ;; Data sizes:     COMMON   BANK0   BANK1
   296 ;;      Params:         0       0       0
   297 ;;      Locals:         0       0       0
   298 ;;      Temps:          0       0       0
   299 ;;      Totals:         0       0       0
   300 ;;Total ram usage:        0 bytes
   301 ;; Hardware stack levels used:    1
   302 ;; Hardware stack levels required when called:    1
   303 ;; This function calls:
   304 ;;		Nothing
   305 ;; This function is called by:
   306 ;;		_main
   307 ;; This function uses a non-reentrant model
   308 ;;
   309                           
   310                           
   311                           ;psect for function _POWER_INITIAL
   312  0077                     _POWER_INITIAL:	
   313                           
   314                           ;test_61f02x_IR_Receive.C: 46: OSCCON = 0B01110001;
   315                           
   316                           ;incstack = 0
   317                           ; Regs used in _POWER_INITIAL: [wreg+status,2]
   318  0077  3071               	movlw	113
   319  0078  1683               	bsf	3,5	;RP0=1, select bank1
   320  0079  008F               	movwf	15	;volatile
   321                           
   322                           ;test_61f02x_IR_Receive.C: 47: INTCON = 0;
   323  007A  018B               	clrf	11	;volatile
   324                           
   325                           ;test_61f02x_IR_Receive.C: 48: PORTA = 0B00000000;
   326  007B  1283               	bcf	3,5	;RP0=0, select bank0
   327  007C  0185               	clrf	5	;volatile
   328                           
   329                           ;test_61f02x_IR_Receive.C: 49: TRISA = 0B00010000;
   330  007D  3010               	movlw	16
   331  007E  1683               	bsf	3,5	;RP0=1, select bank1
   332  007F  0085               	movwf	5	;volatile
   333                           
   334                           ;test_61f02x_IR_Receive.C: 51: PORTC = 0B00000000;
   335  0080  1283               	bcf	3,5	;RP0=0, select bank0
   336  0081  0187               	clrf	7	;volatile
   337                           
   338                           ;test_61f02x_IR_Receive.C: 52: TRISC = 0B00000000;
   339  0082  1683               	bsf	3,5	;RP0=1, select bank1
   340  0083  0187               	clrf	7	;volatile
   341                           
   342                           ;test_61f02x_IR_Receive.C: 53: WPUA = 0B00000000;
   343  0084  0195               	clrf	21	;volatile
   344                           
   345                           ;test_61f02x_IR_Receive.C: 54: WPUC = 0B00000000;
   346  0085  0188               	clrf	8	;volatile
   347                           
   348                           ;test_61f02x_IR_Receive.C: 56: OPTION = 0B00000000;
   349  0086  0181               	clrf	1	;volatile
   350                           
   351                           ;test_61f02x_IR_Receive.C: 57: MSCKCON = 0B00000000;
   352  0087  1283               	bcf	3,5	;RP0=0, select bank0
   353  0088  019B               	clrf	27	;volatile
   354                           
   355                           ;test_61f02x_IR_Receive.C: 61: CMCON0 = 0B00000111;
   356  0089  3007               	movlw	7
   357  008A  0099               	movwf	25	;volatile
   358  008B  0008               	return
   359  008C                     __end_of_POWER_INITIAL:	
   360                           
   361                           	psect	text3
   362  008C                     __ptext3:	
   363 ;; *************** function _PA_Level_Change_INITIAL *****************
   364 ;; Defined at:
   365 ;;		line 90 in file "test_61f02x_IR_Receive.C"
   366 ;; Parameters:    Size  Location     Type
   367 ;;		None
   368 ;; Auto vars:     Size  Location     Type
   369 ;;		None
   370 ;; Return value:  Size  Location     Type
   371 ;;                  1    wreg      void 
   372 ;; Registers used:
   373 ;;		wreg
   374 ;; Tracked objects:
   375 ;;		On entry : B00/0
   376 ;;		On exit  : B00/100
   377 ;;		Unchanged: 800/0
   378 ;; Data sizes:     COMMON   BANK0   BANK1
   379 ;;      Params:         0       0       0
   380 ;;      Locals:         0       0       0
   381 ;;      Temps:          0       0       0
   382 ;;      Totals:         0       0       0
   383 ;;Total ram usage:        0 bytes
   384 ;; Hardware stack levels used:    1
   385 ;; Hardware stack levels required when called:    1
   386 ;; This function calls:
   387 ;;		Nothing
   388 ;; This function is called by:
   389 ;;		_main
   390 ;; This function uses a non-reentrant model
   391 ;;
   392                           
   393                           
   394                           ;psect for function _PA_Level_Change_INITIAL
   395  008C                     _PA_Level_Change_INITIAL:	
   396                           
   397                           ;test_61f02x_IR_Receive.C: 92: TRISA4 =1;
   398                           
   399                           ;incstack = 0
   400                           ; Regs used in _PA_Level_Change_INITIAL: [wreg]
   401  008C  1683               	bsf	3,5	;RP0=1, select bank1
   402  008D  1605               	bsf	5,4	;volatile
   403                           
   404                           ;test_61f02x_IR_Receive.C: 93: ReadAPin = PORTA;
   405  008E  1283               	bcf	3,5	;RP0=0, select bank0
   406  008F  0805               	movf	5,w	;volatile
   407                           
   408                           ;test_61f02x_IR_Receive.C: 94: PAIF =0;
   409  0090  100B               	bcf	11,0	;volatile
   410                           
   411                           ;test_61f02x_IR_Receive.C: 95: IOCA4 =1;
   412  0091  1683               	bsf	3,5	;RP0=1, select bank1
   413  0092  1616               	bsf	22,4	;volatile
   414                           
   415                           ;test_61f02x_IR_Receive.C: 96: PAIE =1;
   416  0093  158B               	bsf	11,3	;volatile
   417  0094  0008               	return
   418  0095                     __end_of_PA_Level_Change_INITIAL:	
   419                           
   420                           	psect	text4
   421  0018                     __ptext4:	
   422 ;; *************** function _ISR *****************
   423 ;; Defined at:
   424 ;;		line 105 in file "test_61f02x_IR_Receive.C"
   425 ;; Parameters:    Size  Location     Type
   426 ;;		None
   427 ;; Auto vars:     Size  Location     Type
   428 ;;		None
   429 ;; Return value:  Size  Location     Type
   430 ;;                  1    wreg      void 
   431 ;; Registers used:
   432 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   433 ;; Tracked objects:
   434 ;;		On entry : 0/0
   435 ;;		On exit  : 0/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMMON   BANK0   BANK1
   438 ;;      Params:         0       0       0
   439 ;;      Locals:         0       0       0
   440 ;;      Temps:          3       0       0
   441 ;;      Totals:         3       0       0
   442 ;;Total ram usage:        3 bytes
   443 ;; Hardware stack levels used:    1
   444 ;; This function calls:
   445 ;;		Nothing
   446 ;; This function is called by:
   447 ;;		Interrupt level 1
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451                           
   452                           ;psect for function _ISR
   453  0018                     _ISR:	
   454                           
   455                           ;test_61f02x_IR_Receive.C: 109: if(T0IE && T0IF)
   456  0018  1A8B               	btfsc	11,5	;volatile
   457  0019  1D0B               	btfss	11,2	;volatile
   458  001A  2827               	goto	i1l1531
   459                           
   460                           ;test_61f02x_IR_Receive.C: 110: {
   461                           ;test_61f02x_IR_Receive.C: 111: TMR0 = 118;
   462  001B  3076               	movlw	118
   463  001C  1283               	bcf	3,5	;RP0=0, select bank0
   464  001D  1303               	bcf	3,6	;RP1=0, select bank0
   465  001E  0081               	movwf	1	;volatile
   466                           
   467                           ;test_61f02x_IR_Receive.C: 113: T0IF = 0;
   468  001F  110B               	bcf	11,2	;volatile
   469  0020  3033               	movlw	51
   470                           
   471                           ;test_61f02x_IR_Receive.C: 114: IRbitTime++;
   472  0021  0AF5               	incf	_IRbitTime,f
   473                           
   474                           ;test_61f02x_IR_Receive.C: 115: if(IRbitTime > 50)
   475  0022  0275               	subwf	_IRbitTime,w
   476  0023  1C03               	skipc
   477  0024  2827               	goto	i1l1531
   478                           
   479                           ;test_61f02x_IR_Receive.C: 116: {
   480                           ;test_61f02x_IR_Receive.C: 117: T0IE = 0;
   481  0025  128B               	bcf	11,5	;volatile
   482                           
   483                           ;test_61f02x_IR_Receive.C: 118: IRbitTime = 0;
   484  0026  01F5               	clrf	_IRbitTime
   485  0027                     i1l1531:	
   486                           
   487                           ;test_61f02x_IR_Receive.C: 119: }
   488                           ;test_61f02x_IR_Receive.C: 120: }
   489                           ;test_61f02x_IR_Receive.C: 123: if(PAIE && PAIF)
   490  0027  198B               	btfsc	11,3	;volatile
   491  0028  1C0B               	btfss	11,0	;volatile
   492  0029  2856               	goto	i1l1097
   493                           
   494                           ;test_61f02x_IR_Receive.C: 124: {
   495                           ;test_61f02x_IR_Receive.C: 125: ReadAPin = PORTA;
   496  002A  1283               	bcf	3,5	;RP0=0, select bank0
   497  002B  1303               	bcf	3,6	;RP1=0, select bank0
   498  002C  0805               	movf	5,w	;volatile
   499                           
   500                           ;test_61f02x_IR_Receive.C: 126: PAIF = 0;
   501  002D  100B               	bcf	11,0	;volatile
   502                           
   503                           ;test_61f02x_IR_Receive.C: 127: if(PA4 == 0)
   504  002E  1A05               	btfsc	5,4	;volatile
   505  002F  2856               	goto	i1l1097
   506                           
   507                           ;test_61f02x_IR_Receive.C: 128: {
   508                           ;test_61f02x_IR_Receive.C: 129: T0IE = 1;
   509  0030  168B               	bsf	11,5	;volatile
   510                           
   511                           ;test_61f02x_IR_Receive.C: 130: if(IRbitTime > 21)
   512  0031  3016               	movlw	22
   513  0032  0275               	subwf	_IRbitTime,w
   514  0033  1C03               	skipc
   515  0034  283C               	goto	i1l1547
   516                           
   517                           ;test_61f02x_IR_Receive.C: 131: {
   518                           ;test_61f02x_IR_Receive.C: 132: IRDataTimer[0] = 0;
   519  0035  01F0               	clrf	_IRDataTimer
   520                           
   521                           ;test_61f02x_IR_Receive.C: 133: IRDataTimer[1] = 0;
   522  0036  01F1               	clrf	_IRDataTimer+1
   523                           
   524                           ;test_61f02x_IR_Receive.C: 134: IRDataTimer[2] = 0;
   525  0037  01F2               	clrf	_IRDataTimer+2
   526                           
   527                           ;test_61f02x_IR_Receive.C: 135: IRDataTimer[3] = 0;
   528  0038  01F3               	clrf	_IRDataTimer+3
   529                           
   530                           ;test_61f02x_IR_Receive.C: 136: IRbitNum = 0;
   531  0039  01F6               	clrf	_IRbitNum
   532                           
   533                           ;test_61f02x_IR_Receive.C: 137: bitdata = 0x00;
   534  003A  01FC               	clrf	_bitdata
   535                           
   536                           ;test_61f02x_IR_Receive.C: 138: }
   537  003B  2845               	goto	i1l1551
   538  003C                     i1l1547:	
   539                           
   540                           ;test_61f02x_IR_Receive.C: 139: else if(IRbitTime > 3)
   541  003C  3004               	movlw	4
   542  003D  0275               	subwf	_IRbitTime,w
   543  003E  1C03               	skipc
   544  003F  2845               	goto	i1l1551
   545                           
   546                           ;test_61f02x_IR_Receive.C: 140: {
   547                           ;test_61f02x_IR_Receive.C: 141: IRDataTimer[IRbitNum-1] |= bitdata;
   548  0040  0876               	movf	_IRbitNum,w
   549  0041  3E6F               	addlw	(low ((_IRDataTimer| 0+255)))& (0+255)
   550  0042  0084               	movwf	4
   551  0043  087C               	movf	_bitdata,w
   552  0044  0480               	iorwf	0,f
   553  0045                     i1l1551:	
   554                           
   555                           ;test_61f02x_IR_Receive.C: 142: }
   556                           ;test_61f02x_IR_Receive.C: 143: IRbitTime = 0;
   557  0045  01F5               	clrf	_IRbitTime
   558                           
   559                           ;test_61f02x_IR_Receive.C: 144: bitdata<<=1;
   560  0046  1003               	clrc
   561  0047  0DFC               	rlf	_bitdata,f
   562                           
   563                           ;test_61f02x_IR_Receive.C: 145: if(bitdata == 0)
   564  0048  087C               	movf	_bitdata,w
   565  0049  1D03               	btfss	3,2
   566  004A  284E               	goto	i1l1561
   567                           
   568                           ;test_61f02x_IR_Receive.C: 146: {
   569                           ;test_61f02x_IR_Receive.C: 147: bitdata = 0x01;
   570  004B  01FC               	clrf	_bitdata
   571  004C  0AFC               	incf	_bitdata,f
   572                           
   573                           ;test_61f02x_IR_Receive.C: 148: IRbitNum++;
   574  004D  0AF6               	incf	_IRbitNum,f
   575  004E                     i1l1561:	
   576                           
   577                           ;test_61f02x_IR_Receive.C: 149: }
   578                           ;test_61f02x_IR_Receive.C: 150: if(IRbitNum > 4)
   579  004E  3005               	movlw	5
   580  004F  0276               	subwf	_IRbitNum,w
   581  0050  1C03               	skipc
   582  0051  2856               	goto	i1l1097
   583                           
   584                           ;test_61f02x_IR_Receive.C: 151: {
   585                           ;test_61f02x_IR_Receive.C: 152: IRbitNum = 0;
   586  0052  01F6               	clrf	_IRbitNum
   587                           
   588                           ;test_61f02x_IR_Receive.C: 153: T0IE = 0;
   589  0053  128B               	bcf	11,5	;volatile
   590                           
   591                           ;test_61f02x_IR_Receive.C: 154: ReceiveFinish = 1;
   592  0054  01F4               	clrf	_ReceiveFinish
   593  0055  0AF4               	incf	_ReceiveFinish,f
   594  0056                     i1l1097:	
   595  0056  0879               	movf	??_ISR+2,w
   596  0057  008A               	movwf	10
   597  0058  0878               	movf	??_ISR+1,w
   598  0059  0084               	movwf	4
   599  005A  0E77               	swapf	??_ISR^(0+-128),w
   600  005B  0083               	movwf	3
   601  005C  0EFE               	swapf	126,f
   602  005D  0E7E               	swapf	126,w
   603  005E  0009               	retfie
   604  005F                     __end_of_ISR:	
   605  007E                     btemp	set	126	;btemp
   606  007E                     wtemp0	set	126
   607                           
   608                           	psect	intentry
   609  0004                     __pintentry:	
   610                           ;incstack = 0
   611                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0]
   612                           
   613  0004                     interrupt_function:	
   614  007E                     saved_w	set	btemp
   615  0004  00FE               	movwf	btemp
   616  0005  0E03               	swapf	3,w
   617  0006  00F7               	movwf	??_ISR
   618  0007  0804               	movf	4,w
   619  0008  00F8               	movwf	??_ISR+1
   620  0009  080A               	movf	10,w
   621  000A  00F9               	movwf	??_ISR+2
   622  000B  2818               	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      13
    BANK0            80      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      30
                                              3 COMMON     2     2      0
            _PA_Level_Change_INITIAL
                      _POWER_INITIAL
                     _TIMER0_INITIAL
 ---------------------------------------------------------------------------------
 (1) _TIMER0_INITIAL                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POWER_INITIAL                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PA_Level_Change_INITIAL                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PA_Level_Change_INITIAL
   _POWER_INITIAL
   _TIMER0_INITIAL

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               20      0       0       6        0.0%
BITBANK1            20      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       4        0.0%
BITBANK0            50      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       D       8        0.0%
ABS                  0      0       D       7        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


GNU Macro Assembler for 8 bit devices.     
Symbol Table                                                                                   Thu Nov 18 09:13:16 2021

                             _GIE 005F                               _PA2 002A                               _PA4 002C  
                             _ISR 0018                               fsr0 0004                               indf 0000  
                            ?_ISR 0077                              l1573 0063                              _T0IE 005D  
                            _T0IF 005A                              _PAIE 005B                              _PAIF 0058  
                            _TMR0 0001                              _WPUA 0095                              _WPUC 0088  
                            _main 005F                              btemp 007E                              start 000C  
                           ??_ISR 0077  __size_of_PA_Level_Change_INITIAL 0009                    _TIMER0_INITIAL 0095  
                           ?_main 0077                             _IOCA4 04B4                             _PORTA 0005  
                           _PORTC 0007                             _TRISA 0085                             _TRISC 0087  
                           pclath 000A                             status 0003                             wtemp0 007E  
                 __initialization 000D                      __end_of_main 0077            __end_of_TIMER0_INITIAL 009D  
                          ??_main 007A                            _CMCON0 0019                            i1l1097 0056  
                          i1l1531 0027                            i1l1551 0045                            i1l1561 004E  
                          i1l1547 003C                            _INTCON 000B                            _OSCCON 008F  
                          _OPTION 0081                            _TRISA4 042C                   ?_TIMER0_INITIAL 0077  
                    __pdataCOMMON 007C                            saved_w 007E             __end_of_POWER_INITIAL 008C  
         __end_of__initialization 0016                     _ReceiveFinish 0074                    __pcstackCOMMON 0077  
         _PA_Level_Change_INITIAL 008C                        __pmaintext 005F                        __pintentry 0004  
                         _MSCKCON 001B         ??_PA_Level_Change_INITIAL 007A                           _bitdata 007C  
                         __ptext1 0095                           __ptext2 0077                           __ptext3 008C  
                         __ptext4 0018                      __size_of_ISR 0047              end_of_initialization 0016  
                ??_TIMER0_INITIAL 007A                         _IRbitTime 0075                        main@rdata1 007A  
                      main@rdata2 007B                     __pidataCOMMON 0000               start_initialization 000D  
                     __end_of_ISR 005F            __size_of_POWER_INITIAL 0015                       __pbssCOMMON 0070  
                       ___latbits 0000                 interrupt_function 0004                     _POWER_INITIAL 0077  
                        _IRbitNum 0076                    ?_POWER_INITIAL 0077          ?_PA_Level_Change_INITIAL 0077  
                   __size_of_main 0018                       _IRDataTimer 0070           __size_of_TIMER0_INITIAL 0008  
 __end_of_PA_Level_Change_INITIAL 0095                   ??_POWER_INITIAL 007A                          intlevel1 0000  
