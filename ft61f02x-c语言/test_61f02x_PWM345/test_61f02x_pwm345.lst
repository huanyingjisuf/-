

GNU Macro Assembler for 8 bit devices.       
                                                                                               Sat Nov 20 16:57:34 2021

GNU C Code Generator                                                 
     1                           	processor	FT61F02X
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	pa_nodes0,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 09/04/2020 
    17                           ; 
    18                           ; SFR Addresses
    19  0000                     
    20                           	psect	text0
    21  0000                     __ptext0:	
    22  001B                     _MSCKCON	set	27
    23  0019                     _CMCON0	set	25
    24  000B                     _INTCON	set	11
    25  0007                     _PORTC	set	7
    26  0005                     _PORTA	set	5
    27  0095                     _WPUA	set	149
    28  008F                     _OSCCON	set	143
    29  0088                     _WPUC	set	136
    30  0087                     _TRISC	set	135
    31  0085                     _TRISA	set	133
    32  0081                     _OPTION	set	129
    33  043C                     _TRISC4	set	1084
    34  043B                     _TRISC3	set	1083
    35  043A                     _TRISC2	set	1082
    36  011D                     _T5CKDIV	set	285
    37  011C                     _PWM5CR1	set	284
    38  011B                     _PWM5CR0	set	283
    39  011A                     _PR5L	set	282
    40  0119                     _TMR5H	set	281
    41  0117                     _T4CKDIV	set	279
    42  0116                     _PWM4CR1	set	278
    43  0115                     _PWM4CR0	set	277
    44  0114                     _PR4L	set	276
    45  0113                     _TMR4H	set	275
    46  0111                     _T3CKDIV	set	273
    47  0110                     _PWM3CR1	set	272
    48  010F                     _PWM3CR0	set	271
    49  010E                     _PR3L	set	270
    50  010D                     _TMR3H	set	269
    51  08E2                     _TMR5ON	set	2274
    52  08B2                     _TMR4ON	set	2226
    53  0882                     _TMR3ON	set	2178
    54                           
    55                           	psect	cinit
    56  000B                     start_initialization:	
    57                           ; #config settings
    58                           
    59  000B                     __initialization:	
    60  000B                     end_of_initialization:	
    61                           ;End of C runtime variable initialization code
    62                           
    63  000B                     __end_of__initialization:	
    64  000B  0183               	clrf	3
    65  000C  2844               	ljmp	_main	;jump to C main() function
    66                           
    67                           	psect	cstackCOMMON
    68  0070                     __pcstackCOMMON:	
    69  0070                     ?_ISR:	
    70  0070                     ??_ISR:	
    71                           ; 1 bytes @ 0x0
    72                           
    73  0070                     ?_POWER_INITIAL:	
    74                           ; 1 bytes @ 0x0
    75                           
    76  0070                     ?_PWM_INITIAL:	
    77                           ; 1 bytes @ 0x0
    78                           
    79  0070                     ?_main:	
    80                           ; 1 bytes @ 0x0
    81                           
    82                           
    83                           ; 1 bytes @ 0x0
    84  0070                     	ds	2
    85  0072                     ??_POWER_INITIAL:	
    86  0072                     ??_PWM_INITIAL:	
    87                           ; 1 bytes @ 0x2
    88                           
    89  0072                     ??_main:	
    90                           ; 1 bytes @ 0x2
    91                           
    92                           
    93                           	psect	maintext
    94  0044                     __pmaintext:	
    95                           ; 1 bytes @ 0x2
    96 ;;
    97 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    98 ;;
    99 ;; *************** function _main *****************
   100 ;; Defined at:
   101 ;;		line 131 in file "TEST_61F02x_PWM345.C"
   102 ;; Parameters:    Size  Location     Type
   103 ;;		None
   104 ;; Auto vars:     Size  Location     Type
   105 ;;		None
   106 ;; Return value:  Size  Location     Type
   107 ;;                  1    wreg      void 
   108 ;; Registers used:
   109 ;;		wreg, status,2, status,0, pclath, cstack
   110 ;; Tracked objects:
   111 ;;		On entry : B00/0
   112 ;;		On exit  : 0/0
   113 ;;		Unchanged: 0/0
   114 ;; Data sizes:     COMMON   BANK0   BANK1
   115 ;;      Params:         0       0       0
   116 ;;      Locals:         0       0       0
   117 ;;      Temps:          0       0       0
   118 ;;      Totals:         0       0       0
   119 ;;Total ram usage:        0 bytes
   120 ;; Hardware stack levels required when called:    2
   121 ;; This function calls:
   122 ;;		_POWER_INITIAL
   123 ;;		_PWM_INITIAL
   124 ;; This function is called by:
   125 ;;		Startup code after reset
   126 ;; This function uses a non-reentrant model
   127 ;;
   128                           
   129                           
   130                           ;psect for function _main
   131  0044                     _main:	
   132                           
   133                           ;TEST_61F02x_PWM345.C: 133: POWER_INITIAL();
   134                           
   135                           ;incstack = 0
   136                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   137  0044  202F               	fcall	_POWER_INITIAL
   138                           
   139                           ;TEST_61F02x_PWM345.C: 134: PWM_INITIAL();
   140  0045  200D               	fcall	_PWM_INITIAL
   141                           
   142                           ;TEST_61F02x_PWM345.C: 136: TMR3ON=1;
   143  0046  1510               	bsf	16,2	;volatile
   144                           
   145                           ;TEST_61F02x_PWM345.C: 137: TMR4ON=1;
   146  0047  1516               	bsf	22,2	;volatile
   147                           
   148                           ;TEST_61F02x_PWM345.C: 138: TMR5ON=1;
   149  0048  151C               	bsf	28,2	;volatile
   150                           
   151                           ;TEST_61F02x_PWM345.C: 139: TRISC4 = 0;
   152  0049  1683               	bsf	3,5	;RP0=1, select bank1
   153  004A  1303               	bcf	3,6	;RP1=0, select bank1
   154  004B  1207               	bcf	7,4	;volatile
   155                           
   156                           ;TEST_61F02x_PWM345.C: 140: TRISC3 = 0;
   157  004C  1187               	bcf	7,3	;volatile
   158                           
   159                           ;TEST_61F02x_PWM345.C: 141: TRISC2 = 0;
   160  004D  1107               	bcf	7,2	;volatile
   161  004E                     l1517:	
   162                           
   163                           ;TEST_61F02x_PWM345.C: 143: {
   164                           ;TEST_61F02x_PWM345.C: 144: __nop();
   165  004E  0000               	nop
   166  004F  284E               	goto	l1517
   167  0050                     __end_of_main:	
   168                           
   169                           	psect	text1
   170  000D                     __ptext1:	
   171 ;; *************** function _PWM_INITIAL *****************
   172 ;; Defined at:
   173 ;;		line 71 in file "TEST_61F02x_PWM345.C"
   174 ;; Parameters:    Size  Location     Type
   175 ;;		None
   176 ;; Auto vars:     Size  Location     Type
   177 ;;		None
   178 ;; Return value:  Size  Location     Type
   179 ;;                  1    wreg      void 
   180 ;; Registers used:
   181 ;;		wreg, status,2
   182 ;; Tracked objects:
   183 ;;		On entry : B00/0
   184 ;;		On exit  : B00/200
   185 ;;		Unchanged: 800/0
   186 ;; Data sizes:     COMMON   BANK0   BANK1
   187 ;;      Params:         0       0       0
   188 ;;      Locals:         0       0       0
   189 ;;      Temps:          0       0       0
   190 ;;      Totals:         0       0       0
   191 ;;Total ram usage:        0 bytes
   192 ;; Hardware stack levels used:    1
   193 ;; Hardware stack levels required when called:    1
   194 ;; This function calls:
   195 ;;		Nothing
   196 ;; This function is called by:
   197 ;;		_main
   198 ;; This function uses a non-reentrant model
   199 ;;
   200                           
   201                           
   202                           ;psect for function _PWM_INITIAL
   203  000D                     _PWM_INITIAL:	
   204                           
   205                           ;TEST_61F02x_PWM345.C: 73: TRISC4 = 1;
   206                           
   207                           ;incstack = 0
   208                           ; Regs used in _PWM_INITIAL: [wreg+status,2]
   209  000D  1683               	bsf	3,5	;RP0=1, select bank1
   210  000E  1607               	bsf	7,4	;volatile
   211                           
   212                           ;TEST_61F02x_PWM345.C: 74: TRISC3 = 1;
   213  000F  1587               	bsf	7,3	;volatile
   214                           
   215                           ;TEST_61F02x_PWM345.C: 75: TRISC2 = 1;
   216  0010  1507               	bsf	7,2	;volatile
   217                           
   218                           ;TEST_61F02x_PWM345.C: 77: PWM3CR0 = 0B00110010;
   219  0011  3032               	movlw	50
   220  0012  1283               	bcf	3,5	;RP0=0, select bank2
   221  0013  1703               	bsf	3,6	;RP1=1, select bank2
   222  0014  008F               	movwf	15	;volatile
   223                           
   224                           ;TEST_61F02x_PWM345.C: 82: PWM3CR1 = 0B10000000;
   225  0015  3080               	movlw	128
   226  0016  0090               	movwf	16	;volatile
   227                           
   228                           ;TEST_61F02x_PWM345.C: 89: TMR3H=0;
   229  0017  018D               	clrf	13	;volatile
   230                           
   231                           ;TEST_61F02x_PWM345.C: 90: T3CKDIV = 30;
   232  0018  301E               	movlw	30
   233  0019  0091               	movwf	17	;volatile
   234                           
   235                           ;TEST_61F02x_PWM345.C: 91: PR3L = 128;
   236  001A  3080               	movlw	128
   237  001B  008E               	movwf	14	;volatile
   238                           
   239                           ;TEST_61F02x_PWM345.C: 93: PWM4CR0 = 0B00110010;
   240  001C  3032               	movlw	50
   241  001D  0095               	movwf	21	;volatile
   242                           
   243                           ;TEST_61F02x_PWM345.C: 98: PWM4CR1 = 0B10000000;
   244  001E  3080               	movlw	128
   245  001F  0096               	movwf	22	;volatile
   246                           
   247                           ;TEST_61F02x_PWM345.C: 105: TMR4H=0;
   248  0020  0193               	clrf	19	;volatile
   249                           
   250                           ;TEST_61F02x_PWM345.C: 106: T4CKDIV = 62;
   251  0021  303E               	movlw	62
   252  0022  0097               	movwf	23	;volatile
   253                           
   254                           ;TEST_61F02x_PWM345.C: 107: PR4L = 128;
   255  0023  3080               	movlw	128
   256  0024  0094               	movwf	20	;volatile
   257                           
   258                           ;TEST_61F02x_PWM345.C: 109: PWM5CR0 = 0B00110010;
   259  0025  3032               	movlw	50
   260  0026  009B               	movwf	27	;volatile
   261                           
   262                           ;TEST_61F02x_PWM345.C: 114: PWM5CR1 = 0B10000000;
   263  0027  3080               	movlw	128
   264  0028  009C               	movwf	28	;volatile
   265                           
   266                           ;TEST_61F02x_PWM345.C: 121: TMR5H=0;
   267  0029  0199               	clrf	25	;volatile
   268                           
   269                           ;TEST_61F02x_PWM345.C: 122: T5CKDIV = 124;
   270  002A  307C               	movlw	124
   271  002B  009D               	movwf	29	;volatile
   272                           
   273                           ;TEST_61F02x_PWM345.C: 123: PR5L = 128;
   274  002C  3080               	movlw	128
   275  002D  009A               	movwf	26	;volatile
   276  002E  0008               	return
   277  002F                     __end_of_PWM_INITIAL:	
   278                           
   279                           	psect	text2
   280  002F                     __ptext2:	
   281 ;; *************** function _POWER_INITIAL *****************
   282 ;; Defined at:
   283 ;;		line 43 in file "TEST_61F02x_PWM345.C"
   284 ;; Parameters:    Size  Location     Type
   285 ;;		None
   286 ;; Auto vars:     Size  Location     Type
   287 ;;		None
   288 ;; Return value:  Size  Location     Type
   289 ;;                  1    wreg      void 
   290 ;; Registers used:
   291 ;;		wreg, status,2
   292 ;; Tracked objects:
   293 ;;		On entry : B00/0
   294 ;;		On exit  : B00/0
   295 ;;		Unchanged: 800/0
   296 ;; Data sizes:     COMMON   BANK0   BANK1
   297 ;;      Params:         0       0       0
   298 ;;      Locals:         0       0       0
   299 ;;      Temps:          0       0       0
   300 ;;      Totals:         0       0       0
   301 ;;Total ram usage:        0 bytes
   302 ;; Hardware stack levels used:    1
   303 ;; Hardware stack levels required when called:    1
   304 ;; This function calls:
   305 ;;		Nothing
   306 ;; This function is called by:
   307 ;;		_main
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311                           
   312                           ;psect for function _POWER_INITIAL
   313  002F                     _POWER_INITIAL:	
   314                           
   315                           ;TEST_61F02x_PWM345.C: 45: OSCCON = 0B01110001;
   316                           
   317                           ;incstack = 0
   318                           ; Regs used in _POWER_INITIAL: [wreg+status,2]
   319  002F  3071               	movlw	113
   320  0030  1683               	bsf	3,5	;RP0=1, select bank1
   321  0031  008F               	movwf	15	;volatile
   322                           
   323                           ;TEST_61F02x_PWM345.C: 46: INTCON = 0;
   324  0032  018B               	clrf	11	;volatile
   325                           
   326                           ;TEST_61F02x_PWM345.C: 47: PORTA = 0B00000000;
   327  0033  1283               	bcf	3,5	;RP0=0, select bank0
   328  0034  0185               	clrf	5	;volatile
   329                           
   330                           ;TEST_61F02x_PWM345.C: 48: TRISA = 0B00000000;
   331  0035  1683               	bsf	3,5	;RP0=1, select bank1
   332  0036  0185               	clrf	5	;volatile
   333                           
   334                           ;TEST_61F02x_PWM345.C: 49: PORTC = 0B00000000;
   335  0037  1283               	bcf	3,5	;RP0=0, select bank0
   336  0038  0187               	clrf	7	;volatile
   337                           
   338                           ;TEST_61F02x_PWM345.C: 50: TRISC = 0B00000000;
   339  0039  1683               	bsf	3,5	;RP0=1, select bank1
   340  003A  0187               	clrf	7	;volatile
   341                           
   342                           ;TEST_61F02x_PWM345.C: 52: WPUA = 0B00000000;
   343  003B  0195               	clrf	21	;volatile
   344                           
   345                           ;TEST_61F02x_PWM345.C: 53: WPUC = 0B00000000;
   346  003C  0188               	clrf	8	;volatile
   347                           
   348                           ;TEST_61F02x_PWM345.C: 54: OPTION = 0B00001000;
   349  003D  3008               	movlw	8
   350  003E  0081               	movwf	1	;volatile
   351                           
   352                           ;TEST_61F02x_PWM345.C: 55: MSCKCON = 0B00000000;
   353  003F  1283               	bcf	3,5	;RP0=0, select bank0
   354  0040  019B               	clrf	27	;volatile
   355                           
   356                           ;TEST_61F02x_PWM345.C: 59: CMCON0 = 0B00000111;
   357  0041  3007               	movlw	7
   358  0042  0099               	movwf	25	;volatile
   359  0043  0008               	return
   360  0044                     __end_of_POWER_INITIAL:	
   361                           
   362                           	psect	text3
   363  0050                     __ptext3:	
   364 ;; *************** function _ISR *****************
   365 ;; Defined at:
   366 ;;		line 33 in file "TEST_61F02x_PWM345.C"
   367 ;; Parameters:    Size  Location     Type
   368 ;;		None
   369 ;; Auto vars:     Size  Location     Type
   370 ;;		None
   371 ;; Return value:  Size  Location     Type
   372 ;;                  1    wreg      void 
   373 ;; Registers used:
   374 ;;		None
   375 ;; Tracked objects:
   376 ;;		On entry : 0/0
   377 ;;		On exit  : 0/0
   378 ;;		Unchanged: 0/0
   379 ;; Data sizes:     COMMON   BANK0   BANK1
   380 ;;      Params:         0       0       0
   381 ;;      Locals:         0       0       0
   382 ;;      Temps:          2       0       0
   383 ;;      Totals:         2       0       0
   384 ;;Total ram usage:        2 bytes
   385 ;; Hardware stack levels used:    1
   386 ;; This function calls:
   387 ;;		Nothing
   388 ;; This function is called by:
   389 ;;		Interrupt level 1
   390 ;; This function uses a non-reentrant model
   391 ;;
   392                           
   393                           
   394                           ;psect for function _ISR
   395  0050                     _ISR:	
   396                           
   397                           ;TEST_61F02x_PWM345.C: 35: __nop();
   398  0050  0000               	nop
   399  0051  0871               	movf	??_ISR+1,w
   400  0052  008A               	movwf	10
   401  0053  0E70               	swapf	??_ISR^(0+-128),w
   402  0054  0083               	movwf	3
   403  0055  0EFE               	swapf	126,f
   404  0056  0E7E               	swapf	126,w
   405  0057  0009               	retfie
   406  0058                     __end_of_ISR:	
   407  007E                     btemp	set	126	;btemp
   408  007E                     wtemp0	set	126
   409                           
   410                           	psect	intentry
   411  0004                     __pintentry:	
   412                           ;incstack = 0
   413                           ; Regs used in _ISR: []
   414                           
   415  0004                     interrupt_function:	
   416  007E                     saved_w	set	btemp
   417  0004  00FE               	movwf	btemp
   418  0005  0E03               	swapf	3,w
   419  0006  00F0               	movwf	??_ISR
   420  0007  080A               	movf	10,w
   421  0008  00F1               	movwf	??_ISR+1
   422  0009  2850               	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                      _POWER_INITIAL
                        _PWM_INITIAL
 ---------------------------------------------------------------------------------
 (1) _PWM_INITIAL                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POWER_INITIAL                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _POWER_INITIAL
   _PWM_INITIAL

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       0       4        0.0%
BITBANK1            20      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               20      0       0       6        0.0%
ABS                  0      0       0       7        0.0%
DATA                 0      0       0       8        0.0%


GNU Macro Assembler for 8 bit devices.     
Symbol Table                                                                                   Sat Nov 20 16:57:34 2021

                    _ISR 0050                     ?_ISR 0070                     l1517 004E  
                   _PR3L 010E                     _PR4L 0114                     _PR5L 011A  
                   _WPUA 0095                     _WPUC 0088                     _main 0044  
                   btemp 007E                     start 000A                    ??_ISR 0070  
                  ?_main 0070                    _TMR3H 010D                    _TMR4H 0113  
                  _TMR5H 0119                    _PORTA 0005                    _PORTC 0007  
                  _TRISA 0085                    _TRISC 0087                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000B  
           __end_of_main 0050                   ??_main 0072                   _CMCON0 0019  
                 _INTCON 000B                   _OSCCON 008F                   _OPTION 0081  
                 _TMR3ON 0882                   _TMR4ON 08B2                   _TMR5ON 08E2  
                 _TRISC2 043A                   _TRISC3 043B                   _TRISC4 043C  
                 saved_w 007E    __end_of_POWER_INITIAL 0044  __end_of__initialization 000B  
           ?_PWM_INITIAL 0070           __pcstackCOMMON 0070               __pmaintext 0044  
             __pintentry 0004                  _T3CKDIV 0111                  _T4CKDIV 0117  
                _T5CKDIV 011D                  _MSCKCON 001B                  _PWM3CR0 010F  
                _PWM3CR1 0110                  _PWM4CR0 0115                  _PWM4CR1 0116  
                _PWM5CR0 011B                  _PWM5CR1 011C                  __ptext0 0000  
                __ptext1 000D                  __ptext2 002F                  __ptext3 0050  
           __size_of_ISR 0008     end_of_initialization 000B     __size_of_PWM_INITIAL 0022  
    start_initialization 000B              __end_of_ISR 0058   __size_of_POWER_INITIAL 0015  
              ___latbits 0000        interrupt_function 0004            _POWER_INITIAL 002F  
         ?_POWER_INITIAL 0070            ??_PWM_INITIAL 0072            __size_of_main 000C  
    __end_of_PWM_INITIAL 002F          ??_POWER_INITIAL 0072                 intlevel1 0000  
            _PWM_INITIAL 000D  
