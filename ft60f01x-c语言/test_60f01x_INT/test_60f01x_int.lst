

GNU Macro Assembler for 8 bit devices.       
                                                                                               Sat Nov 20 16:02:41 2021

GNU C Code Generator                                                 
     1                           	processor	FT60F01X
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	pa_nodes0,global,class=CODE,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 09/04/2020 
    19                           ; 
    20                           ; SFR Addresses
    21  0000                     
    22                           	psect	nvCOMMON
    23  0077                     __pnvCOMMON:	
    24  0077                     _FCount:	
    25  0077                     	ds	1
    26  001B                     _MSCKCON	set	27
    27  000B                     _INTCON	set	11
    28  0005                     _PORTA	set	5
    29  005F                     _GIE	set	95
    30  005C                     _INTE	set	92
    31  0059                     _INTF	set	89
    32  002C                     _PA4	set	44
    33  0095                     _WPUA	set	149
    34  008F                     _OSCCON	set	143
    35  0085                     _TRISA	set	133
    36  0081                     _OPTION	set	129
    37  042A                     _TRISA2	set	1066
    38  040E                     _INTEDG	set	1038
    39                           
    40                           	psect	cinit
    41  000B                     start_initialization:	
    42                           ; #config settings
    43                           
    44  000B                     __initialization:	
    45  000B                     end_of_initialization:	
    46                           ;End of C runtime variable initialization code
    47                           
    48  000B                     __end_of__initialization:	
    49  000B  0183               	clrf	3
    50  000C  280D               	ljmp	_main	;jump to C main() function
    51                           
    52                           	psect	cstackCOMMON
    53  0070                     __pcstackCOMMON:	
    54  0070                     ?_ISR:	
    55  0070                     ??_ISR:	
    56                           ; 1 bytes @ 0x0
    57                           
    58  0070                     ?_POWER_INITIAL:	
    59                           ; 1 bytes @ 0x0
    60                           
    61  0070                     ?_DelayUs:	
    62                           ; 1 bytes @ 0x0
    63                           
    64  0070                     ?_DelayMs:	
    65                           ; 1 bytes @ 0x0
    66                           
    67  0070                     ?_INT_INITIAL:	
    68                           ; 1 bytes @ 0x0
    69                           
    70  0070                     ?_main:	
    71                           ; 1 bytes @ 0x0
    72                           
    73                           
    74                           ; 1 bytes @ 0x0
    75  0070                     	ds	2
    76  0072                     ??_POWER_INITIAL:	
    77  0072                     ??_DelayUs:	
    78                           ; 1 bytes @ 0x2
    79                           
    80  0072                     ??_INT_INITIAL:	
    81                           ; 1 bytes @ 0x2
    82                           
    83  0072                     DelayUs@Time:	
    84                           ; 1 bytes @ 0x2
    85                           
    86                           
    87                           ; 1 bytes @ 0x2
    88  0072                     	ds	1
    89  0073                     DelayUs@a:	
    90                           
    91                           ; 1 bytes @ 0x3
    92  0073                     	ds	1
    93  0074                     ??_DelayMs:	
    94  0074                     DelayMs@Time:	
    95                           ; 1 bytes @ 0x4
    96                           
    97                           
    98                           ; 1 bytes @ 0x4
    99  0074                     	ds	1
   100  0075                     DelayMs@a:	
   101                           
   102                           ; 1 bytes @ 0x5
   103  0075                     	ds	1
   104  0076                     DelayMs@b:	
   105                           
   106                           ; 1 bytes @ 0x6
   107  0076                     	ds	1
   108  0077                     ??_main:	
   109                           
   110                           	psect	maintext
   111  000D                     __pmaintext:	
   112                           ; 1 bytes @ 0x7
   113 ;;
   114 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   115 ;;
   116 ;; *************** function _main *****************
   117 ;; Defined at:
   118 ;;		line 110 in file "test_60f01x_INT.C"
   119 ;; Parameters:    Size  Location     Type
   120 ;;		None
   121 ;; Auto vars:     Size  Location     Type
   122 ;;		None
   123 ;; Return value:  Size  Location     Type
   124 ;;                  1    wreg      void 
   125 ;; Registers used:
   126 ;;		wreg, status,2, status,0, pclath, cstack
   127 ;; Tracked objects:
   128 ;;		On entry : B00/0
   129 ;;		On exit  : 0/0
   130 ;;		Unchanged: 0/0
   131 ;; Data sizes:     COMMON   BANK0
   132 ;;      Params:         0       0
   133 ;;      Locals:         0       0
   134 ;;      Temps:          0       0
   135 ;;      Totals:         0       0
   136 ;;Total ram usage:        0 bytes
   137 ;; Hardware stack levels required when called:    3
   138 ;; This function calls:
   139 ;;		_DelayMs
   140 ;;		_INT_INITIAL
   141 ;;		_POWER_INITIAL
   142 ;; This function is called by:
   143 ;;		Startup code after reset
   144 ;; This function uses a non-reentrant model
   145 ;;
   146                           
   147                           
   148                           ;psect for function _main
   149  000D                     _main:	
   150                           
   151                           ;test_60f01x_INT.C: 112: POWER_INITIAL();
   152                           
   153                           ;incstack = 0
   154                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   155  000D  2030               	fcall	_POWER_INITIAL
   156  000E                     l888:	
   157                           
   158                           ;test_60f01x_INT.C: 114: {
   159                           ;test_60f01x_INT.C: 115: for(FCount=0;FCount<100;FCount++)
   160  000E  01F7               	clrf	_FCount
   161  000F                     l464:	
   162                           
   163                           ;test_60f01x_INT.C: 116: {
   164                           ;test_60f01x_INT.C: 117: PA4 = 1;
   165  000F  1283               	bcf	3,5	;RP0=0, select bank0
   166  0010  1605               	bsf	5,4	;volatile
   167                           
   168                           ;test_60f01x_INT.C: 118: DelayMs(10);
   169  0011  300A               	movlw	10
   170  0012  2020               	fcall	_DelayMs
   171                           
   172                           ;test_60f01x_INT.C: 119: PA4 = 0;
   173  0013  1283               	bcf	3,5	;RP0=0, select bank0
   174  0014  1205               	bcf	5,4	;volatile
   175                           
   176                           ;test_60f01x_INT.C: 120: DelayMs(10);
   177  0015  300A               	movlw	10
   178  0016  2020               	fcall	_DelayMs
   179  0017  3064               	movlw	100
   180  0018  0AF7               	incf	_FCount,f
   181  0019  0277               	subwf	_FCount,w
   182  001A  1C03               	skipc
   183  001B  280F               	goto	l464
   184                           
   185                           ;test_60f01x_INT.C: 121: }
   186                           ;test_60f01x_INT.C: 122: INT_INITIAL();
   187  001C  2054               	fcall	_INT_INITIAL
   188                           
   189                           ;test_60f01x_INT.C: 123: GIE = 1;
   190  001D  178B               	bsf	11,7	;volatile
   191  001E  0063               	sleep	;# 
   192  001F  280E               	goto	l888
   193  0020                     __end_of_main:	
   194                           
   195                           	psect	text1
   196  0030                     __ptext1:	
   197 ;; *************** function _POWER_INITIAL *****************
   198 ;; Defined at:
   199 ;;		line 45 in file "test_60f01x_INT.C"
   200 ;; Parameters:    Size  Location     Type
   201 ;;		None
   202 ;; Auto vars:     Size  Location     Type
   203 ;;		None
   204 ;; Return value:  Size  Location     Type
   205 ;;                  1    wreg      void 
   206 ;; Registers used:
   207 ;;		wreg, status,2
   208 ;; Tracked objects:
   209 ;;		On entry : B00/0
   210 ;;		On exit  : B00/0
   211 ;;		Unchanged: A00/0
   212 ;; Data sizes:     COMMON   BANK0
   213 ;;      Params:         0       0
   214 ;;      Locals:         0       0
   215 ;;      Temps:          0       0
   216 ;;      Totals:         0       0
   217 ;;Total ram usage:        0 bytes
   218 ;; Hardware stack levels used:    1
   219 ;; Hardware stack levels required when called:    1
   220 ;; This function calls:
   221 ;;		Nothing
   222 ;; This function is called by:
   223 ;;		_main
   224 ;; This function uses a non-reentrant model
   225 ;;
   226                           
   227                           
   228                           ;psect for function _POWER_INITIAL
   229  0030                     _POWER_INITIAL:	
   230                           
   231                           ;test_60f01x_INT.C: 47: OSCCON = 0B01110000;
   232                           
   233                           ;incstack = 0
   234                           ; Regs used in _POWER_INITIAL: [wreg+status,2]
   235  0030  3070               	movlw	112
   236  0031  1683               	bsf	3,5	;RP0=1, select bank1
   237  0032  008F               	movwf	15	;volatile
   238                           
   239                           ;test_60f01x_INT.C: 48: INTCON = 0;
   240  0033  018B               	clrf	11	;volatile
   241                           
   242                           ;test_60f01x_INT.C: 49: OPTION = 0B00001000;
   243  0034  3008               	movlw	8
   244  0035  0081               	movwf	1	;volatile
   245                           
   246                           ;test_60f01x_INT.C: 51: PORTA = 0B00000000;
   247  0036  1283               	bcf	3,5	;RP0=0, select bank0
   248  0037  0185               	clrf	5	;volatile
   249                           
   250                           ;test_60f01x_INT.C: 52: TRISA = 0B00000100;
   251  0038  3004               	movlw	4
   252  0039  1683               	bsf	3,5	;RP0=1, select bank1
   253  003A  0085               	movwf	5	;volatile
   254                           
   255                           ;test_60f01x_INT.C: 53: WPUA = 0B00000100;
   256  003B  0095               	movwf	21	;volatile
   257                           
   258                           ;test_60f01x_INT.C: 55: MSCKCON = 0B00000000;
   259  003C  1283               	bcf	3,5	;RP0=0, select bank0
   260  003D  019B               	clrf	27	;volatile
   261  003E  0008               	return
   262  003F                     __end_of_POWER_INITIAL:	
   263                           
   264                           	psect	text2
   265  0054                     __ptext2:	
   266 ;; *************** function _INT_INITIAL *****************
   267 ;; Defined at:
   268 ;;		line 97 in file "test_60f01x_INT.C"
   269 ;; Parameters:    Size  Location     Type
   270 ;;		None
   271 ;; Auto vars:     Size  Location     Type
   272 ;;		None
   273 ;; Return value:  Size  Location     Type
   274 ;;                  1    wreg      void 
   275 ;; Registers used:
   276 ;;		None
   277 ;; Tracked objects:
   278 ;;		On entry : 0/0
   279 ;;		On exit  : 100/100
   280 ;;		Unchanged: 0/0
   281 ;; Data sizes:     COMMON   BANK0
   282 ;;      Params:         0       0
   283 ;;      Locals:         0       0
   284 ;;      Temps:          0       0
   285 ;;      Totals:         0       0
   286 ;;Total ram usage:        0 bytes
   287 ;; Hardware stack levels used:    1
   288 ;; Hardware stack levels required when called:    1
   289 ;; This function calls:
   290 ;;		Nothing
   291 ;; This function is called by:
   292 ;;		_main
   293 ;; This function uses a non-reentrant model
   294 ;;
   295                           
   296                           
   297                           ;psect for function _INT_INITIAL
   298  0054                     _INT_INITIAL:	
   299                           
   300                           ;test_60f01x_INT.C: 99: TRISA2 = 1;
   301                           
   302                           ;incstack = 0
   303                           ; Regs used in _INT_INITIAL: []
   304  0054  1683               	bsf	3,5	;RP0=1, select bank1
   305  0055  1505               	bsf	5,2	;volatile
   306                           
   307                           ;test_60f01x_INT.C: 100: INTEDG = 1;
   308  0056  1701               	bsf	1,6	;volatile
   309                           
   310                           ;test_60f01x_INT.C: 101: INTF =0;
   311  0057  108B               	bcf	11,1	;volatile
   312                           
   313                           ;test_60f01x_INT.C: 102: INTE =1;
   314  0058  160B               	bsf	11,4	;volatile
   315  0059  0008               	return
   316  005A                     __end_of_INT_INITIAL:	
   317                           
   318                           	psect	text3
   319  0020                     __ptext3:	
   320 ;; *************** function _DelayMs *****************
   321 ;; Defined at:
   322 ;;		line 80 in file "test_60f01x_INT.C"
   323 ;; Parameters:    Size  Location     Type
   324 ;;  Time            1    wreg     unsigned char 
   325 ;; Auto vars:     Size  Location     Type
   326 ;;  Time            1    4[COMMON] unsigned char 
   327 ;;  b               1    6[COMMON] unsigned char 
   328 ;;  a               1    5[COMMON] unsigned char 
   329 ;; Return value:  Size  Location     Type
   330 ;;                  1    wreg      void 
   331 ;; Registers used:
   332 ;;		wreg, status,2, status,0, pclath, cstack
   333 ;; Tracked objects:
   334 ;;		On entry : 100/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMMON   BANK0
   338 ;;      Params:         0       0
   339 ;;      Locals:         3       0
   340 ;;      Temps:          0       0
   341 ;;      Totals:         3       0
   342 ;;Total ram usage:        3 bytes
   343 ;; Hardware stack levels used:    1
   344 ;; Hardware stack levels required when called:    2
   345 ;; This function calls:
   346 ;;		_DelayUs
   347 ;; This function is called by:
   348 ;;		_main
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352                           
   353                           ;psect for function _DelayMs
   354  0020                     _DelayMs:	
   355                           
   356                           ;incstack = 0
   357                           ; Regs used in _DelayMs: [wreg+status,2+status,0+pclath+cstack]
   358                           ;DelayMs@Time stored from wreg
   359  0020  00F4               	movwf	DelayMs@Time
   360                           
   361                           ;test_60f01x_INT.C: 82: unsigned char a,b;
   362                           ;test_60f01x_INT.C: 83: for(a=0;a<Time;a++)
   363  0021  01F5               	clrf	DelayMs@a
   364  0022                     l876:	
   365  0022  0874               	movf	DelayMs@Time,w
   366  0023  0275               	subwf	DelayMs@a,w
   367  0024  1803               	btfsc	3,0
   368  0025  0008               	return
   369                           
   370                           ;test_60f01x_INT.C: 84: {
   371                           ;test_60f01x_INT.C: 85: for(b=0;b<5;b++)
   372  0026  01F6               	clrf	DelayMs@b
   373  0027                     l868:	
   374                           
   375                           ;test_60f01x_INT.C: 86: {
   376                           ;test_60f01x_INT.C: 87: DelayUs(98);
   377  0027  3062               	movlw	98
   378  0028  204B               	fcall	_DelayUs
   379  0029  3005               	movlw	5
   380  002A  0AF6               	incf	DelayMs@b,f
   381  002B  0276               	subwf	DelayMs@b,w
   382  002C  1C03               	skipc
   383  002D  2827               	goto	l868
   384  002E  0AF5               	incf	DelayMs@a,f
   385  002F  2822               	goto	l876
   386  0030                     __end_of_DelayMs:	
   387                           
   388                           	psect	text4
   389  004B                     __ptext4:	
   390 ;; *************** function _DelayUs *****************
   391 ;; Defined at:
   392 ;;		line 66 in file "test_60f01x_INT.C"
   393 ;; Parameters:    Size  Location     Type
   394 ;;  Time            1    wreg     unsigned char 
   395 ;; Auto vars:     Size  Location     Type
   396 ;;  Time            1    2[COMMON] unsigned char 
   397 ;;  a               1    3[COMMON] unsigned char 
   398 ;; Return value:  Size  Location     Type
   399 ;;                  1    wreg      void 
   400 ;; Registers used:
   401 ;;		wreg, status,2, status,0
   402 ;; Tracked objects:
   403 ;;		On entry : 0/0
   404 ;;		On exit  : 0/0
   405 ;;		Unchanged: 0/0
   406 ;; Data sizes:     COMMON   BANK0
   407 ;;      Params:         0       0
   408 ;;      Locals:         2       0
   409 ;;      Temps:          0       0
   410 ;;      Totals:         2       0
   411 ;;Total ram usage:        2 bytes
   412 ;; Hardware stack levels used:    1
   413 ;; Hardware stack levels required when called:    1
   414 ;; This function calls:
   415 ;;		Nothing
   416 ;; This function is called by:
   417 ;;		_DelayMs
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           
   422                           ;psect for function _DelayUs
   423  004B                     _DelayUs:	
   424                           
   425                           ;incstack = 0
   426                           ; Regs used in _DelayUs: [wreg+status,2+status,0]
   427                           ;DelayUs@Time stored from wreg
   428  004B  00F2               	movwf	DelayUs@Time
   429                           
   430                           ;test_60f01x_INT.C: 68: unsigned char a;
   431                           ;test_60f01x_INT.C: 69: for(a=0;a<Time;a++)
   432  004C  01F3               	clrf	DelayUs@a
   433  004D                     l848:	
   434  004D  0872               	movf	DelayUs@Time,w
   435  004E  0273               	subwf	DelayUs@a,w
   436  004F  1803               	btfsc	3,0
   437  0050  0008               	return
   438                           
   439                           ;test_60f01x_INT.C: 70: {
   440                           ;test_60f01x_INT.C: 71: __nop();
   441  0051  0000               	nop
   442  0052  0AF3               	incf	DelayUs@a,f
   443  0053  284D               	goto	l848
   444  0054                     __end_of_DelayUs:	
   445                           
   446                           	psect	text5
   447  003F                     __ptext5:	
   448 ;; *************** function _ISR *****************
   449 ;; Defined at:
   450 ;;		line 31 in file "test_60f01x_INT.C"
   451 ;; Parameters:    Size  Location     Type
   452 ;;		None
   453 ;; Auto vars:     Size  Location     Type
   454 ;;		None
   455 ;; Return value:  Size  Location     Type
   456 ;;                  1    wreg      void 
   457 ;; Registers used:
   458 ;;		None
   459 ;; Tracked objects:
   460 ;;		On entry : 0/0
   461 ;;		On exit  : 0/0
   462 ;;		Unchanged: 0/0
   463 ;; Data sizes:     COMMON   BANK0
   464 ;;      Params:         0       0
   465 ;;      Locals:         0       0
   466 ;;      Temps:          2       0
   467 ;;      Totals:         2       0
   468 ;;Total ram usage:        2 bytes
   469 ;; Hardware stack levels used:    1
   470 ;; This function calls:
   471 ;;		Nothing
   472 ;; This function is called by:
   473 ;;		Interrupt level 1
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477                           
   478                           ;psect for function _ISR
   479  003F                     _ISR:	
   480                           
   481                           ;test_60f01x_INT.C: 33: if(INTE && INTF)
   482  003F  1A0B               	btfsc	11,4	;volatile
   483  0040  1C8B               	btfss	11,1	;volatile
   484  0041  2844               	goto	i1l438
   485                           
   486                           ;test_60f01x_INT.C: 34: {
   487                           ;test_60f01x_INT.C: 35: INTF = 0;
   488  0042  108B               	bcf	11,1	;volatile
   489                           
   490                           ;test_60f01x_INT.C: 36: INTE = 0;
   491  0043  120B               	bcf	11,4	;volatile
   492  0044                     i1l438:	
   493  0044  0871               	movf	??_ISR+1,w
   494  0045  008A               	movwf	10
   495  0046  0E70               	swapf	??_ISR^(0+-128),w
   496  0047  0083               	movwf	3
   497  0048  0EFE               	swapf	126,f
   498  0049  0E7E               	swapf	126,w
   499  004A  0009               	retfie
   500  004B                     __end_of_ISR:	
   501  007E                     btemp	set	126	;btemp
   502  007E                     wtemp0	set	126
   503                           
   504                           	psect	intentry
   505  0004                     __pintentry:	
   506                           ;incstack = 0
   507                           ; Regs used in _ISR: []
   508                           
   509  0004                     interrupt_function:	
   510  007E                     saved_w	set	btemp
   511  0004  00FE               	movwf	btemp
   512  0005  0E03               	swapf	3,w
   513  0006  00F0               	movwf	??_ISR
   514  0007  080A               	movf	10,w
   515  0008  00F1               	movwf	??_ISR+1
   516  0009  283F               	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_DelayMs
    _DelayMs->_DelayUs

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      90
                            _DelayMs
                        _INT_INITIAL
                      _POWER_INITIAL
 ---------------------------------------------------------------------------------
 (1) _POWER_INITIAL                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INT_INITIAL                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DelayMs                                              3     3      0      90
                                              4 COMMON     3     3      0
                            _DelayUs
 ---------------------------------------------------------------------------------
 (2) _DelayUs                                              2     2      0      30
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayMs
     _DelayUs
   _INT_INITIAL
   _POWER_INITIAL

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       8       3        0.0%
BITBANK0            30      0       0       4        0.0%
BANK0               30      0       0       5        0.0%
ABS                  0      0       8       6        0.0%


GNU Macro Assembler for 8 bit devices.     
Symbol Table                                                                                   Sat Nov 20 16:02:41 2021

                    l464 000F                      l848 004D                      l868 0027  
                    l876 0022                      l888 000E                      _GIE 005F  
                    _PA4 002C                      _ISR 003F                     ?_ISR 0070  
                   _INTE 005C                     _INTF 0059                     _WPUA 0095  
                   _main 000D                     btemp 007E                     start 000A  
        __end_of_DelayMs 0030          __end_of_DelayUs 0054                    ??_ISR 0070  
                  ?_main 0070                    i1l438 0044                    _PORTA 0005  
           ?_INT_INITIAL 0070                    _TRISA 0085                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000B  
           __end_of_main 0020                   ??_main 0077                   _INTEDG 040E  
                 _INTCON 000B                ??_DelayMs 0074                ??_DelayUs 0072  
                 _OSCCON 008F                   _FCount 0077                   _OPTION 0081  
                 _TRISA2 042A                   saved_w 007E    __end_of_POWER_INITIAL 003F  
__end_of__initialization 000B           __pcstackCOMMON 0070     __size_of_INT_INITIAL 0006  
             __pnvCOMMON 0077               __pmaintext 000D               __pintentry 0004  
                _MSCKCON 001B                  _DelayMs 0020                  _DelayUs 004B  
                __ptext1 0030                  __ptext2 0054                  __ptext3 0020  
                __ptext4 004B                  __ptext5 003F             __size_of_ISR 000C  
   end_of_initialization 000B      start_initialization 000B              __end_of_ISR 004B  
 __size_of_POWER_INITIAL 000F            ??_INT_INITIAL 0072                ___latbits 0000  
               ?_DelayMs 0070                 ?_DelayUs 0070      __end_of_INT_INITIAL 005A  
      interrupt_function 0004            _POWER_INITIAL 0030                 DelayMs@a 0075  
               DelayMs@b 0076                 DelayUs@a 0073              DelayMs@Time 0074  
         ?_POWER_INITIAL 0070              DelayUs@Time 0072         __size_of_DelayMs 0010  
       __size_of_DelayUs 0009              _INT_INITIAL 0054            __size_of_main 0013  
        ??_POWER_INITIAL 0072                 intlevel1 0000  
