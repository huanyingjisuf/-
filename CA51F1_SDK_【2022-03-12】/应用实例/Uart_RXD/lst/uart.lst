C51 COMPILER V9.02   UART                                                                  12/26/2021 22:46:22 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\output\uart.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE source\uart.c OMF2 OPTIMIZE(9,SPEED) BROWSE DEBUG PRINT(.\lst\uart.lst) OBJ
                    -ECT(.\output\uart.obj)

line level    source

   1          #ifndef _UART_C_
   2          #define _UART_C_
   3          
   4          #include "include/ca51f1_config.h"              
   5          #include "include/ca51f1sfr.h"
   6          #include "include/ca51f1xsfr.h"
   7          #include "include/gpiodef_f1.h"
   8          
   9          #include "include/uart.h"
  10          #include <intrins.h>
  11          #include <string.h>
  12          #include <stdarg.h>
  13          #include <stdlib.h>
  14          #include <stdio.h>
  15          #include <absacc.h>
  16          /*********************************************************************************************************
             -************/
  17          /*********************************************************************************************************
             -************/
  18          #ifdef UART_EN
  19          /*********************************************************************************************************
             -************
  20          注意：以下波特率配置参数前提条件是系统时钟为8MHz，如果修改系统时钟频率，波特率配置参数须另行计算。
  21          **********************************************************************************************************
             -************/
  22          void Uart_Initial(unsigned long int baudrate)
  23          {
  24   1              code unsigned long int BR_TAB[]=
  25   1              {
  26   1                      1200,
  27   1                      2400,
  28   1                      4800,
  29   1                      9600,
  30   1                      19200,
  31   1                      38400,
  32   1                      57600,
  33   1                      115200,
  34   1              };
  35   1              code unsigned int BR_SET_TAB[][2]=
  36   1              {
  37   1                      {208,31},
  38   1                      {104,31},
  39   1                      {52,31},
  40   1                      {26,31},
  41   1                      {13,31},
  42   1                      {7,29}, 
  43   1                      {5,27},
  44   1                      {3,23},
  45   1              };
  46   1              unsigned int value_temp;
  47   1              unsigned char i;
  48   1      
  49   1              uart_send.head=0;
  50   1              uart_send.tail=0;
C51 COMPILER V9.02   UART                                                                  12/26/2021 22:46:22 PAGE 2   

  51   1              uart_rev.head=0;
  52   1              uart_rev.tail=0;
  53   1              uart_tx_flag=0;
  54   1      
  55   1              for(i=0;i<sizeof(BR_TAB)/4;i++)
  56   1              {
  57   2                      if(baudrate == BR_TAB[i])
  58   2                      {
  59   3                              value_temp = 0x400 - BR_SET_TAB[i][0];
  60   3                              UDCKS = 0x80 | BR_SET_TAB[i][1]; 
  61   3                              break;
  62   3                      }
  63   2              }
  64   1              if(i == sizeof(BR_TAB)/4) return;       //如果所设置的波特率不在表格中，可自行添加。
  65   1      
  66   1              GPIO_Init(P30F,P30_UART_TX_SETTING);
  67   1              GPIO_Init(P31F,P31_UART_RX_SETTING);
  68   1      
  69   1              SRELH = (unsigned char)(value_temp>>8);
  70   1              SRELL = (unsigned char)(value_temp);
  71   1              
  72   1              SCON = 0xD0;
  73   1              INT2EN =        1;      
  74   1      }
  75          
  76          void Uart_PutChar(unsigned char bdat)
  77          {
  78   1              unsigned char free_space;
  79   1              unsigned char tail_tmp;
  80   1              while(1)
  81   1              {               
  82   2                      tail_tmp = uart_send.tail;
  83   2                      if(uart_send.head < tail_tmp)
  84   2                      {
  85   3                              free_space = tail_tmp - uart_send.head;
  86   3                      }
  87   2                      else
  88   2                      {
  89   3                              free_space = UART_TX_BUF_SIZE + tail_tmp - uart_send.head;
  90   3                      }               
  91   2                      if(free_space > 1)
  92   2                      {
  93   3                              INT2EN = 0; 
  94   3                              uart_send.head++;
  95   3                              uart_send.head %= UART_TX_BUF_SIZE;
  96   3                              uart_tx_buf[uart_send.head] = bdat;
  97   3                              if(!uart_tx_flag)
  98   3                              {
  99   4                                      INT2EN = 1;
 100   4                                      uart_send.tail++;
 101   4                                      uart_send.tail %= UART_TX_BUF_SIZE;             
 102   4                                      SBUF = uart_tx_buf[uart_send.tail];                             
 103   4                                      uart_tx_flag = 1;               
 104   4                              }
 105   3                              else
 106   3                              {
 107   4                                      INT2EN = 1;     
 108   4                              }                       
 109   3                              break;
 110   3                      }
 111   2              }
 112   1      }
C51 COMPILER V9.02   UART                                                                  12/26/2021 22:46:22 PAGE 3   

 113          void UART_ISR (void) interrupt 4        
 114          {
 115   1              if(SCON & 0x01)
 116   1              {
 117   2                      SCON = (SCON&~(0x03))|0x01;                      
 118   2                      uart_rev.head++;
 119   2                uart_rev.head %= UART_RX_BUF_SIZE;
 120   2                      uart_rx_buf[uart_rev.head]=SBUF;
 121   2              }
 122   1              if(SCON & 0x02)
 123   1              {
 124   2                      SCON = (SCON&~(0x03))|0x02;     
 125   2                      if(uart_send.head!=uart_send.tail)
 126   2                      {
 127   3                              uart_send.tail++;
 128   3                              uart_send.tail %= UART_TX_BUF_SIZE;
 129   3                              SBUF = uart_tx_buf[uart_send.tail];                             
 130   3                      }
 131   2                      else
 132   2                      {
 133   3                              uart_tx_flag=0;
 134   3                      }               
 135   2              }
 136   1      }
 137          #endif
 138          
 139          #ifdef PRINT_EN
              void UartPutStr(char *str)
              {
                      while(*str)
                      {       
                              Uart_PutChar(*str++);
                      }
              }
              void uart_printf(char *fmt,...) 
              {
                  va_list ap;
                  char idata string[32];
                  va_start(ap,fmt);
                  vsprintf(string,fmt,ap);
                  UartPutStr(string);
                  va_end(ap);
              }
              #endif
 157          
 158          /*********************************************************************************************************
             -************/
 159          
 160          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    308    ----
   CONSTANT SIZE    =     64    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       7
   IDATA SIZE       =     34    ----
   BIT SIZE         =      1    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
C51 COMPILER V9.02   UART                                                                  12/26/2021 22:46:22 PAGE 4   

   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
