C51 COMPILER V9.02   UART                                                                  12/26/2021 22:44:42 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\output\uart.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE source\uart.c OMF2 OPTIMIZE(9,SPEED) BROWSE DEBUG PRINT(.\lst\uart.lst) OBJ
                    -ECT(.\output\uart.obj)

line level    source

   1          #ifndef _UART_C_
   2          #define _UART_C_
   3          
   4          #include "include/ca51f1_config.h"              
   5          #include "include/ca51f1sfr.h"
   6          #include "include/ca51f1xsfr.h"
   7          #include "include/gpiodef_f1.h"
   8          
   9          #include "include/uart.h"
  10          #include <intrins.h>
  11          #include <string.h>
  12          #include <stdarg.h>
  13          #include <stdlib.h>
  14          #include <stdio.h>
  15          #include <absacc.h>
  16          /*********************************************************************************************************
             -************/
  17          /*********************************************************************************************************
             -************/
  18          #ifdef UART_EN
              /*********************************************************************************************************
             -************
              注意：以下波特率配置参数前提条件是系统时钟为8MHz，如果修改系统时钟频率，波特率配置参数须另行计算。
              **********************************************************************************************************
             -************/
              void Uart_Initial(unsigned long int baudrate)
              {
                      code unsigned long int BR_TAB[]=
                      {
                              1200,
                              2400,
                              4800,
                              9600,
                              19200,
                              38400,
                              57600,
                              115200,
                      };
                      code unsigned int BR_SET_TAB[][2]=
                      {
                              {208,31},
                              {104,31},
                              {52,31},
                              {26,31},
                              {13,31},
                              {7,29}, 
                              {5,27},
                              {3,23},
                      };
                      unsigned int value_temp;
                      unsigned char i;
              
                      uart_send.head=0;
                      uart_send.tail=0;
C51 COMPILER V9.02   UART                                                                  12/26/2021 22:44:42 PAGE 2   

                      uart_rev.head=0;
                      uart_rev.tail=0;
                      uart_tx_flag=0;
              
                      for(i=0;i<sizeof(BR_TAB)/4;i++)
                      {
                              if(baudrate == BR_TAB[i])
                              {
                                      value_temp = 0x400 - BR_SET_TAB[i][0];
                                      UDCKS = 0x80 | BR_SET_TAB[i][1]; 
                                      break;
                              }
                      }
                      if(i == sizeof(BR_TAB)/4) return;       //如果所设置的波特率不在表格中，可自行添加。
              
                      GPIO_Init(P30F,P30_UART_TX_SETTING);
                      GPIO_Init(P31F,P31_UART_RX_SETTING);
              
                      SRELH = (unsigned char)(value_temp>>8);
                      SRELL = (unsigned char)(value_temp);
                      
                      SCON = 0xD0;
                      INT2EN =        1;      
              }
              
              void Uart_PutChar(unsigned char bdat)
              {
                      unsigned char free_space;
                      unsigned char tail_tmp;
                      while(1)
                      {               
                              tail_tmp = uart_send.tail;
                              if(uart_send.head < tail_tmp)
                              {
                                      free_space = tail_tmp - uart_send.head;
                              }
                              else
                              {
                                      free_space = UART_TX_BUF_SIZE + tail_tmp - uart_send.head;
                              }               
                              if(free_space > 1)
                              {
                                      INT2EN = 0; 
                                      uart_send.head++;
                                      uart_send.head %= UART_TX_BUF_SIZE;
                                      uart_tx_buf[uart_send.head] = bdat;
                                      if(!uart_tx_flag)
                                      {
                                              INT2EN = 1;
                                              uart_send.tail++;
                                              uart_send.tail %= UART_TX_BUF_SIZE;             
                                              SBUF = uart_tx_buf[uart_send.tail];                             
                                              uart_tx_flag = 1;               
                                      }
                                      else
                                      {
                                              INT2EN = 1;     
                                      }                       
                                      break;
                              }
                      }
              }
C51 COMPILER V9.02   UART                                                                  12/26/2021 22:44:42 PAGE 3   

              void UART_ISR (void) interrupt 4        
              {
                      if(SCON & 0x01)
                      {
                              SCON = (SCON&~(0x03))|0x01;                      
                              uart_rev.head++;
                        uart_rev.head %= UART_RX_BUF_SIZE;
                              uart_rx_buf[uart_rev.head]=SBUF;
                      }
                      if(SCON & 0x02)
                      {
                              SCON = (SCON&~(0x03))|0x02;     
                              if(uart_send.head!=uart_send.tail)
                              {
                                      uart_send.tail++;
                                      uart_send.tail %= UART_TX_BUF_SIZE;
                                      SBUF = uart_tx_buf[uart_send.tail];                             
                              }
                              else
                              {
                                      uart_tx_flag=0;
                              }               
                      }
              }
              #endif
 138          
 139          #ifdef PRINT_EN
              void UartPutStr(char *str)
              {
                      while(*str)
                      {       
                              Uart_PutChar(*str++);
                      }
              }
              void uart_printf(char *fmt,...) 
              {
                  va_list ap;
                  char idata string[32];
                  va_start(ap,fmt);
                  vsprintf(string,fmt,ap);
                  UartPutStr(string);
                  va_end(ap);
              }
              #endif
 157          
 158          /*********************************************************************************************************
             -************/
 159          
 160          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
C51 COMPILER V9.02   UART                                                                  12/26/2021 22:44:42 PAGE 4   

   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
