C51 COMPILER V9.02   TS_SEVICE                                                             12/24/2021 22:07:23 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE TS_SEVICE
OBJECT MODULE PLACED IN .\hex\ts_sevice.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE TS_Lib\Sources\ts_sevice.c OMF2 OPTIMIZE(9,SIZE) BROWSE DEBUG PRINT(.\lst\t
                    -s_sevice.lst) OBJECT(.\hex\ts_sevice.obj)

line level    source

   1          #ifndef TS_SERVICE_C
   2          #define TS_SERVICE_C
   3          /*********************************************************************************************************
             -************/
   4          #include "ca51f1_config.h"
   5          #include "includes\ca51f1sfr.h"
   6          #include "includes\ca51f1xsfr.h"
   7          #include "includes\gpiodef_f1.h"
   8          /*********************************************************************************************************
             -************/
   9          #include "TS_Lib\Includes\ts_def.h"
  10          #include "TS_Lib\Includes\ts_api.h"
  11          #include "TS_Lib\Includes\ts_service.h"           
  12          /*********************************************************************************************************
             -************/
  13          //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  14          //´¥Ãþ¹Ü½Å³õÊ¼»¯
  15          //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  16          code unsigned char *pXSFR[]=
  17          {
  18                  &P31F,
  19                  &P32F,
  20                  &P34F,
  21                  &P01F,
  22                  &P30F,
  23          };
  24          
  25          void TS_IO_init(void)
  26          {
  27   1              unsigned char i;
  28   1              unsigned char *pPinS;
  29   1              GPIO_Init(P35F,P35_CAP_SETTING);
  30   1      
  31   1              for(i = 0; i < TS_Cnt; i++)
  32   1              {
  33   2                      pPinS = pXSFR[TS_CH[i]];
  34   2                      *pPinS = 4;
  35   2              }
  36   1      }
  37          void TS_ScanStart(void)
  38          {       
  39   1              TKCON |= TKST(1);
  40   1      }
  41          unsigned char TS_GetDataArea(unsigned char ts_ch,unsigned int ts_data,int NoiseThd,bit key_pressed_flag)
  42          {
  43   1              int Delta;
  44   1              int FingerThd;
  45   1              
  46   1              Delta           = (int)TS_BaseLineData[ts_ch] - (int)ts_data;
  47   1              FingerThd = TSKey_FingerThd[ts_ch];             
  48   1              
  49   1              if(key_pressed_flag)
  50   1              {
  51   2                      FingerThd = (FingerThd*9)/10;   
C51 COMPILER V9.02   TS_SEVICE                                                             12/24/2021 22:07:23 PAGE 2   

  52   2              }
  53   1              
  54   1              if(Delta >= FingerThd)                  return AREA_FINGER_TOUCH; 
  55   1              else if(Delta > NoiseThd)               return AREA_PNOISE_PLUS; 
  56   1              else if(Delta >= 0)                                     return AREA_PNOISE;
  57   1              else if(Delta >= -NoiseThd) return AREA_NNOISE;
  58   1              else                                                                                            return AREA_OVER_LOW;
  59   1      }
  60          unsigned char TS_AreaDeviateDetection(unsigned int cmp_data,unsigned int real_data,int range)
  61          {       
  62   1              int Delta;
  63   1              Delta   = (int)cmp_data - (int)real_data;
  64   1              if((Delta <= range) && (Delta >= -range))
  65   1              {
  66   2                      return 1;
  67   2              }
  68   1              else
  69   1              {
  70   2                      return 0;       
  71   2              }               
  72   1      }
  73          void TS_BaseLineForceUpdate(void)
  74          {
  75   1              unsigned char i;
  76   1      
  77   1              for(i = 0; i < TS_Cnt; i++)
  78   1              {
  79   2                      TS_FirstAreaData[i] = TS_PostData[i];
  80   2                      TS_BaseLineData[i]      = TS_PostData[i];
  81   2                      TS_AreaConfirmTimerSet(i,AREA_PNOISE);                                          
  82   2              }       
  83   1      }
  84          
  85          void TS_AreaConfirmTimerSet(unsigned char ts_ch, unsigned char area)
  86          {
  87   1              TS_AreaConfirmTimer[ts_ch] = AREA_CONFIRM_TIME_TAB[area];
  88   1      }
  89          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    285    ----
   CONSTANT SIZE    =     15    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
