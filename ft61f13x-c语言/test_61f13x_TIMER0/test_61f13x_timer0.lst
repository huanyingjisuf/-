

GNU Macro Assembler for 8 bit devices.       
                                                                                               Fri Sep 10 13:40:11 2021

GNU C Code Generator                                                 
     1                           	processor	FT61F13X
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	pa_nodes0,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 09/04/2020 
    17                           ; 
    18                           ; SFR Addresses
    19  0000                     
    20                           	psect	text0
    21  0000                     __ptext0:	
    22  000B                     _INTCON	set	11
    23  0007                     _PORTC	set	7
    24  0005                     _PORTA	set	5
    25  0001                     _TMR0	set	1
    26  005F                     _GIE	set	95
    27  005D                     _T0IE	set	93
    28  005A                     _T0IF	set	90
    29  002C                     _PA4	set	44
    30  0095                     _WPUA	set	149
    31  0093                     _WPUC	set	147
    32  008F                     _OSCCON	set	143
    33  0087                     _TRISC	set	135
    34  0085                     _TRISA	set	133
    35  0081                     _OPTION	set	129
    36                           
    37                           	psect	cinit
    38  000D                     start_initialization:	
    39                           ; #config settings
    40                           
    41  000D                     __initialization:	
    42  000D                     end_of_initialization:	
    43                           ;End of C runtime variable initialization code
    44                           
    45  000D                     __end_of__initialization:	
    46  000D  0183               	clrf	3
    47  000E  118A  2830         	ljmp	_main	;jump to C main() function
    48                           
    49                           	psect	cstackCOMMON
    50  0070                     __pcstackCOMMON:	
    51  0070                     ?_ISR:	
    52  0070                     ??_ISR:	
    53                           ; 1 bytes @ 0x0
    54                           
    55  0070                     ?_POWER_INITIAL:	
    56                           ; 1 bytes @ 0x0
    57                           
    58  0070                     ?_TIMER0_INITIAL:	
    59                           ; 1 bytes @ 0x0
    60                           
    61  0070                     ?_main:	
    62                           ; 1 bytes @ 0x0
    63                           
    64                           
    65                           ; 1 bytes @ 0x0
    66  0070                     	ds	2
    67  0072                     ??_POWER_INITIAL:	
    68  0072                     ??_TIMER0_INITIAL:	
    69                           ; 1 bytes @ 0x2
    70                           
    71  0072                     ??_main:	
    72                           ; 1 bytes @ 0x2
    73                           
    74                           
    75                           	psect	maintext
    76  0030                     __pmaintext:	
    77                           ; 1 bytes @ 0x2
    78 ;;
    79 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    80 ;;
    81 ;; *************** function _main *****************
    82 ;; Defined at:
    83 ;;		line 85 in file "test_61f13x_Timer0.C"
    84 ;; Parameters:    Size  Location     Type
    85 ;;		None
    86 ;; Auto vars:     Size  Location     Type
    87 ;;		None
    88 ;; Return value:  Size  Location     Type
    89 ;;                  1    wreg      void 
    90 ;; Registers used:
    91 ;;		wreg, status,2, status,0, pclath, cstack
    92 ;; Tracked objects:
    93 ;;		On entry : B00/0
    94 ;;		On exit  : 0/0
    95 ;;		Unchanged: 0/0
    96 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
    97 ;;      Params:         0       0       0       0
    98 ;;      Locals:         0       0       0       0
    99 ;;      Temps:          0       0       0       0
   100 ;;      Totals:         0       0       0       0
   101 ;;Total ram usage:        0 bytes
   102 ;; Hardware stack levels required when called:    2
   103 ;; This function calls:
   104 ;;		_POWER_INITIAL
   105 ;;		_TIMER0_INITIAL
   106 ;; This function is called by:
   107 ;;		Startup code after reset
   108 ;; This function uses a non-reentrant model
   109 ;;
   110                           
   111                           
   112                           ;psect for function _main
   113  0030                     _main:	
   114                           
   115                           ;test_61f13x_Timer0.C: 87: POWER_INITIAL();
   116                           
   117                           ;incstack = 0
   118                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   119  0030  118A  2010  118A   	fcall	_POWER_INITIAL
   120                           
   121                           ;test_61f13x_Timer0.C: 88: TIMER0_INITIAL();
   122  0033  118A  203A  118A   	fcall	_TIMER0_INITIAL
   123                           
   124                           ;test_61f13x_Timer0.C: 89: GIE = 1;
   125  0036  178B               	bsf	11,7	;volatile
   126                           
   127                           ;test_61f13x_Timer0.C: 90: T0IE = 1;
   128  0037  168B               	bsf	11,5	;volatile
   129  0038                     l1658:	
   130                           
   131                           ;test_61f13x_Timer0.C: 92: {
   132                           ;test_61f13x_Timer0.C: 93: __nop();
   133  0038  0000               	nop
   134  0039  2838               	goto	l1658
   135  003A                     __end_of_main:	
   136                           
   137                           	psect	text1
   138  003A                     __ptext1:	
   139 ;; *************** function _TIMER0_INITIAL *****************
   140 ;; Defined at:
   141 ;;		line 73 in file "test_61f13x_Timer0.C"
   142 ;; Parameters:    Size  Location     Type
   143 ;;		None
   144 ;; Auto vars:     Size  Location     Type
   145 ;;		None
   146 ;; Return value:  Size  Location     Type
   147 ;;                  1    wreg      void 
   148 ;; Registers used:
   149 ;;		wreg, status,2
   150 ;; Tracked objects:
   151 ;;		On entry : B00/100
   152 ;;		On exit  : B00/0
   153 ;;		Unchanged: 800/0
   154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   155 ;;      Params:         0       0       0       0
   156 ;;      Locals:         0       0       0       0
   157 ;;      Temps:          0       0       0       0
   158 ;;      Totals:         0       0       0       0
   159 ;;Total ram usage:        0 bytes
   160 ;; Hardware stack levels used:    1
   161 ;; Hardware stack levels required when called:    1
   162 ;; This function calls:
   163 ;;		Nothing
   164 ;; This function is called by:
   165 ;;		_main
   166 ;; This function uses a non-reentrant model
   167 ;;
   168                           
   169                           
   170                           ;psect for function _TIMER0_INITIAL
   171  003A                     _TIMER0_INITIAL:	
   172                           
   173                           ;test_61f13x_Timer0.C: 75: OPTION = 0B00000111;
   174                           
   175                           ;incstack = 0
   176                           ; Regs used in _TIMER0_INITIAL: [wreg+status,2]
   177  003A  3007               	movlw	7
   178  003B  0081               	movwf	1	;volatile
   179                           
   180                           ;test_61f13x_Timer0.C: 76: T0IF = 0;
   181  003C  110B               	bcf	11,2	;volatile
   182                           
   183                           ;test_61f13x_Timer0.C: 77: TMR0 = 0;
   184  003D  1283               	bcf	3,5	;RP0=0, select bank0
   185  003E  0181               	clrf	1	;volatile
   186  003F  0008               	return
   187  0040                     __end_of_TIMER0_INITIAL:	
   188                           
   189                           	psect	text2
   190  0010                     __ptext2:	
   191 ;; *************** function _POWER_INITIAL *****************
   192 ;; Defined at:
   193 ;;		line 53 in file "test_61f13x_Timer0.C"
   194 ;; Parameters:    Size  Location     Type
   195 ;;		None
   196 ;; Auto vars:     Size  Location     Type
   197 ;;		None
   198 ;; Return value:  Size  Location     Type
   199 ;;                  1    wreg      void 
   200 ;; Registers used:
   201 ;;		wreg, status,2
   202 ;; Tracked objects:
   203 ;;		On entry : B00/0
   204 ;;		On exit  : B00/100
   205 ;;		Unchanged: 800/0
   206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   207 ;;      Params:         0       0       0       0
   208 ;;      Locals:         0       0       0       0
   209 ;;      Temps:          0       0       0       0
   210 ;;      Totals:         0       0       0       0
   211 ;;Total ram usage:        0 bytes
   212 ;; Hardware stack levels used:    1
   213 ;; Hardware stack levels required when called:    1
   214 ;; This function calls:
   215 ;;		Nothing
   216 ;; This function is called by:
   217 ;;		_main
   218 ;; This function uses a non-reentrant model
   219 ;;
   220                           
   221                           
   222                           ;psect for function _POWER_INITIAL
   223  0010                     _POWER_INITIAL:	
   224                           
   225                           ;test_61f13x_Timer0.C: 56: OSCCON = 0B01110001;
   226                           
   227                           ;incstack = 0
   228                           ; Regs used in _POWER_INITIAL: [wreg+status,2]
   229  0010  3071               	movlw	113
   230  0011  1683               	bsf	3,5	;RP0=1, select bank1
   231  0012  008F               	movwf	15	;volatile
   232                           
   233                           ;test_61f13x_Timer0.C: 57: OPTION = 0B00001000;
   234  0013  3008               	movlw	8
   235  0014  0081               	movwf	1	;volatile
   236                           
   237                           ;test_61f13x_Timer0.C: 58: INTCON = 0;
   238  0015  018B               	clrf	11	;volatile
   239                           
   240                           ;test_61f13x_Timer0.C: 59: PORTA = 0B00000000;
   241  0016  1283               	bcf	3,5	;RP0=0, select bank0
   242  0017  0185               	clrf	5	;volatile
   243                           
   244                           ;test_61f13x_Timer0.C: 60: TRISA = 0B00000000;
   245  0018  1683               	bsf	3,5	;RP0=1, select bank1
   246  0019  0185               	clrf	5	;volatile
   247                           
   248                           ;test_61f13x_Timer0.C: 62: PORTC = 0B00000000;
   249  001A  1283               	bcf	3,5	;RP0=0, select bank0
   250  001B  0187               	clrf	7	;volatile
   251                           
   252                           ;test_61f13x_Timer0.C: 63: TRISC = 0B00000000;
   253  001C  1683               	bsf	3,5	;RP0=1, select bank1
   254  001D  0187               	clrf	7	;volatile
   255                           
   256                           ;test_61f13x_Timer0.C: 65: WPUA = 0B00000000;
   257  001E  0195               	clrf	21	;volatile
   258                           
   259                           ;test_61f13x_Timer0.C: 66: WPUC = 0B00000000;
   260  001F  0193               	clrf	19	;volatile
   261  0020  0008               	return
   262  0021                     __end_of_POWER_INITIAL:	
   263                           
   264                           	psect	text3
   265  0021                     __ptext3:	
   266 ;; *************** function _ISR *****************
   267 ;; Defined at:
   268 ;;		line 39 in file "test_61f13x_Timer0.C"
   269 ;; Parameters:    Size  Location     Type
   270 ;;		None
   271 ;; Auto vars:     Size  Location     Type
   272 ;;		None
   273 ;; Return value:  Size  Location     Type
   274 ;;                  1    wreg      void 
   275 ;; Registers used:
   276 ;;		wreg
   277 ;; Tracked objects:
   278 ;;		On entry : 0/0
   279 ;;		On exit  : 0/0
   280 ;;		Unchanged: 0/0
   281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   282 ;;      Params:         0       0       0       0
   283 ;;      Locals:         0       0       0       0
   284 ;;      Temps:          2       0       0       0
   285 ;;      Totals:         2       0       0       0
   286 ;;Total ram usage:        2 bytes
   287 ;; Hardware stack levels used:    1
   288 ;; This function calls:
   289 ;;		Nothing
   290 ;; This function is called by:
   291 ;;		Interrupt level 1
   292 ;; This function uses a non-reentrant model
   293 ;;
   294                           
   295                           
   296                           ;psect for function _ISR
   297  0021                     _ISR:	
   298                           
   299                           ;test_61f13x_Timer0.C: 41: if(T0IE && T0IF)
   300  0021  1A8B               	btfsc	11,5	;volatile
   301  0022  1D0B               	btfss	11,2	;volatile
   302  0023  2829               	goto	i1l1232
   303                           
   304                           ;test_61f13x_Timer0.C: 42: {
   305                           ;test_61f13x_Timer0.C: 43: T0IF = 0;
   306  0024  110B               	bcf	11,2	;volatile
   307                           
   308                           ;test_61f13x_Timer0.C: 44: PA4 = ~PA4;
   309  0025  3010               	movlw	16
   310  0026  1283               	bcf	3,5	;RP0=0, select bank0
   311  0027  1303               	bcf	3,6	;RP1=0, select bank0
   312  0028  0685               	xorwf	5,f
   313  0029                     i1l1232:	
   314  0029  0871               	movf	??_ISR+1,w
   315  002A  008A               	movwf	10
   316  002B  0E70               	swapf	??_ISR^(0+-128),w
   317  002C  0083               	movwf	3
   318  002D  0EFE               	swapf	126,f
   319  002E  0E7E               	swapf	126,w
   320  002F  0009               	retfie
   321  0030                     __end_of_ISR:	
   322  007E                     btemp	set	126	;btemp
   323  007E                     wtemp0	set	126
   324                           
   325                           	psect	intentry
   326  0004                     __pintentry:	
   327                           ;incstack = 0
   328                           ; Regs used in _ISR: [wreg]
   329                           
   330  0004                     interrupt_function:	
   331  007E                     saved_w	set	btemp
   332  0004  00FE               	movwf	btemp
   333  0005  0E03               	swapf	3,w
   334  0006  00F0               	movwf	??_ISR
   335  0007  080A               	movf	10,w
   336  0008  00F1               	movwf	??_ISR+1
   337  0009  118A  2821         	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                      _POWER_INITIAL
                     _TIMER0_INITIAL
 ---------------------------------------------------------------------------------
 (1) _TIMER0_INITIAL                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POWER_INITIAL                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _POWER_INITIAL
   _TIMER0_INITIAL

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


GNU Macro Assembler for 8 bit devices.     
Symbol Table                                                                                   Fri Sep 10 13:40:11 2021

                    _GIE 005F                      _PA4 002C                      _ISR 0021  
                   ?_ISR 0070                     l1658 0038                     _T0IE 005D  
                   _T0IF 005A                     _TMR0 0001                     _WPUA 0095  
                   _WPUC 0093                     _main 0030                     btemp 007E  
                   start 000B                    ??_ISR 0070           _TIMER0_INITIAL 003A  
                  ?_main 0070                    _PORTA 0005                    _PORTC 0007  
                  _TRISA 0085                    _TRISC 0087                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000D  
           __end_of_main 003A   __end_of_TIMER0_INITIAL 0040                   ??_main 0072  
                 i1l1232 0029                   _INTCON 000B                   _OSCCON 008F  
                 _OPTION 0081          ?_TIMER0_INITIAL 0070                   saved_w 007E  
  __end_of_POWER_INITIAL 0021  __end_of__initialization 000D           __pcstackCOMMON 0070  
             __pmaintext 0030               __pintentry 0004                  __ptext0 0000  
                __ptext1 003A                  __ptext2 0010                  __ptext3 0021  
           __size_of_ISR 000F     end_of_initialization 000D         ??_TIMER0_INITIAL 0072  
    start_initialization 000D              __end_of_ISR 0030   __size_of_POWER_INITIAL 0011  
              ___latbits 0001        interrupt_function 0004            _POWER_INITIAL 0010  
         ?_POWER_INITIAL 0070            __size_of_main 000A  __size_of_TIMER0_INITIAL 0006  
        ??_POWER_INITIAL 0072                 intlevel1 0000  
