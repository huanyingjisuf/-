

GNU Macro Assembler for 8 bit devices.       
                                                                                               Thu Nov 11 17:35:25 2021

GNU C Code Generator                                                 
     1                           	processor	FT61F13X
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text5,local,class=CODE,merge=1,delta=2
    11                           	psect	text8,local,class=CODE,merge=1,delta=2
    12                           	psect	pa_nodes0,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 09/04/2020 
    17                           ; 
    18                           ; SFR Addresses
    19  0000                     
    20                           	psect	text0
    21  0000                     __ptext0:	
    22  000B                     _INTCON	set	11
    23  0007                     _PORTC	set	7
    24  0005                     _PORTA	set	5
    25  002F                     _PA7	set	47
    26  002E                     _PA6	set	46
    27  002C                     _PA4	set	44
    28  002A                     _PA2	set	42
    29  0095                     _WPUA	set	149
    30  0093                     _WPUC	set	147
    31  008F                     _OSCCON	set	143
    32  0087                     _TRISC	set	135
    33  0085                     _TRISA	set	133
    34  0081                     _OPTION	set	129
    35                           
    36                           	psect	cinit
    37  07FC                     start_initialization:	
    38                           ; #config settings
    39                           
    40  07FC                     __initialization:	
    41                           
    42                           ; Clear objects allocated to COMMON
    43  07FC  01F6               	clrf	__pbssCOMMON& (0+127)
    44  07FD                     end_of_initialization:	
    45                           ;End of C runtime variable initialization code
    46                           
    47  07FD                     __end_of__initialization:	
    48  07FD  0183               	clrf	3
    49  07FE  118A  2F81         	ljmp	_main	;jump to C main() function
    50                           
    51                           	psect	bssCOMMON
    52  0076                     __pbssCOMMON:	
    53  0076                     _SPIReadData:	
    54  0076                     	ds	1
    55                           
    56                           	psect	cstackCOMMON
    57  0070                     __pcstackCOMMON:	
    58  0070                     ?_POWER_INITIAL:	
    59  0070                     ??_POWER_INITIAL:	
    60                           ; 1 bytes @ 0x0
    61                           
    62  0070                     ?_init_25c64_io:	
    63                           ; 1 bytes @ 0x0
    64                           
    65  0070                     ??_init_25c64_io:	
    66                           ; 1 bytes @ 0x0
    67                           
    68  0070                     ?_SPI_RW:	
    69                           ; 1 bytes @ 0x0
    70                           
    71  0070                     ??_SPI_RW:	
    72                           ; 1 bytes @ 0x0
    73                           
    74  0070                     ?_WriteEnable:	
    75                           ; 1 bytes @ 0x0
    76                           
    77  0070                     ?_WriteDisable:	
    78                           ; 1 bytes @ 0x0
    79                           
    80  0070                     ?_SPI_ReadStatus:	
    81                           ; 1 bytes @ 0x0
    82                           
    83  0070                     ?_main:	
    84                           ; 1 bytes @ 0x0
    85                           
    86  0070                     SPI_RW@i:	
    87                           ; 1 bytes @ 0x0
    88                           
    89                           
    90                           ; 1 bytes @ 0x0
    91  0070                     	ds	1
    92  0071                     SPI_RW@data:	
    93                           
    94                           ; 1 bytes @ 0x1
    95  0071                     	ds	1
    96  0072                     ??_WriteEnable:	
    97  0072                     ??_WriteDisable:	
    98                           ; 1 bytes @ 0x2
    99                           
   100  0072                     ??_SPI_ReadStatus:	
   101                           ; 1 bytes @ 0x2
   102                           
   103  0072                     SPI_ReadStatus@status:	
   104                           ; 1 bytes @ 0x2
   105                           
   106                           
   107                           ; 1 bytes @ 0x2
   108  0072                     	ds	1
   109  0073                     ?_SPI_Read:	
   110  0073                     ?_SPI_Write:	
   111                           ; 1 bytes @ 0x3
   112                           
   113  0073                     SPI_Read@addr:	
   114                           ; 1 bytes @ 0x3
   115                           
   116  0073                     SPI_Write@addr:	
   117                           ; 2 bytes @ 0x3
   118                           
   119                           
   120                           ; 2 bytes @ 0x3
   121  0073                     	ds	2
   122  0075                     ??_SPI_Read:	
   123  0075                     SPI_Read@spidata:	
   124                           ; 1 bytes @ 0x5
   125                           
   126  0075                     SPI_Write@dat:	
   127                           ; 1 bytes @ 0x5
   128                           
   129                           
   130                           ; 1 bytes @ 0x5
   131  0075                     	ds	1
   132  0076                     ??_SPI_Write:	
   133  0076                     ??_main:	
   134                           ; 1 bytes @ 0x6
   135                           
   136                           
   137                           	psect	maintext
   138  0781                     __pmaintext:	
   139                           ; 1 bytes @ 0x6
   140 ;;
   141 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   142 ;;
   143 ;; *************** function _main *****************
   144 ;; Defined at:
   145 ;;		line 186 in file "test_61f13x_SPI.C"
   146 ;; Parameters:    Size  Location     Type
   147 ;;		None
   148 ;; Auto vars:     Size  Location     Type
   149 ;;		None
   150 ;; Return value:  Size  Location     Type
   151 ;;                  1    wreg      void 
   152 ;; Registers used:
   153 ;;		wreg, status,2, status,0, pclath, cstack
   154 ;; Tracked objects:
   155 ;;		On entry : B00/0
   156 ;;		On exit  : 0/0
   157 ;;		Unchanged: 0/0
   158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   159 ;;      Params:         0       0       0       0
   160 ;;      Locals:         0       0       0       0
   161 ;;      Temps:          0       0       0       0
   162 ;;      Totals:         0       0       0       0
   163 ;;Total ram usage:        0 bytes
   164 ;; Hardware stack levels required when called:    3
   165 ;; This function calls:
   166 ;;		_POWER_INITIAL
   167 ;;		_SPI_Read
   168 ;;		_SPI_Write
   169 ;;		_init_25c64_io
   170 ;; This function is called by:
   171 ;;		Startup code after reset
   172 ;; This function uses a non-reentrant model
   173 ;;
   174                           
   175                           
   176                           ;psect for function _main
   177  0781                     _main:	
   178                           
   179                           ;test_61f13x_SPI.C: 188: POWER_INITIAL();
   180                           
   181                           ;incstack = 0
   182                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   183  0781  118A  276F  118A   	fcall	_POWER_INITIAL
   184                           
   185                           ;test_61f13x_SPI.C: 189: init_25c64_io();
   186  0784  118A  276A  118A   	fcall	_init_25c64_io
   187                           
   188                           ;test_61f13x_SPI.C: 190: SPI_Write(0x0013,0x55);
   189  0787  3013               	movlw	19
   190  0788  00F3               	movwf	SPI_Write@addr
   191  0789  3055               	movlw	85
   192  078A  01F4               	clrf	SPI_Write@addr+1
   193  078B  00F5               	movwf	SPI_Write@dat
   194  078C  118A  27AC  118A   	fcall	_SPI_Write
   195                           
   196                           ;test_61f13x_SPI.C: 191: SPIReadData = SPI_Read(0x0013);
   197  078F  3013               	movlw	19
   198  0790  00F3               	movwf	SPI_Read@addr
   199  0791  01F4               	clrf	SPI_Read@addr+1
   200  0792  118A  2798  118A   	fcall	_SPI_Read
   201  0795  00F6               	movwf	_SPIReadData	;volatile
   202  0796                     l1778:	
   203                           
   204                           ;test_61f13x_SPI.C: 194: {
   205                           ;test_61f13x_SPI.C: 195: __nop();
   206  0796  0000               	nop
   207  0797  2F96               	goto	l1778
   208  0798                     __end_of_main:	
   209                           
   210                           	psect	text1
   211  076A                     __ptext1:	
   212 ;; *************** function _init_25c64_io *****************
   213 ;; Defined at:
   214 ;;		line 61 in file "test_61f13x_SPI.C"
   215 ;; Parameters:    Size  Location     Type
   216 ;;		None
   217 ;; Auto vars:     Size  Location     Type
   218 ;;		None
   219 ;; Return value:  Size  Location     Type
   220 ;;                  1    wreg      void 
   221 ;; Registers used:
   222 ;;		None
   223 ;; Tracked objects:
   224 ;;		On entry : B00/100
   225 ;;		On exit  : B00/0
   226 ;;		Unchanged: 800/0
   227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   228 ;;      Params:         0       0       0       0
   229 ;;      Locals:         0       0       0       0
   230 ;;      Temps:          0       0       0       0
   231 ;;      Totals:         0       0       0       0
   232 ;;Total ram usage:        0 bytes
   233 ;; Hardware stack levels used:    1
   234 ;; This function calls:
   235 ;;		Nothing
   236 ;; This function is called by:
   237 ;;		_main
   238 ;; This function uses a non-reentrant model
   239 ;;
   240                           
   241                           
   242                           ;psect for function _init_25c64_io
   243  076A                     _init_25c64_io:	
   244                           
   245                           ;test_61f13x_SPI.C: 63: PA7 = 1;
   246                           
   247                           ;incstack = 0
   248                           ; Regs used in _init_25c64_io: []
   249  076A  1283               	bcf	3,5	;RP0=0, select bank0
   250  076B  1785               	bsf	5,7	;volatile
   251                           
   252                           ;test_61f13x_SPI.C: 64: PA6 = 0;
   253  076C  1305               	bcf	5,6	;volatile
   254                           
   255                           ;test_61f13x_SPI.C: 65: PA2 = 0;
   256  076D  1105               	bcf	5,2	;volatile
   257  076E  0008               	return
   258  076F                     __end_of_init_25c64_io:	
   259                           
   260                           	psect	text5
   261  0798                     __ptext5:	
   262 ;; *************** function _SPI_Read *****************
   263 ;; Defined at:
   264 ;;		line 149 in file "test_61f13x_SPI.C"
   265 ;; Parameters:    Size  Location     Type
   266 ;;  addr            2    3[COMMON] unsigned int 
   267 ;; Auto vars:     Size  Location     Type
   268 ;;  spidata         1    5[COMMON] unsigned char 
   269 ;; Return value:  Size  Location     Type
   270 ;;                  1    wreg      unsigned char 
   271 ;; Registers used:
   272 ;;		wreg, status,2, status,0, pclath, cstack
   273 ;; Tracked objects:
   274 ;;		On entry : 300/0
   275 ;;		On exit  : 300/0
   276 ;;		Unchanged: 0/0
   277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   278 ;;      Params:         2       0       0       0
   279 ;;      Locals:         1       0       0       0
   280 ;;      Temps:          0       0       0       0
   281 ;;      Totals:         3       0       0       0
   282 ;;Total ram usage:        3 bytes
   283 ;; Hardware stack levels used:    1
   284 ;; Hardware stack levels required when called:    2
   285 ;; This function calls:
   286 ;;		_SPI_RW
   287 ;;		_SPI_ReadStatus
   288 ;; This function is called by:
   289 ;;		_main
   290 ;; This function uses a non-reentrant model
   291 ;;
   292                           
   293                           
   294                           ;psect for function _SPI_Read
   295  0798                     _SPI_Read:	
   296  0798                     l1748:	
   297                           ;test_61f13x_SPI.C: 151: unsigned char spidata;
   298                           ;test_61f13x_SPI.C: 152: while(SPI_ReadStatus()&0x01);
   299                           
   300                           ;incstack = 0
   301                           ; Regs used in _SPI_Read: [wreg+status,2+status,0+pclath+cstack]
   302                           
   303  0798  27E9  118A         	fcall	_SPI_ReadStatus
   304  079A  3901               	andlw	1
   305  079B  1D03               	btfss	3,2
   306  079C  2F98               	goto	l1748
   307                           
   308                           ;test_61f13x_SPI.C: 153: PA7=0;
   309  079D  1385               	bcf	5,7	;volatile
   310                           
   311                           ;test_61f13x_SPI.C: 154: SPI_RW(0x03);
   312  079E  3003               	movlw	3
   313  079F  27C9  118A         	fcall	_SPI_RW
   314                           
   315                           ;test_61f13x_SPI.C: 155: SPI_RW((unsigned char)((addr)>>8));
   316  07A1  0874               	movf	SPI_Read@addr+1,w
   317  07A2  27C9  118A         	fcall	_SPI_RW
   318                           
   319                           ;test_61f13x_SPI.C: 156: SPI_RW((unsigned char)addr);
   320  07A4  0873               	movf	SPI_Read@addr,w
   321  07A5  27C9  118A         	fcall	_SPI_RW
   322                           
   323                           ;test_61f13x_SPI.C: 157: spidata = SPI_RW(0x00);
   324  07A7  3000               	movlw	0
   325  07A8  27C9               	fcall	_SPI_RW
   326  07A9  00F5               	movwf	SPI_Read@spidata
   327                           
   328                           ;test_61f13x_SPI.C: 158: PA7=1;
   329  07AA  1785               	bsf	5,7	;volatile
   330                           
   331                           ;test_61f13x_SPI.C: 159: return spidata;
   332  07AB  0008               	return
   333  07AC                     __end_of_SPI_Read:	
   334  07AC                     __ptext2:	
   335 ;; *************** function _SPI_Write *****************
   336 ;; Defined at:
   337 ;;		line 166 in file "test_61f13x_SPI.C"
   338 ;; Parameters:    Size  Location     Type
   339 ;;  addr            2    3[COMMON] unsigned int 
   340 ;;  dat             1    5[COMMON] unsigned char 
   341 ;; Auto vars:     Size  Location     Type
   342 ;;		None
   343 ;; Return value:  Size  Location     Type
   344 ;;                  1    wreg      void 
   345 ;; Registers used:
   346 ;;		wreg, status,2, status,0, pclath, cstack
   347 ;; Tracked objects:
   348 ;;		On entry : B00/0
   349 ;;		On exit  : 300/0
   350 ;;		Unchanged: 0/0
   351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   352 ;;      Params:         3       0       0       0
   353 ;;      Locals:         0       0       0       0
   354 ;;      Temps:          0       0       0       0
   355 ;;      Totals:         3       0       0       0
   356 ;;Total ram usage:        3 bytes
   357 ;; Hardware stack levels used:    1
   358 ;; Hardware stack levels required when called:    2
   359 ;; This function calls:
   360 ;;		_SPI_RW
   361 ;;		_SPI_ReadStatus
   362 ;;		_WriteDisable
   363 ;;		_WriteEnable
   364 ;; This function is called by:
   365 ;;		_main
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369                           
   370                           ;psect for function _SPI_Write
   371  07AC                     _SPI_Write:	
   372  07AC                     l1760:	
   373                           ;test_61f13x_SPI.C: 168: while(SPI_ReadStatus()&0x01);
   374                           
   375                           ;incstack = 0
   376                           ; Regs used in _SPI_Write: [wreg+status,2+status,0+pclath+cstack]
   377                           
   378  07AC  27E9  118A         	fcall	_SPI_ReadStatus
   379  07AE  3901               	andlw	1
   380  07AF  1D03               	btfss	3,2
   381  07B0  2FAC               	goto	l1760
   382                           
   383                           ;test_61f13x_SPI.C: 169: WriteEnable();
   384  07B1  27F7  118A         	fcall	_WriteEnable
   385                           
   386                           ;test_61f13x_SPI.C: 170: PA7=0;
   387  07B3  1385               	bcf	5,7	;volatile
   388                           
   389                           ;test_61f13x_SPI.C: 171: SPI_RW(0x02);
   390  07B4  3002               	movlw	2
   391  07B5  27C9  118A         	fcall	_SPI_RW
   392                           
   393                           ;test_61f13x_SPI.C: 172: SPI_RW((unsigned char)((addr)>>8));
   394  07B7  0874               	movf	SPI_Write@addr+1,w
   395  07B8  27C9  118A         	fcall	_SPI_RW
   396                           
   397                           ;test_61f13x_SPI.C: 173: SPI_RW((unsigned char)addr);
   398  07BA  0873               	movf	SPI_Write@addr,w
   399  07BB  27C9  118A         	fcall	_SPI_RW
   400                           
   401                           ;test_61f13x_SPI.C: 175: SPI_RW(dat);
   402  07BD  0875               	movf	SPI_Write@dat,w
   403  07BE  27C9  118A         	fcall	_SPI_RW
   404                           
   405                           ;test_61f13x_SPI.C: 176: PA7=1;
   406  07C0  1785               	bsf	5,7	;volatile
   407                           
   408                           ;test_61f13x_SPI.C: 177: WriteDisable();
   409  07C1  27F2  118A         	fcall	_WriteDisable
   410  07C3                     l1768:	
   411                           ;test_61f13x_SPI.C: 178: while(SPI_ReadStatus()&0x01);
   412                           
   413  07C3  27E9  118A         	fcall	_SPI_ReadStatus
   414  07C5  3901               	andlw	1
   415  07C6  1903               	btfsc	3,2
   416  07C7  0008               	return
   417  07C8  2FC3               	goto	l1768
   418  07C9                     __end_of_SPI_Write:	
   419  07C9                     __ptext7:	
   420 ;; *************** function _SPI_RW *****************
   421 ;; Defined at:
   422 ;;		line 73 in file "test_61f13x_SPI.C"
   423 ;; Parameters:    Size  Location     Type
   424 ;;  data            1    wreg     unsigned char 
   425 ;; Auto vars:     Size  Location     Type
   426 ;;  data            1    1[COMMON] unsigned char 
   427 ;;  i               1    0[COMMON] unsigned char 
   428 ;; Return value:  Size  Location     Type
   429 ;;                  1    wreg      unsigned char 
   430 ;; Registers used:
   431 ;;		wreg, status,2, status,0
   432 ;; Tracked objects:
   433 ;;		On entry : 300/0
   434 ;;		On exit  : 300/0
   435 ;;		Unchanged: 0/0
   436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   437 ;;      Params:         0       0       0       0
   438 ;;      Locals:         2       0       0       0
   439 ;;      Temps:          0       0       0       0
   440 ;;      Totals:         2       0       0       0
   441 ;;Total ram usage:        2 bytes
   442 ;; Hardware stack levels used:    1
   443 ;; This function calls:
   444 ;;		Nothing
   445 ;; This function is called by:
   446 ;;		_WriteEnable
   447 ;;		_WriteDisable
   448 ;;		_SPI_ReadStatus
   449 ;;		_SPI_Read
   450 ;;		_SPI_Write
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454                           
   455                           ;psect for function _SPI_RW
   456  07C9                     _SPI_RW:	
   457                           
   458                           ;incstack = 0
   459                           ; Regs used in _SPI_RW: [wreg+status,2+status,0]
   460                           ;SPI_RW@data stored from wreg
   461  07C9  00F1               	movwf	SPI_RW@data
   462                           
   463                           ;test_61f13x_SPI.C: 75: unsigned char i;
   464                           ;test_61f13x_SPI.C: 76: for(i=0;i<8;i++)
   465  07CA  01F0               	clrf	SPI_RW@i
   466  07CB                     l1237:	
   467                           
   468                           ;test_61f13x_SPI.C: 77: {
   469                           ;test_61f13x_SPI.C: 78: if(data&0x80)
   470  07CB  1FF1               	btfss	SPI_RW@data,7
   471  07CC  2FCF               	goto	l1239
   472                           
   473                           ;test_61f13x_SPI.C: 79: PA2 = 1;
   474  07CD  1505               	bsf	5,2	;volatile
   475  07CE  2FD0               	goto	l1240
   476  07CF                     l1239:	
   477                           
   478                           ;test_61f13x_SPI.C: 80: else
   479                           ;test_61f13x_SPI.C: 81: PA2 = 0;
   480  07CF  1105               	bcf	5,2	;volatile
   481  07D0                     l1240:	
   482                           
   483                           ;test_61f13x_SPI.C: 82: __nop();
   484  07D0  0000               	nop
   485                           
   486                           ;test_61f13x_SPI.C: 83: data<<=1;
   487  07D1  1003               	clrc
   488  07D2  0DF1               	rlf	SPI_RW@data,f
   489                           
   490                           ;test_61f13x_SPI.C: 84: PA6 = 1;
   491  07D3  1283               	bcf	3,5	;RP0=0, select bank0
   492  07D4  1303               	bcf	3,6	;RP1=0, select bank0
   493  07D5  1705               	bsf	5,6	;volatile
   494                           
   495                           ;test_61f13x_SPI.C: 85: __nop();
   496  07D6  0000               	nop
   497                           
   498                           ;test_61f13x_SPI.C: 86: if(PA4)
   499  07D7  1283               	bcf	3,5	;RP0=0, select bank0
   500  07D8  1303               	bcf	3,6	;RP1=0, select bank0
   501  07D9  1E05               	btfss	5,4	;volatile
   502  07DA  2FDD               	goto	l1241
   503                           
   504                           ;test_61f13x_SPI.C: 87: data |= 0x01;
   505  07DB  1471               	bsf	SPI_RW@data,0
   506  07DC  2FDE               	goto	l1242
   507  07DD                     l1241:	
   508                           
   509                           ;test_61f13x_SPI.C: 88: else
   510                           ;test_61f13x_SPI.C: 89: data &= 0xFE;
   511  07DD  1071               	bcf	SPI_RW@data,0
   512  07DE                     l1242:	
   513                           
   514                           ;test_61f13x_SPI.C: 90: __nop();
   515  07DE  0000               	nop
   516                           
   517                           ;test_61f13x_SPI.C: 91: PA6 = 0;
   518  07DF  1283               	bcf	3,5	;RP0=0, select bank0
   519  07E0  1303               	bcf	3,6	;RP1=0, select bank0
   520  07E1  1305               	bcf	5,6	;volatile
   521  07E2  3008               	movlw	8
   522  07E3  0AF0               	incf	SPI_RW@i,f
   523  07E4  0270               	subwf	SPI_RW@i,w
   524  07E5  1C03               	skipc
   525  07E6  2FCB               	goto	l1237
   526                           
   527                           ;test_61f13x_SPI.C: 92: }
   528                           ;test_61f13x_SPI.C: 93: return data;
   529  07E7  0871               	movf	SPI_RW@data,w
   530  07E8  0008               	return
   531  07E9                     __end_of_SPI_RW:	
   532  07E9                     __ptext6:	
   533 ;; *************** function _SPI_ReadStatus *****************
   534 ;; Defined at:
   535 ;;		line 121 in file "test_61f13x_SPI.C"
   536 ;; Parameters:    Size  Location     Type
   537 ;;		None
   538 ;; Auto vars:     Size  Location     Type
   539 ;;  status          1    2[COMMON] unsigned char 
   540 ;; Return value:  Size  Location     Type
   541 ;;                  1    wreg      unsigned char 
   542 ;; Registers used:
   543 ;;		wreg, status,2, status,0, pclath, cstack
   544 ;; Tracked objects:
   545 ;;		On entry : 300/0
   546 ;;		On exit  : 300/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   549 ;;      Params:         0       0       0       0
   550 ;;      Locals:         1       0       0       0
   551 ;;      Temps:          0       0       0       0
   552 ;;      Totals:         1       0       0       0
   553 ;;Total ram usage:        1 bytes
   554 ;; Hardware stack levels used:    1
   555 ;; Hardware stack levels required when called:    1
   556 ;; This function calls:
   557 ;;		_SPI_RW
   558 ;; This function is called by:
   559 ;;		_SPI_Read
   560 ;;		_SPI_Write
   561 ;; This function uses a non-reentrant model
   562 ;;
   563                           
   564                           
   565                           ;psect for function _SPI_ReadStatus
   566  07E9                     _SPI_ReadStatus:	
   567                           
   568                           ;test_61f13x_SPI.C: 124: PA7=0;
   569                           
   570                           ;incstack = 0
   571                           ; Regs used in _SPI_ReadStatus: [wreg+status,2+status,0+pclath+cstack]
   572  07E9  1385               	bcf	5,7	;volatile
   573                           
   574                           ;test_61f13x_SPI.C: 125: SPI_RW(0x05);
   575  07EA  3005               	movlw	5
   576  07EB  27C9  118A         	fcall	_SPI_RW
   577                           
   578                           ;test_61f13x_SPI.C: 126: status = SPI_RW(0x00);
   579  07ED  3000               	movlw	0
   580  07EE  27C9               	fcall	_SPI_RW
   581  07EF  00F2               	movwf	SPI_ReadStatus@status
   582                           
   583                           ;test_61f13x_SPI.C: 127: PA7=1;
   584  07F0  1785               	bsf	5,7	;volatile
   585                           
   586                           ;test_61f13x_SPI.C: 128: return status;
   587  07F1  0008               	return
   588  07F2                     __end_of_SPI_ReadStatus:	
   589  07F2                     __ptext4:	
   590 ;; *************** function _WriteDisable *****************
   591 ;; Defined at:
   592 ;;		line 109 in file "test_61f13x_SPI.C"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;		None
   597 ;; Return value:  Size  Location     Type
   598 ;;                  1    wreg      void 
   599 ;; Registers used:
   600 ;;		wreg, status,2, status,0, pclath, cstack
   601 ;; Tracked objects:
   602 ;;		On entry : 300/0
   603 ;;		On exit  : 300/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   606 ;;      Params:         0       0       0       0
   607 ;;      Locals:         0       0       0       0
   608 ;;      Temps:          0       0       0       0
   609 ;;      Totals:         0       0       0       0
   610 ;;Total ram usage:        0 bytes
   611 ;; Hardware stack levels used:    1
   612 ;; Hardware stack levels required when called:    1
   613 ;; This function calls:
   614 ;;		_SPI_RW
   615 ;; This function is called by:
   616 ;;		_SPI_Write
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           
   621                           ;psect for function _WriteDisable
   622  07F2                     _WriteDisable:	
   623                           
   624                           ;test_61f13x_SPI.C: 111: PA7=0;
   625                           
   626                           ;incstack = 0
   627                           ; Regs used in _WriteDisable: [wreg+status,2+status,0+pclath+cstack]
   628  07F2  1385               	bcf	5,7	;volatile
   629                           
   630                           ;test_61f13x_SPI.C: 112: SPI_RW(0x04);
   631  07F3  3004               	movlw	4
   632  07F4  27C9               	fcall	_SPI_RW
   633                           
   634                           ;test_61f13x_SPI.C: 113: PA7=1;
   635  07F5  1785               	bsf	5,7	;volatile
   636  07F6  0008               	return
   637  07F7                     __end_of_WriteDisable:	
   638  07F7                     __ptext3:	
   639 ;; *************** function _WriteEnable *****************
   640 ;; Defined at:
   641 ;;		line 99 in file "test_61f13x_SPI.C"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;		None
   646 ;; Return value:  Size  Location     Type
   647 ;;                  1    wreg      void 
   648 ;; Registers used:
   649 ;;		wreg, status,2, status,0, pclath, cstack
   650 ;; Tracked objects:
   651 ;;		On entry : 300/0
   652 ;;		On exit  : 300/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   655 ;;      Params:         0       0       0       0
   656 ;;      Locals:         0       0       0       0
   657 ;;      Temps:          0       0       0       0
   658 ;;      Totals:         0       0       0       0
   659 ;;Total ram usage:        0 bytes
   660 ;; Hardware stack levels used:    1
   661 ;; Hardware stack levels required when called:    1
   662 ;; This function calls:
   663 ;;		_SPI_RW
   664 ;; This function is called by:
   665 ;;		_SPI_Write
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           
   670                           ;psect for function _WriteEnable
   671  07F7                     _WriteEnable:	
   672                           
   673                           ;test_61f13x_SPI.C: 101: PA7=0;
   674                           
   675                           ;incstack = 0
   676                           ; Regs used in _WriteEnable: [wreg+status,2+status,0+pclath+cstack]
   677  07F7  1385               	bcf	5,7	;volatile
   678                           
   679                           ;test_61f13x_SPI.C: 102: SPI_RW(0x06);
   680  07F8  3006               	movlw	6
   681  07F9  27C9               	fcall	_SPI_RW
   682                           
   683                           ;test_61f13x_SPI.C: 103: PA7=1;
   684  07FA  1785               	bsf	5,7	;volatile
   685  07FB  0008               	return
   686  07FC                     __end_of_WriteEnable:	
   687                           
   688                           	psect	text8
   689  076F                     __ptext8:	
   690 ;; *************** function _POWER_INITIAL *****************
   691 ;; Defined at:
   692 ;;		line 41 in file "test_61f13x_SPI.C"
   693 ;; Parameters:    Size  Location     Type
   694 ;;		None
   695 ;; Auto vars:     Size  Location     Type
   696 ;;		None
   697 ;; Return value:  Size  Location     Type
   698 ;;                  1    wreg      void 
   699 ;; Registers used:
   700 ;;		wreg, status,2
   701 ;; Tracked objects:
   702 ;;		On entry : B00/0
   703 ;;		On exit  : B00/100
   704 ;;		Unchanged: 800/0
   705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   706 ;;      Params:         0       0       0       0
   707 ;;      Locals:         0       0       0       0
   708 ;;      Temps:          0       0       0       0
   709 ;;      Totals:         0       0       0       0
   710 ;;Total ram usage:        0 bytes
   711 ;; Hardware stack levels used:    1
   712 ;; This function calls:
   713 ;;		Nothing
   714 ;; This function is called by:
   715 ;;		_main
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           
   720                           ;psect for function _POWER_INITIAL
   721  076F                     _POWER_INITIAL:	
   722                           
   723                           ;test_61f13x_SPI.C: 43: OSCCON = 0B01110001;
   724                           
   725                           ;incstack = 0
   726                           ; Regs used in _POWER_INITIAL: [wreg+status,2]
   727  076F  3071               	movlw	113
   728  0770  1683               	bsf	3,5	;RP0=1, select bank1
   729  0771  008F               	movwf	15	;volatile
   730                           
   731                           ;test_61f13x_SPI.C: 44: OPTION = 0B00001000;
   732  0772  3008               	movlw	8
   733  0773  0081               	movwf	1	;volatile
   734                           
   735                           ;test_61f13x_SPI.C: 45: INTCON = 0;
   736  0774  018B               	clrf	11	;volatile
   737                           
   738                           ;test_61f13x_SPI.C: 46: PORTA = 0B00000000;
   739  0775  1283               	bcf	3,5	;RP0=0, select bank0
   740  0776  0185               	clrf	5	;volatile
   741                           
   742                           ;test_61f13x_SPI.C: 47: TRISA = 0B00010000;
   743  0777  3010               	movlw	16
   744  0778  1683               	bsf	3,5	;RP0=1, select bank1
   745  0779  0085               	movwf	5	;volatile
   746                           
   747                           ;test_61f13x_SPI.C: 49: PORTC = 0B00000000;
   748  077A  1283               	bcf	3,5	;RP0=0, select bank0
   749  077B  0187               	clrf	7	;volatile
   750                           
   751                           ;test_61f13x_SPI.C: 50: TRISC = 0B00000000;
   752  077C  1683               	bsf	3,5	;RP0=1, select bank1
   753  077D  0187               	clrf	7	;volatile
   754                           
   755                           ;test_61f13x_SPI.C: 52: WPUA = 0B00010000;
   756  077E  0095               	movwf	21	;volatile
   757                           
   758                           ;test_61f13x_SPI.C: 53: WPUC = 0B00000000;
   759  077F  0193               	clrf	19	;volatile
   760  0780  0008               	return
   761  0781                     __end_of_POWER_INITIAL:	
   762  007E                     btemp	set	126	;btemp
   763  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_Read
    _main->_SPI_Write
    _SPI_Write->_SPI_ReadStatus
    _WriteEnable->_SPI_RW
    _WriteDisable->_SPI_RW
    _SPI_Read->_SPI_ReadStatus
    _SPI_ReadStatus->_SPI_RW

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     654
                      _POWER_INITIAL
                           _SPI_Read
                          _SPI_Write
                      _init_25c64_io
 ---------------------------------------------------------------------------------
 (1) _init_25c64_io                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Write                                            3     0      3     408
                                              3 COMMON     3     0      3
                             _SPI_RW
                     _SPI_ReadStatus
                       _WriteDisable
                        _WriteEnable
 ---------------------------------------------------------------------------------
 (2) _WriteEnable                                          0     0      0      60
                             _SPI_RW
 ---------------------------------------------------------------------------------
 (2) _WriteDisable                                         0     0      0      60
                             _SPI_RW
 ---------------------------------------------------------------------------------
 (1) _SPI_Read                                             3     1      2     246
                                              3 COMMON     3     1      2
                             _SPI_RW
                     _SPI_ReadStatus
 ---------------------------------------------------------------------------------
 (2) _SPI_ReadStatus                                       1     1      0      75
                                              2 COMMON     1     1      0
                             _SPI_RW
 ---------------------------------------------------------------------------------
 (3) _SPI_RW                                               2     2      0      60
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _POWER_INITIAL                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _POWER_INITIAL
   _SPI_Read
     _SPI_RW
     _SPI_ReadStatus
       _SPI_RW
   _SPI_Write
     _SPI_RW
     _SPI_ReadStatus
       _SPI_RW
     _WriteDisable
       _SPI_RW
     _WriteEnable
       _SPI_RW
   _init_25c64_io

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       7       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       7      10        0.0%


GNU Macro Assembler for 8 bit devices.     
Symbol Table                                                                                   Thu Nov 11 17:35:25 2021

 __size_of_init_25c64_io 0005     __size_of_WriteEnable 0005                      _PA2 002A  
                    _PA4 002C                      _PA6 002E                      _PA7 002F  
  __size_of_WriteDisable 0005                     l1240 07D0                     l1241 07DD  
                   l1242 07DE                     l1237 07CB                     l1239 07CF  
                   l1760 07AC                     l1748 0798                     l1768 07C3  
                   l1778 0796          SPI_Read@spidata 0075                     _WPUA 0095  
                   _WPUC 0093                     _main 0781                     btemp 007E  
                   start 0000   __end_of_SPI_ReadStatus 07F2             _WriteDisable 07F2  
                  ?_main 0070                    _PORTA 0005                    _PORTC 0007  
                  _TRISA 0085                    _TRISC 0087            _init_25c64_io 076A  
       __end_of_SPI_Read 07AC                    status 0003                    wtemp0 007E  
     __size_of_SPI_Write 001D          ?_SPI_ReadStatus 0070             SPI_Read@addr 0073  
        __initialization 07FC             __end_of_main 0798                   ??_main 0076  
         ?_init_25c64_io 0070                   _INTCON 000B                   _OSCCON 008F  
                 _OPTION 0081                   _SPI_RW 07C9             SPI_Write@dat 0075  
      __end_of_SPI_Write 07C9    __end_of_POWER_INITIAL 0781  __end_of__initialization 07FD  
         __pcstackCOMMON 0070                ?_SPI_Read 0073          ??_init_25c64_io 0070  
                ?_SPI_RW 0070               __pmaintext 0781            ??_WriteEnable 0072  
                SPI_RW@i 0070               ??_SPI_Read 0075         ??_SPI_ReadStatus 0072  
        __size_of_SPI_RW 0020            SPI_Write@addr 0073                  __ptext0 0000  
                __ptext1 076A                  __ptext2 07AC                  __ptext3 07F7  
                __ptext4 07F2                  __ptext5 0798                  __ptext6 07E9  
                __ptext7 07C9                  __ptext8 076F      __end_of_WriteEnable 07FC  
   end_of_initialization 07FD                _SPI_Write 07AC           __end_of_SPI_RW 07E9  
            _WriteEnable 07F7        __size_of_SPI_Read 0014      start_initialization 07FC  
             ?_SPI_Write 0073                 ??_SPI_RW 0070            ?_WriteDisable 0070  
 __size_of_POWER_INITIAL 0012              __pbssCOMMON 0076                ___latbits 0001  
  __end_of_init_25c64_io 076F           ??_WriteDisable 0072     SPI_ReadStatus@status 0072  
            ??_SPI_Write 0076            _POWER_INITIAL 076F                 _SPI_Read 0798  
             SPI_RW@data 0071           ?_POWER_INITIAL 0070  __size_of_SPI_ReadStatus 0009  
           ?_WriteEnable 0070     __end_of_WriteDisable 07F7            __size_of_main 0017  
        ??_POWER_INITIAL 0070              _SPIReadData 0076           _SPI_ReadStatus 07E9  
