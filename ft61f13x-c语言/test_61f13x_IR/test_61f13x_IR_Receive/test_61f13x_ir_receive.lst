

GNU Macro Assembler for 8 bit devices.       
                                                                                               Tue Sep 14 10:40:53 2021

GNU C Code Generator                                                 
     1                           	processor	FT61F13X
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	pa_nodes0,global,class=CODE,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 09/04/2020 
    20                           ; 
    21                           ; SFR Addresses
    22  0000                     
    23                           	psect	idataCOMMON
    24  0000                     __pidataCOMMON:	
    25  000B                     _INTCON	set	11
    26  0007                     _PORTC	set	7
    27  0005                     _PORTA	set	5
    28  0001                     _TMR0	set	1
    29  005F                     _GIE	set	95
    30  005D                     _T0IE	set	93
    31  005B                     _PAIE	set	91
    32  005A                     _T0IF	set	90
    33  0058                     _PAIF	set	88
    34  002C                     _PA4	set	44
    35  002A                     _PA2	set	42
    36  0095                     _WPUA	set	149
    37  0093                     _WPUC	set	147
    38  008F                     _OSCCON	set	143
    39  0087                     _TRISC	set	135
    40  0085                     _TRISA	set	133
    41  0081                     _OPTION	set	129
    42  04B4                     _IOCA4	set	1204
    43  042C                     _TRISA4	set	1068
    44                           
    45                           	psect	cinit
    46  000F                     start_initialization:	
    47                           ; #config settings
    48                           
    49  000F                     __initialization:	
    50                           
    51                           ;initializer for _bitdata
    52  000F  3001               	movlw	1
    53  0010  00FC               	movwf	__pdataCOMMON& (0+127)
    54                           
    55                           ; Clear objects allocated to COMMON
    56  0011  01F0               	clrf	__pbssCOMMON& (0+127)
    57  0012  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
    58  0013  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
    59  0014  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
    60  0015  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
    61  0016  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
    62  0017  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
    63  0018  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
    64  0019  01F8               	clrf	(__pbssCOMMON+8)& (0+127)
    65  001A                     end_of_initialization:	
    66                           ;End of C runtime variable initialization code
    67                           
    68  001A                     __end_of__initialization:	
    69  001A  0183               	clrf	3
    70  001B  118A  2864         	ljmp	_main	;jump to C main() function
    71                           
    72                           	psect	bssCOMMON
    73  0070                     __pbssCOMMON:	
    74  0070                     _IRDataTimer:	
    75  0070                     	ds	4
    76  0074                     _rdata2:	
    77  0074                     	ds	1
    78  0075                     _rdata1:	
    79  0075                     	ds	1
    80  0076                     _ReceiveFinish:	
    81  0076                     	ds	1
    82  0077                     _IRbitTime:	
    83  0077                     	ds	1
    84  0078                     _IRbitNum:	
    85  0078                     	ds	1
    86                           
    87                           	psect	dataCOMMON
    88  007C                     __pdataCOMMON:	
    89  007C                     _bitdata:	
    90  007C                     	ds	1
    91                           
    92                           	psect	cstackCOMMON
    93  0079                     __pcstackCOMMON:	
    94  0079                     ?_POWER_INITIAL:	
    95  0079                     ?_TIMER0_INITIAL:	
    96                           ; 1 bytes @ 0x0
    97                           
    98  0079                     ?_PA_Level_Change_INITIAL:	
    99                           ; 1 bytes @ 0x0
   100                           
   101  0079                     ?_ISR:	
   102                           ; 1 bytes @ 0x0
   103                           
   104  0079                     ??_ISR:	
   105                           ; 1 bytes @ 0x0
   106                           
   107  0079                     ?_main:	
   108                           ; 1 bytes @ 0x0
   109                           
   110                           
   111                           ; 1 bytes @ 0x0
   112  0079                     	ds	3
   113  007C                     ??_POWER_INITIAL:	
   114  007C                     ??_TIMER0_INITIAL:	
   115                           ; 1 bytes @ 0x3
   116                           
   117  007C                     ??_PA_Level_Change_INITIAL:	
   118                           ; 1 bytes @ 0x3
   119                           
   120  007C                     ??_main:	
   121                           ; 1 bytes @ 0x3
   122                           
   123                           
   124                           	psect	maintext
   125  0064                     __pmaintext:	
   126                           ; 1 bytes @ 0x3
   127 ;;
   128 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   129 ;;
   130 ;; *************** function _main *****************
   131 ;; Defined at:
   132 ;;		line 155 in file "test_61f13x_IR_Receive.C"
   133 ;; Parameters:    Size  Location     Type
   134 ;;		None
   135 ;; Auto vars:     Size  Location     Type
   136 ;;		None
   137 ;; Return value:  Size  Location     Type
   138 ;;                  1    wreg      void 
   139 ;; Registers used:
   140 ;;		wreg, status,2, status,0, pclath, cstack
   141 ;; Tracked objects:
   142 ;;		On entry : B00/0
   143 ;;		On exit  : B00/0
   144 ;;		Unchanged: 800/0
   145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   146 ;;      Params:         0       0       0       0
   147 ;;      Locals:         0       0       0       0
   148 ;;      Temps:          0       0       0       0
   149 ;;      Totals:         0       0       0       0
   150 ;;Total ram usage:        0 bytes
   151 ;; Hardware stack levels required when called:    2
   152 ;; This function calls:
   153 ;;		_PA_Level_Change_INITIAL
   154 ;;		_POWER_INITIAL
   155 ;;		_TIMER0_INITIAL
   156 ;; This function is called by:
   157 ;;		Startup code after reset
   158 ;; This function uses a non-reentrant model
   159 ;;
   160                           
   161                           
   162                           ;psect for function _main
   163  0064                     _main:	
   164                           
   165                           ;test_61f13x_IR_Receive.C: 157: POWER_INITIAL();
   166                           
   167                           ;incstack = 0
   168                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   169  0064  118A  2081  118A   	fcall	_POWER_INITIAL
   170                           
   171                           ;test_61f13x_IR_Receive.C: 158: TIMER0_INITIAL();
   172  0067  118A  209B  118A   	fcall	_TIMER0_INITIAL
   173                           
   174                           ;test_61f13x_IR_Receive.C: 159: PA_Level_Change_INITIAL();
   175  006A  118A  2092  118A   	fcall	_PA_Level_Change_INITIAL
   176                           
   177                           ;test_61f13x_IR_Receive.C: 160: GIE = 1;
   178  006D  178B               	bsf	11,7	;volatile
   179  006E                     l1739:	
   180                           
   181                           ;test_61f13x_IR_Receive.C: 162: {
   182                           ;test_61f13x_IR_Receive.C: 163: if(ReceiveFinish==1)
   183  006E  0B76               	decfsz	_ReceiveFinish,w
   184  006F  286E               	goto	l1739
   185                           
   186                           ;test_61f13x_IR_Receive.C: 164: {
   187                           ;test_61f13x_IR_Receive.C: 165: ReceiveFinish = 0;
   188  0070  01F6               	clrf	_ReceiveFinish
   189                           
   190                           ;test_61f13x_IR_Receive.C: 166: rdata1 = 0xFF - IRDataTimer[0];
   191  0071  0970               	comf	_IRDataTimer,w	;volatile
   192  0072  00F5               	movwf	_rdata1	;volatile
   193                           
   194                           ;test_61f13x_IR_Receive.C: 167: rdata2 = 0xFF - IRDataTimer[2];
   195  0073  0972               	comf	_IRDataTimer+2,w	;volatile
   196  0074  00F4               	movwf	_rdata2	;volatile
   197                           
   198                           ;test_61f13x_IR_Receive.C: 168: if((rdata1 == IRDataTimer[1])&&(rdata2 == IRDataTimer[3]
      +                          ))
   199  0075  0871               	movf	_IRDataTimer+1,w	;volatile
   200  0076  0675               	xorwf	_rdata1,w	;volatile
   201  0077  1D03               	skipz
   202  0078  286E               	goto	l1739
   203  0079  0873               	movf	_IRDataTimer+3,w	;volatile
   204  007A  0674               	xorwf	_rdata2,w	;volatile
   205  007B  1D03               	skipz
   206  007C  286E               	goto	l1739
   207                           
   208                           ;test_61f13x_IR_Receive.C: 169: {
   209                           ;test_61f13x_IR_Receive.C: 170: PA2 = ~PA2;
   210  007D  3004               	movlw	4
   211  007E  1283               	bcf	3,5	;RP0=0, select bank0
   212  007F  0685               	xorwf	5,f
   213  0080  286E               	goto	l1739
   214  0081                     __end_of_main:	
   215                           
   216                           	psect	text1
   217  009B                     __ptext1:	
   218 ;; *************** function _TIMER0_INITIAL *****************
   219 ;; Defined at:
   220 ;;		line 69 in file "test_61f13x_IR_Receive.C"
   221 ;; Parameters:    Size  Location     Type
   222 ;;		None
   223 ;; Auto vars:     Size  Location     Type
   224 ;;		None
   225 ;; Return value:  Size  Location     Type
   226 ;;                  1    wreg      void 
   227 ;; Registers used:
   228 ;;		wreg
   229 ;; Tracked objects:
   230 ;;		On entry : B00/100
   231 ;;		On exit  : B00/0
   232 ;;		Unchanged: 800/0
   233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   234 ;;      Params:         0       0       0       0
   235 ;;      Locals:         0       0       0       0
   236 ;;      Temps:          0       0       0       0
   237 ;;      Totals:         0       0       0       0
   238 ;;Total ram usage:        0 bytes
   239 ;; Hardware stack levels used:    1
   240 ;; Hardware stack levels required when called:    1
   241 ;; This function calls:
   242 ;;		Nothing
   243 ;; This function is called by:
   244 ;;		_main
   245 ;; This function uses a non-reentrant model
   246 ;;
   247                           
   248                           
   249                           ;psect for function _TIMER0_INITIAL
   250  009B                     _TIMER0_INITIAL:	
   251                           
   252                           ;test_61f13x_IR_Receive.C: 71: OPTION = 0B00000011;
   253                           
   254                           ;incstack = 0
   255                           ; Regs used in _TIMER0_INITIAL: [wreg]
   256  009B  3003               	movlw	3
   257  009C  0081               	movwf	1	;volatile
   258                           
   259                           ;test_61f13x_IR_Receive.C: 72: TMR0 = 118;
   260  009D  3076               	movlw	118
   261  009E  1283               	bcf	3,5	;RP0=0, select bank0
   262  009F  0081               	movwf	1	;volatile
   263                           
   264                           ;test_61f13x_IR_Receive.C: 73: T0IF = 0;
   265  00A0  110B               	bcf	11,2	;volatile
   266  00A1  0008               	return
   267  00A2                     __end_of_TIMER0_INITIAL:	
   268                           
   269                           	psect	text2
   270  0081                     __ptext2:	
   271 ;; *************** function _POWER_INITIAL *****************
   272 ;; Defined at:
   273 ;;		line 48 in file "test_61f13x_IR_Receive.C"
   274 ;; Parameters:    Size  Location     Type
   275 ;;		None
   276 ;; Auto vars:     Size  Location     Type
   277 ;;		None
   278 ;; Return value:  Size  Location     Type
   279 ;;                  1    wreg      void 
   280 ;; Registers used:
   281 ;;		wreg, status,2
   282 ;; Tracked objects:
   283 ;;		On entry : B00/0
   284 ;;		On exit  : B00/100
   285 ;;		Unchanged: 800/0
   286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   287 ;;      Params:         0       0       0       0
   288 ;;      Locals:         0       0       0       0
   289 ;;      Temps:          0       0       0       0
   290 ;;      Totals:         0       0       0       0
   291 ;;Total ram usage:        0 bytes
   292 ;; Hardware stack levels used:    1
   293 ;; Hardware stack levels required when called:    1
   294 ;; This function calls:
   295 ;;		Nothing
   296 ;; This function is called by:
   297 ;;		_main
   298 ;; This function uses a non-reentrant model
   299 ;;
   300                           
   301                           
   302                           ;psect for function _POWER_INITIAL
   303  0081                     _POWER_INITIAL:	
   304                           
   305                           ;test_61f13x_IR_Receive.C: 50: OSCCON = 0B01110001;
   306                           
   307                           ;incstack = 0
   308                           ; Regs used in _POWER_INITIAL: [wreg+status,2]
   309  0081  3071               	movlw	113
   310  0082  1683               	bsf	3,5	;RP0=1, select bank1
   311  0083  008F               	movwf	15	;volatile
   312                           
   313                           ;test_61f13x_IR_Receive.C: 51: INTCON = 0;
   314  0084  018B               	clrf	11	;volatile
   315                           
   316                           ;test_61f13x_IR_Receive.C: 52: PORTA = 0B00000000;
   317  0085  1283               	bcf	3,5	;RP0=0, select bank0
   318  0086  0185               	clrf	5	;volatile
   319                           
   320                           ;test_61f13x_IR_Receive.C: 53: TRISA = 0B00000000;
   321  0087  1683               	bsf	3,5	;RP0=1, select bank1
   322  0088  0185               	clrf	5	;volatile
   323                           
   324                           ;test_61f13x_IR_Receive.C: 56: PORTC = 0B00000000;
   325  0089  1283               	bcf	3,5	;RP0=0, select bank0
   326  008A  0187               	clrf	7	;volatile
   327                           
   328                           ;test_61f13x_IR_Receive.C: 57: TRISC = 0B00000000;
   329  008B  1683               	bsf	3,5	;RP0=1, select bank1
   330  008C  0187               	clrf	7	;volatile
   331                           
   332                           ;test_61f13x_IR_Receive.C: 59: WPUA = 0B00000000;
   333  008D  0195               	clrf	21	;volatile
   334                           
   335                           ;test_61f13x_IR_Receive.C: 60: WPUC = 0B00000000;
   336  008E  0193               	clrf	19	;volatile
   337                           
   338                           ;test_61f13x_IR_Receive.C: 62: OPTION = 0B00001000;
   339  008F  3008               	movlw	8
   340  0090  0081               	movwf	1	;volatile
   341  0091  0008               	return
   342  0092                     __end_of_POWER_INITIAL:	
   343                           
   344                           	psect	text3
   345  0092                     __ptext3:	
   346 ;; *************** function _PA_Level_Change_INITIAL *****************
   347 ;; Defined at:
   348 ;;		line 81 in file "test_61f13x_IR_Receive.C"
   349 ;; Parameters:    Size  Location     Type
   350 ;;		None
   351 ;; Auto vars:     Size  Location     Type
   352 ;;		None
   353 ;; Return value:  Size  Location     Type
   354 ;;                  1    wreg      void 
   355 ;; Registers used:
   356 ;;		wreg
   357 ;; Tracked objects:
   358 ;;		On entry : B00/0
   359 ;;		On exit  : B00/100
   360 ;;		Unchanged: 800/0
   361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   362 ;;      Params:         0       0       0       0
   363 ;;      Locals:         0       0       0       0
   364 ;;      Temps:          0       0       0       0
   365 ;;      Totals:         0       0       0       0
   366 ;;Total ram usage:        0 bytes
   367 ;; Hardware stack levels used:    1
   368 ;; Hardware stack levels required when called:    1
   369 ;; This function calls:
   370 ;;		Nothing
   371 ;; This function is called by:
   372 ;;		_main
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376                           
   377                           ;psect for function _PA_Level_Change_INITIAL
   378  0092                     _PA_Level_Change_INITIAL:	
   379                           
   380                           ;test_61f13x_IR_Receive.C: 83: TRISA4 =1;
   381                           
   382                           ;incstack = 0
   383                           ; Regs used in _PA_Level_Change_INITIAL: [wreg]
   384  0092  1683               	bsf	3,5	;RP0=1, select bank1
   385  0093  1605               	bsf	5,4	;volatile
   386                           
   387                           ;test_61f13x_IR_Receive.C: 84: ReadAPin = PORTA;
   388  0094  1283               	bcf	3,5	;RP0=0, select bank0
   389  0095  0805               	movf	5,w	;volatile
   390                           
   391                           ;test_61f13x_IR_Receive.C: 85: PAIF =0;
   392  0096  100B               	bcf	11,0	;volatile
   393                           
   394                           ;test_61f13x_IR_Receive.C: 86: IOCA4 =1;
   395  0097  1683               	bsf	3,5	;RP0=1, select bank1
   396  0098  1616               	bsf	22,4	;volatile
   397                           
   398                           ;test_61f13x_IR_Receive.C: 87: PAIE =1;
   399  0099  158B               	bsf	11,3	;volatile
   400  009A  0008               	return
   401  009B                     __end_of_PA_Level_Change_INITIAL:	
   402                           
   403                           	psect	text4
   404  001D                     __ptext4:	
   405 ;; *************** function _ISR *****************
   406 ;; Defined at:
   407 ;;		line 95 in file "test_61f13x_IR_Receive.C"
   408 ;; Parameters:    Size  Location     Type
   409 ;;		None
   410 ;; Auto vars:     Size  Location     Type
   411 ;;		None
   412 ;; Return value:  Size  Location     Type
   413 ;;                  1    wreg      void 
   414 ;; Registers used:
   415 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   416 ;; Tracked objects:
   417 ;;		On entry : 0/0
   418 ;;		On exit  : 0/0
   419 ;;		Unchanged: 0/0
   420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   421 ;;      Params:         0       0       0       0
   422 ;;      Locals:         0       0       0       0
   423 ;;      Temps:          3       0       0       0
   424 ;;      Totals:         3       0       0       0
   425 ;;Total ram usage:        3 bytes
   426 ;; Hardware stack levels used:    1
   427 ;; This function calls:
   428 ;;		Nothing
   429 ;; This function is called by:
   430 ;;		Interrupt level 1
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434                           
   435                           ;psect for function _ISR
   436  001D                     _ISR:	
   437                           
   438                           ;test_61f13x_IR_Receive.C: 99: if(T0IE && T0IF)
   439  001D  1A8B               	btfsc	11,5	;volatile
   440  001E  1D0B               	btfss	11,2	;volatile
   441  001F  282C               	goto	i1l1697
   442                           
   443                           ;test_61f13x_IR_Receive.C: 100: {
   444                           ;test_61f13x_IR_Receive.C: 101: TMR0 = 118;
   445  0020  3076               	movlw	118
   446  0021  1283               	bcf	3,5	;RP0=0, select bank0
   447  0022  1303               	bcf	3,6	;RP1=0, select bank0
   448  0023  0081               	movwf	1	;volatile
   449                           
   450                           ;test_61f13x_IR_Receive.C: 103: T0IF = 0;
   451  0024  110B               	bcf	11,2	;volatile
   452  0025  3033               	movlw	51
   453                           
   454                           ;test_61f13x_IR_Receive.C: 104: IRbitTime++;
   455  0026  0AF7               	incf	_IRbitTime,f
   456                           
   457                           ;test_61f13x_IR_Receive.C: 105: if(IRbitTime > 50)
   458  0027  0277               	subwf	_IRbitTime,w
   459  0028  1C03               	skipc
   460  0029  282C               	goto	i1l1697
   461                           
   462                           ;test_61f13x_IR_Receive.C: 106: {
   463                           ;test_61f13x_IR_Receive.C: 107: T0IE = 0;
   464  002A  128B               	bcf	11,5	;volatile
   465                           
   466                           ;test_61f13x_IR_Receive.C: 108: IRbitTime = 0;
   467  002B  01F7               	clrf	_IRbitTime
   468  002C                     i1l1697:	
   469                           
   470                           ;test_61f13x_IR_Receive.C: 109: }
   471                           ;test_61f13x_IR_Receive.C: 110: }
   472                           ;test_61f13x_IR_Receive.C: 113: if(PAIE && PAIF)
   473  002C  198B               	btfsc	11,3	;volatile
   474  002D  1C0B               	btfss	11,0	;volatile
   475  002E  285B               	goto	i1l1263
   476                           
   477                           ;test_61f13x_IR_Receive.C: 114: {
   478                           ;test_61f13x_IR_Receive.C: 115: ReadAPin = PORTA;
   479  002F  1283               	bcf	3,5	;RP0=0, select bank0
   480  0030  1303               	bcf	3,6	;RP1=0, select bank0
   481  0031  0805               	movf	5,w	;volatile
   482                           
   483                           ;test_61f13x_IR_Receive.C: 116: PAIF = 0;
   484  0032  100B               	bcf	11,0	;volatile
   485                           
   486                           ;test_61f13x_IR_Receive.C: 117: if(PA4 == 0)
   487  0033  1A05               	btfsc	5,4	;volatile
   488  0034  285B               	goto	i1l1263
   489                           
   490                           ;test_61f13x_IR_Receive.C: 118: {
   491                           ;test_61f13x_IR_Receive.C: 119: T0IE = 1;
   492  0035  168B               	bsf	11,5	;volatile
   493                           
   494                           ;test_61f13x_IR_Receive.C: 120: if(IRbitTime > 21)
   495  0036  3016               	movlw	22
   496  0037  0277               	subwf	_IRbitTime,w
   497  0038  1C03               	skipc
   498  0039  2841               	goto	i1l1713
   499                           
   500                           ;test_61f13x_IR_Receive.C: 121: {
   501                           ;test_61f13x_IR_Receive.C: 122: IRDataTimer[0] = 0;
   502  003A  01F0               	clrf	_IRDataTimer	;volatile
   503                           
   504                           ;test_61f13x_IR_Receive.C: 123: IRDataTimer[1] = 0;
   505  003B  01F1               	clrf	_IRDataTimer+1	;volatile
   506                           
   507                           ;test_61f13x_IR_Receive.C: 124: IRDataTimer[2] = 0;
   508  003C  01F2               	clrf	_IRDataTimer+2	;volatile
   509                           
   510                           ;test_61f13x_IR_Receive.C: 125: IRDataTimer[3] = 0;
   511  003D  01F3               	clrf	_IRDataTimer+3	;volatile
   512                           
   513                           ;test_61f13x_IR_Receive.C: 126: IRbitNum = 0;
   514  003E  01F8               	clrf	_IRbitNum
   515                           
   516                           ;test_61f13x_IR_Receive.C: 127: bitdata = 0x00;
   517  003F  01FC               	clrf	_bitdata
   518                           
   519                           ;test_61f13x_IR_Receive.C: 128: }
   520  0040  284A               	goto	i1l1717
   521  0041                     i1l1713:	
   522                           
   523                           ;test_61f13x_IR_Receive.C: 129: else if(IRbitTime > 3)
   524  0041  3004               	movlw	4
   525  0042  0277               	subwf	_IRbitTime,w
   526  0043  1C03               	skipc
   527  0044  284A               	goto	i1l1717
   528                           
   529                           ;test_61f13x_IR_Receive.C: 130: {
   530                           ;test_61f13x_IR_Receive.C: 131: IRDataTimer[IRbitNum-1] |= bitdata;
   531  0045  0878               	movf	_IRbitNum,w
   532  0046  3E6F               	addlw	(low ((_IRDataTimer| 0+255)))& (0+255)
   533  0047  0084               	movwf	4
   534  0048  087C               	movf	_bitdata,w
   535  0049  0480               	iorwf	0,f
   536  004A                     i1l1717:	
   537                           
   538                           ;test_61f13x_IR_Receive.C: 132: }
   539                           ;test_61f13x_IR_Receive.C: 133: IRbitTime = 0;
   540  004A  01F7               	clrf	_IRbitTime
   541                           
   542                           ;test_61f13x_IR_Receive.C: 134: bitdata<<=1;
   543  004B  1003               	clrc
   544  004C  0DFC               	rlf	_bitdata,f
   545                           
   546                           ;test_61f13x_IR_Receive.C: 135: if(bitdata == 0)
   547  004D  087C               	movf	_bitdata,w
   548  004E  1D03               	btfss	3,2
   549  004F  2853               	goto	i1l1727
   550                           
   551                           ;test_61f13x_IR_Receive.C: 136: {
   552                           ;test_61f13x_IR_Receive.C: 137: bitdata = 0x01;
   553  0050  01FC               	clrf	_bitdata
   554  0051  0AFC               	incf	_bitdata,f
   555                           
   556                           ;test_61f13x_IR_Receive.C: 138: IRbitNum++;
   557  0052  0AF8               	incf	_IRbitNum,f
   558  0053                     i1l1727:	
   559                           
   560                           ;test_61f13x_IR_Receive.C: 139: }
   561                           ;test_61f13x_IR_Receive.C: 140: if(IRbitNum > 4)
   562  0053  3005               	movlw	5
   563  0054  0278               	subwf	_IRbitNum,w
   564  0055  1C03               	skipc
   565  0056  285B               	goto	i1l1263
   566                           
   567                           ;test_61f13x_IR_Receive.C: 141: {
   568                           ;test_61f13x_IR_Receive.C: 142: IRbitNum = 0;
   569  0057  01F8               	clrf	_IRbitNum
   570                           
   571                           ;test_61f13x_IR_Receive.C: 143: T0IE = 0;
   572  0058  128B               	bcf	11,5	;volatile
   573                           
   574                           ;test_61f13x_IR_Receive.C: 144: ReceiveFinish = 1;
   575  0059  01F6               	clrf	_ReceiveFinish
   576  005A  0AF6               	incf	_ReceiveFinish,f
   577  005B                     i1l1263:	
   578  005B  087B               	movf	??_ISR+2,w
   579  005C  008A               	movwf	10
   580  005D  087A               	movf	??_ISR+1,w
   581  005E  0084               	movwf	4
   582  005F  0E79               	swapf	??_ISR^(0+-128),w
   583  0060  0083               	movwf	3
   584  0061  0EFE               	swapf	126,f
   585  0062  0E7E               	swapf	126,w
   586  0063  0009               	retfie
   587  0064                     __end_of_ISR:	
   588  007E                     btemp	set	126	;btemp
   589  007E                     wtemp0	set	126
   590                           
   591                           	psect	intentry
   592  0004                     __pintentry:	
   593                           ;incstack = 0
   594                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0]
   595                           
   596  0004                     interrupt_function:	
   597  007E                     saved_w	set	btemp
   598  0004  00FE               	movwf	btemp
   599  0005  0E03               	swapf	3,w
   600  0006  00F9               	movwf	??_ISR
   601  0007  0804               	movf	4,w
   602  0008  00FA               	movwf	??_ISR+1
   603  0009  080A               	movf	10,w
   604  000A  00FB               	movwf	??_ISR+2
   605  000B  118A  281D         	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
            _PA_Level_Change_INITIAL
                      _POWER_INITIAL
                     _TIMER0_INITIAL
 ---------------------------------------------------------------------------------
 (1) _TIMER0_INITIAL                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POWER_INITIAL                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PA_Level_Change_INITIAL                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PA_Level_Change_INITIAL
   _POWER_INITIAL
   _TIMER0_INITIAL

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       5        0.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      3       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       D      10        0.0%
ABS                  0      0       D       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


GNU Macro Assembler for 8 bit devices.     
Symbol Table                                                                                   Tue Sep 14 10:40:53 2021

                             _GIE 005F                               _PA2 002A                               _PA4 002C  
                             _ISR 001D                               fsr0 0004                               indf 0000  
                            ?_ISR 0079                              l1739 006E                              _T0IE 005D  
                            _T0IF 005A                              _PAIE 005B                              _PAIF 0058  
                            _TMR0 0001                              _WPUA 0095                              _WPUC 0093  
                            _main 0064                              btemp 007E                              start 000D  
                           ??_ISR 0079  __size_of_PA_Level_Change_INITIAL 0009                    _TIMER0_INITIAL 009B  
                           ?_main 0079                             _IOCA4 04B4                             _PORTA 0005  
                           _PORTC 0007                             _TRISA 0085                             _TRISC 0087  
                           pclath 000A                             status 0003                             wtemp0 007E  
                 __initialization 000F                      __end_of_main 0081            __end_of_TIMER0_INITIAL 00A2  
                          ??_main 007C                            i1l1263 005B                            i1l1713 0041  
                          i1l1717 004A                            i1l1727 0053                            i1l1697 002C  
                          _INTCON 000B                            _OSCCON 008F                            _OPTION 0081  
                          _TRISA4 042C                   ?_TIMER0_INITIAL 0079                            _rdata1 0075  
                          _rdata2 0074                      __pdataCOMMON 007C                            saved_w 007E  
           __end_of_POWER_INITIAL 0092           __end_of__initialization 001A                     _ReceiveFinish 0076  
                  __pcstackCOMMON 0079           _PA_Level_Change_INITIAL 0092                        __pmaintext 0064  
                      __pintentry 0004         ??_PA_Level_Change_INITIAL 007C                           _bitdata 007C  
                         __ptext1 009B                           __ptext2 0081                           __ptext3 0092  
                         __ptext4 001D                      __size_of_ISR 0047              end_of_initialization 001A  
                ??_TIMER0_INITIAL 007C                         _IRbitTime 0077                     __pidataCOMMON 0000  
             start_initialization 000F                       __end_of_ISR 0064            __size_of_POWER_INITIAL 0011  
                     __pbssCOMMON 0070                         ___latbits 0001                 interrupt_function 0004  
                   _POWER_INITIAL 0081                          _IRbitNum 0078                    ?_POWER_INITIAL 0079  
        ?_PA_Level_Change_INITIAL 0079                     __size_of_main 001D                       _IRDataTimer 0070  
         __size_of_TIMER0_INITIAL 0007   __end_of_PA_Level_Change_INITIAL 009B                   ??_POWER_INITIAL 007C  
                        intlevel1 0000  
