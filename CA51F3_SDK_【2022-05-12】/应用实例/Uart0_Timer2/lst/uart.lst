C51 COMPILER V9.02   UART                                                                  05/11/2022 23:42:44 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\output\uart.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE source\uart.c OMF2 BROWSE DEBUG PRINT(.\lst\uart.lst) OBJECT(.\output\uart.
                    -obj)

line level    source

   1          #ifndef _UART_C_
   2          #define _UART_C_
   3          #include "include/ca51f_config.h"
   4          #include "include/ca51f3sfr.h"
   5          #include "include/ca51f3xsfr.h"
   6          #include "include/gpiodef_f3.h"
   7          
   8          #include "include/uart.h"
   9          #include <intrins.h>
  10          #include <string.h>
  11          #include <stdarg.h>
  12          #include <stdlib.h>
  13          #include <stdio.h>
  14          #include <absacc.h>
  15          /*********************************************************************************************************
             -************/
  16          /*********************************************************************************************************
             -************/
  17          void Uart0_Initial_Timer2(unsigned long int baudrate)
  18          {
  19   1              unsigned int value_temp;
  20   1      
  21   1              P31F = P31_UART0_RX_SETTING;
  22   1              P30F = P30_UART0_TX_SETTING;
  23   1              
  24   1              uart0_send.head=0;
  25   1              uart0_send.tail=0;
  26   1              uart0_rev.head=0;
  27   1              uart0_rev.tail=0;
  28   1              uart0_tx_flag=0;
  29   1      
  30   1      /*********************************************************************************************************
             -***************/
  31   1      //TIMER2作为UART0的波特率发生器
  32   1              value_temp = 0x10000 - FOSC/(baudrate*32);
  33   1              T2CON =         0x24;
  34   1              T2CH  =         (unsigned char)(value_temp>>8);
  35   1              T2CL  =         (unsigned char)(value_temp);
  36   1              TH2   =         (unsigned char)(value_temp>>8);
  37   1              TL2   =         (unsigned char)(value_temp);;   
  38   1              TR2   =         1;
  39   1      /*********************************************************************************************************
             -***************/      
  40   1      
  41   1              S0CON = 0x50;    
  42   1              ES0 = 1;
  43   1      }
  44          void Uart0_PutChar(unsigned char bdat)
  45          {
  46   1              unsigned char free_space;
  47   1              unsigned char tail_tmp;
  48   1              while(1)
  49   1              {                               
  50   2                      tail_tmp = uart0_send.tail;     
C51 COMPILER V9.02   UART                                                                  05/11/2022 23:42:44 PAGE 2   

  51   2                      if(uart0_send.head < tail_tmp)
  52   2                      {
  53   3                              free_space = tail_tmp - uart0_send.head;
  54   3                      }
  55   2                      else
  56   2                      {
  57   3                              free_space = UART0_TX_BUF_SIZE + tail_tmp - uart0_send.head;
  58   3                      }               
  59   2                      if(free_space > 1)
  60   2                      {
  61   3                              ES0 = 0; 
  62   3                              uart0_send.head++;
  63   3                              uart0_send.head %= UART0_TX_BUF_SIZE;
  64   3                              uart0_tx_buf[uart0_send.head] = bdat;                   
  65   3                              if(!uart0_tx_flag)
  66   3                              {
  67   4                                      ES0 = 1;                                
  68   4                                      uart0_send.tail++;
  69   4                                      uart0_send.tail %= UART0_TX_BUF_SIZE;           
  70   4                                      S0BUF=uart0_tx_buf[uart0_send.tail];                            
  71   4                                      uart0_tx_flag = 1;              
  72   4                              }
  73   3                              else
  74   3                              {
  75   4                                      ES0 = 1;        
  76   4                              }                       
  77   3                              break;
  78   3                      }
  79   2              }
  80   1      }
  81          void UART0_ISR (void) interrupt 4
  82          {       
  83   1              if(RI0)
  84   1              {
  85   2                      RI0 = 0;
  86   2                      uart0_rev.head++;
  87   2                      uart0_rev.head %= UART0_RX_BUF_SIZE;
  88   2                      uart0_rx_buf[uart0_rev.head]=S0BUF;
  89   2              }
  90   1              if(TI0)
  91   1              {       
  92   2                      TI0 = 0;                
  93   2                      if(uart0_send.head!=uart0_send.tail)
  94   2                      {
  95   3                              uart0_send.tail++;
  96   3                              uart0_send.tail %= UART0_TX_BUF_SIZE;
  97   3                              S0BUF=uart0_tx_buf[uart0_send.tail];                            
  98   3                      }
  99   2                      else
 100   2                      {
 101   3                              uart0_tx_flag=0;
 102   3                      }       
 103   2              }
 104   1      }
 105          
 106          void UartPutStr(char *str)
 107          {
 108   1              while(*str)
 109   1              {       
 110   2                      Uart0_PutChar(*str++);
 111   2              }
 112   1      }
C51 COMPILER V9.02   UART                                                                  05/11/2022 23:42:44 PAGE 3   

 113          void uart_printf(char *fmt,...) 
 114          {
 115   1          va_list ap;
 116   1          char xdata string[256];
 117   1          va_start(ap,fmt);
 118   1          vsprintf(string,fmt,ap);
 119   1          UartPutStr(string);
 120   1          va_end(ap);
 121   1      }
 122          /*********************************************************************************************************
             -************/
 123          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    394    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    124     256
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      28
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
