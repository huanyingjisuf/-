C51 COMPILER V9.02   MAIN                                                                  10/23/2021 15:59:32 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\output\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE source\main.c OMF2 BROWSE DEBUG PRINT(.\lst\main.lst) OBJECT(.\output\ma
                    -in.obj)

line level    source

   1          
   2          #ifndef _MAIN_C_
   3          #define _MAIN_C_
   4          /*********************************************************************************************************
             -************/
   5          #include "include/ca51f_config.h"               
   6          #include "include/ca51f3sfr.h"
   7          #include "include/ca51f3xsfr.h"
   8          #include "include/gpiodef_f3.h"
   9          #include "include/system_clock.h"
  10          
  11          #include "include/uart.h"
  12          #include "include/delay.h"
  13          #include <intrins.h>
  14          /*********************************************************************************************************
             -************/
  15          
  16          /*********************************************************************************************************
             -************
  17                  INT2~INT9控制例程
  18          **********************************************************************************************************
             -***********/
  19          enum 
  20          {
  21                  P00_INDEX = 0,
  22                  P01_INDEX = 1,
  23                  P02_INDEX = 2,
  24                  P03_INDEX = 3,
  25                  P04_INDEX = 4,
  26                  P05_INDEX = 5,
  27                  P06_INDEX = 6,
  28                  P07_INDEX = 7,
  29          
  30                  P10_INDEX = 8,
  31                  P11_INDEX = 9,
  32                  P12_INDEX = 10,
  33                  P13_INDEX = 11,
  34                  P14_INDEX = 12,
  35                  P15_INDEX = 13,
  36                  P16_INDEX = 14,
  37                  P17_INDEX = 15,
  38          
  39                  P20_INDEX = 16,
  40                  P21_INDEX = 17,
  41          
  42                  P30_INDEX = 24,
  43                  P31_INDEX = 25,
  44                  P32_INDEX = 26,
  45                  P33_INDEX = 27,
  46                  P34_INDEX = 28,
  47                  P35_INDEX = 29,
  48                  P36_INDEX = 30,
  49                  P37_INDEX = 31,
  50          };
C51 COMPILER V9.02   MAIN                                                                  10/23/2021 15:59:32 PAGE 2   

  51          //EPCON寄存器定义
  52          #define EPPL(N) (N<<7)
  53          
  54          bit int2_flag,int3_flag,int4_flag,int5_flag,int6_flag,int7_flag,int8_flag,int9_flag;
  55          
  56          /*外部中断2控制例程***************************************************************************************
             -*************/
  57          void INT2_Init(void)
  58          {
  59   1              P10F = INPUT;                                                   //P10设置为输入模式
  60   1              INDEX = 0;                                                              //EPCON为带索引的寄存器，设置INDEX=0 对应INT2
  61   1              EPCON = EPPL(1) | P10_INDEX;                    //设置P10为INT2中断引脚，下降沿触发
  62   1              INT2EN = 1;                                                     //外部中断2中断使能
  63   1              EPIE |= 0x01;                                                   //INT2中断使能
  64   1              int2_flag = 0;          
  65   1      }
  66          void INT2_ISR (void) interrupt 7
  67          {
  68   1              if(EPIF & 0x01)
  69   1              {
  70   2                      EPIF = 0x01;
  71   2                      int2_flag = 1;
  72   2              }
  73   1      }
  74          /*********************************************************************************************************
             -************/
  75          
  76          /*外部中断3控制例程***************************************************************************************
             -*************/
  77          void INT3_Init(void)
  78          {
  79   1              P11F = INPUT;                                                   //P11设置为输入模式     
  80   1              INDEX = 1;                                                              //INDEX为带索引的寄存器，设置INDEX=1 对应INT3
  81   1              EPCON = EPPL(1) | P11_INDEX;                    //设置P11为INT3中断引脚，下降沿触发             
  82   1              INT3EN = 1;                                                     //外部中断3中断使能 
  83   1              EPIE |= 0x02;                                                   //INT3中断使能
  84   1              int3_flag = 0;
  85   1      }
  86          void INT3_ISR (void) interrupt 8
  87          {
  88   1              if(EPIF & 0x02)
  89   1              {
  90   2                      EPIF = 0x02;    
  91   2                      int3_flag = 1;
  92   2              }
  93   1      }
  94          /*********************************************************************************************************
             -************/
  95          
  96          /*外部中断4控制例程***************************************************************************************
             -*************/
  97          void INT4_Init(void)
  98          {
  99   1              P12F = INPUT;                                                   //P12设置为输入模式             
 100   1              INDEX = 2;                                                              //INDEX为带索引的寄存器，设置INDEX=2 对应INT4
 101   1              EPCON = EPPL(1) | P12_INDEX;                    //设置P12为INT4中断引脚，下降沿触发                             
 102   1              INT4EN = 1;                                                     //外部中断4中断使能
 103   1              EPIE |= 0x04;                                                   //INT4中断使能
 104   1              int4_flag = 0;
 105   1      }
 106          void INT4_ISR (void) interrupt 9
 107          {
C51 COMPILER V9.02   MAIN                                                                  10/23/2021 15:59:32 PAGE 3   

 108   1              if(EPIF & 0x04)
 109   1              {
 110   2                      EPIF = 0x04;
 111   2                      int4_flag = 1;  
 112   2              }
 113   1      }
 114          /*********************************************************************************************************
             -************/
 115          
 116          /*外部中断5控制例程***************************************************************************************
             -*************/
 117          void INT5_Init(void)
 118          {
 119   1              P13F = INPUT;                                                   //P13设置为输入模式             
 120   1              INDEX = 3;                                                              //INDEX为带索引的寄存器，设置INDEX=3 对应INT5
 121   1              EPCON = EPPL(1) | P13_INDEX;                    //设置P13为INT5中断引脚，下降沿触发             
 122   1              INT5EN = 1;                                                     //外部中断5中断使能 
 123   1              EPIE |= 0x08;                                                   //INT5中断使能
 124   1              int5_flag = 0;
 125   1      }
 126          void INT5_ISR (void) interrupt 10
 127          {
 128   1              if(EPIF & 0x08)
 129   1              {
 130   2                      EPIF = 0x08;    
 131   2                      int5_flag = 1;
 132   2              }
 133   1      }
 134          /*********************************************************************************************************
             -************/
 135          
 136          /*外部中断6控制例程***************************************************************************************
             -*************/
 137          void INT6_Init(void)
 138          {
 139   1              P14F = INPUT;                                                   //P14设置为输入模式                     
 140   1              INDEX = 4;                                                              //INDEX为带索引的寄存器，设置INDEX=4 对应INT6
 141   1              EPCON = EPPL(1) | P14_INDEX;                    //设置P14为INT6中断引脚，下降沿触发             
 142   1              INT6EN = 1;                                                     //外部中断6中断使能
 143   1              EPIE |= 0x10;                                                   //INT6中断使能
 144   1              int6_flag = 0;
 145   1      }
 146          void INT6_ISR (void) interrupt 11
 147          {
 148   1              if(EPIF & 0x10)
 149   1              {
 150   2                      EPIF = 0x10;    
 151   2                      int6_flag = 1;
 152   2              }
 153   1      }
 154          /*********************************************************************************************************
             -************/
 155          
 156          /*外部中断7控制例程***************************************************************************************
             -*************/
 157          void INT7_Init(void)
 158          {
 159   1              P15F = INPUT;                                                   //P15设置为输入模式             
 160   1              INDEX = 5;                                                              //INDEX为带索引的寄存器，设置INDEX=5 对应INT7
 161   1              EPCON = EPPL(1) | P15_INDEX;                    //设置P15为INT7中断引脚，下降沿触发             
 162   1              INT7EN = 1;                                                     //外部中断7中断使能
 163   1              EPIE |= 0x20;                                                   //INT7中断使能
C51 COMPILER V9.02   MAIN                                                                  10/23/2021 15:59:32 PAGE 4   

 164   1              int7_flag = 0;
 165   1      }
 166          void INT7_ISR (void) interrupt 12
 167          {
 168   1              if(EPIF & 0x20)
 169   1              {
 170   2                      EPIF = 0x20;    
 171   2                int7_flag = 1;
 172   2              }
 173   1      }
 174          /*********************************************************************************************************
             -************/
 175          
 176          /*外部中断8控制例程***************************************************************************************
             -*************/
 177          void INT8_Init(void)
 178          {
 179   1              P16F = INPUT;                                                   //P16设置为输入模式                     
 180   1              INDEX = 6;                                                              //INDEX为带索引的寄存器，设置INDEX=6 对应INT8
 181   1              EPCON = EPPL(1) | P16_INDEX;                    //设置P16为INT8中断引脚，下降沿触发             
 182   1              INT8EN = 1;                                                     //外部中断8中断使能
 183   1              EPIE |= 0x40;                                                   //INT8中断使能
 184   1              int8_flag = 0;
 185   1      }
 186          void INT8_ISR (void) interrupt 13
 187          {
 188   1              if(EPIF & 0x40)
 189   1              {
 190   2                      EPIF = 0x40;    
 191   2                      int8_flag = 1;
 192   2              }
 193   1      }
 194          /*********************************************************************************************************
             -************/
 195          
 196          /*外部中断9控制例程***************************************************************************************
             -*************/
 197          void INT9_Init(void)
 198          {
 199   1              P17F = INPUT;                                                   //P17设置为输入模式             
 200   1              INDEX = 7;                                                              //INDEX为带索引的寄存器，设置INDEX=7 对应INT9
 201   1              EPCON = EPPL(1) | P17_INDEX;                    //设置P17为INT9中断引脚，下降沿触发     
 202   1              INT9EN = 1;                                                     //外部中断9中断使能
 203   1              EPIE |= 0x80;                                                   //INT9中断使能
 204   1              int9_flag = 0;
 205   1      }
 206          void INT9_ISR (void) interrupt 14
 207          {
 208   1              if(EPIF & 0x80)
 209   1              {
 210   2                      EPIF = 0x80;    
 211   2                      int9_flag = 1;
 212   2              }
 213   1      }
 214          /*********************************************************************************************************
             -************/
 215          
 216          void main(void)
 217          {
 218   1      #ifdef LVD_RST_ENABLE
 219   1              LVDCON = 0xE1;                                  //设置LVD复位电压为2V
 220   1      #endif
C51 COMPILER V9.02   MAIN                                                                  10/23/2021 15:59:32 PAGE 5   

 221   1      
 222   1      #if (SYSCLK_SRC == PLL)
                      Sys_Clk_Set_PLL(PLL_Multiple);  //设置系统时钟为PLL，PLL_Multiple为倍频倍数
              #endif
 225   1              
 226   1      #ifdef UART0_EN
                      Uart0_Initial(UART0_BAUTRATE);  //初始化UART0
              #endif
 229   1              
 230   1      #ifdef UART1_EN
                      Uart1_Initial(UART1_BAUTRATE);  //初始化UART1
              #endif
 233   1      
 234   1              EA = 1;                                                                                                 //开全局中断
 235   1      
 236   1      #ifdef PRINT_EN
                      uart_printf("INT2 to INT9 Demo Code\n");
              #endif
 239   1              
 240   1              INT2_Init(); 
 241   1      //      INT3_Init();
 242   1      //      INT4_Init();
 243   1      //      INT5_Init();
 244   1      //      INT6_Init();
 245   1      //      INT7_Init();
 246   1      //      INT8_Init();
 247   1      //      INT9_Init();
 248   1      
 249   1      //      P00F = OUTPUT;  
 250   1              while(1)
 251   1              {
 252   2                      if(int2_flag)                                   
 253   2                      {
 254   3                              int2_flag = 0;
 255   3      //              #ifdef PRINT_EN
 256   3      //                      uart_printf("INT2\n");
 257   3      //              #endif
 258   3      //                      P00 = ~P00;
 259   3                      }
 260   2                      if(int3_flag)                           
 261   2                      {
 262   3                              int3_flag = 0;
 263   3                      }
 264   2                      if(int4_flag)                                   
 265   2                      {
 266   3                              int4_flag = 0;
 267   3                      }
 268   2                      if(int5_flag)                           
 269   2                      {
 270   3                              int5_flag = 0;
 271   3                      }
 272   2                      if(int6_flag)                           
 273   2                      {
 274   3                              int6_flag = 0;
 275   3                      }
 276   2                      if(int7_flag)                           
 277   2                      {
 278   3                              int7_flag = 0;
 279   3                      }
 280   2                      if(int8_flag)                           
 281   2                      {
 282   3                              int8_flag = 0;
C51 COMPILER V9.02   MAIN                                                                  10/23/2021 15:59:32 PAGE 6   

 283   3                      }
 284   2                      if(int9_flag)                           
 285   2                      {
 286   3                              int9_flag = 0;
 287   3                      }
 288   2              }
 289   1      }
 290          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    353    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      8    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
