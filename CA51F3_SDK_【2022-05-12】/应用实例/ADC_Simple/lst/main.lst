C51 COMPILER V9.02   MAIN                                                                  05/11/2022 23:20:46 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\output\main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE source\main.c OMF2 BROWSE DEBUG PRINT(.\lst\main.lst) OBJECT(.\output\main.
                    -obj)

line level    source

   1          
   2          #ifndef _MAIN_C_
   3          #define _MAIN_C_
   4          /*********************************************************************************************************
             -************/
   5          #include "include/ca51f_config.h"               
   6          #include "include/ca51f3sfr.h"
   7          #include "include/ca51f3xsfr.h"
   8          #include "include/gpiodef_f3.h"
   9          #include "include/system_clock.h"
  10          
  11          #include "include/uart.h"
  12          #include "include/adc.h"
  13          #include "include/delay.h"
  14          #include <intrins.h>
  15          /*********************************************************************************************************
             -************/
  16          unsigned char read_inner_trim(void)                             
  17          {
  18   1              unsigned char value;
  19   1              FSCMD = 0x80;   
  20   1              PTSH  = 0x00;                           
  21   1              PTSL  = 0x24;      
  22   1              FSCMD = 0x81;                                           
  23   1              value = FSDAT;
  24   1              FSCMD = 0;
  25   1              return (value&0x3F);
  26   1      }
  27          void main(void)
  28          {
  29   1      #ifdef LVD_RST_ENABLE
  30   1              LVDCON = 0xE1;                                  //设置LVD复位电压为2V
  31   1      #endif
  32   1      #if (SYSCLK_SRC == PLL)
                      Sys_Clk_Set_PLL(PLL_Multiple);  //设置系统时钟为PLL，PLL_Multiple为倍频倍数
              #endif
  35   1              
  36   1      #ifdef UART0_EN
                      Uart0_Initial(UART0_BAUTRATE);  //初始化UART0
              #endif
  39   1              
  40   1      #ifdef UART1_EN
                      Uart1_Initial(UART1_BAUTRATE);  //初始化UART1
              #endif
  43   1      
  44   1              EA = 1;                                                                                                 //开全局中断
  45   1      
  46   1      #ifdef PRINT_EN
                      uart_printf("ADC Simple Demo Code\n");
              #endif
  49   1      
  50   1              
  51   1      
  52   1      /**********设置ADC引脚功能*************************************************************/
C51 COMPILER V9.02   MAIN                                                                  05/11/2022 23:20:46 PAGE 2   

  53   1              P10F = P10_ADC0_SETTING;        //设置P10为ADC引脚功能
  54   1      //      P11F = P11_ADC1_SETTING;        //设置P11为ADC引脚功能
  55   1      //      P12F = P12_ADC2_SETTING;        //设置P12为ADC引脚功能
  56   1      //      P13F = P13_ADC3_SETTING;        //设置P13为ADC引脚功能
  57   1      //      P14F = P14_ADC4_SETTING;        //设置P14为ADC引脚功能
  58   1      //      P15F = P15_ADC5_SETTING;        //设置P15为ADC引脚功能
  59   1      //      P16F = P16_ADC6_SETTING;        //设置P16为ADC引脚功能
  60   1      //      P17F = P17_ADC7_SETTING;        //设置P17为ADC引脚功能
  61   1              
  62   1      //              P10F = P10_ADC_VREF_SETTING;    //如果ADC参考电压选择为外部参考电压，需要设置P10为外部参考电压引脚，并且
             -ADC0通道不能使用。
  63   1      /***************************************************************************************/
  64   1              
  65   1      
  66   1      /**********初始化ADC寄存器（设置ADC时钟、选择ADC参考电压、设置ADC运放、加载内部1.5V校准值）***********/
  67   1      //      ADCON = AST(0) | ADIE(0) | HTME(7) | VSEL(ADC_REF_INNER);               //设置ADC参考电压为内部1.5V
  68   1              ADCON = AST(0) | ADIE(0) | HTME(7) | VSEL(ADC_REF_VDD);                 //设置ADC参考电压为VDD
  69   1      //      ADCON = AST(0) | ADIE(0) | HTME(7) | VSEL(ADC_REF_Outer);               //设置ADC参考电压为外部参考电压
  70   1              
  71   1              ADCFGH = AOPS(NO_AMP) | VTRIM(read_inner_trim());                               //加载内部1.5V校准值
  72   1      /**************************************************************************************************/
  73   1      
  74   1      
  75   1      /**********设置ADC通道和时钟分频*********************************************************************/
  76   1              ADCFGL = ACKD(7) | ADCHS(ADC_CH0);      //选择ADC0通道
  77   1      //      ADCFGL = ACKD(7) | ADCHS(ADC_CH1);      //选择ADC1通道
  78   1      //      ADCFGL = ACKD(7) | ADCHS(ADC_CH2);      //选择ADC2通道
  79   1      //      ADCFGL = ACKD(7) | ADCHS(ADC_CH3);      //选择ADC3通道
  80   1      //      ADCFGL = ACKD(7) | ADCHS(ADC_CH4);      //选择ADC4通道
  81   1      //      ADCFGL = ACKD(7) | ADCHS(ADC_CH5);      //选择ADC5通道
  82   1      //      ADCFGL = ACKD(7) | ADCHS(ADC_CH6);      //选择ADC6通道
  83   1      //      ADCFGL = ACKD(7) | ADCHS(ADC_CH7);      //选择ADC7通道
  84   1      /**************************************************************************************************/
  85   1      
  86   1      
  87   1              while(1)
  88   1              {
  89   2                      unsigned int AD_Value;
  90   2                      ADCON |= AST(1);                                                                        //启动ADC转换
  91   2                      while(!(ADCON & ADIF));                                                         //等待ADC转换完成
  92   2                      ADCON |= ADIF;                                                                          //清除ADC中断标志
  93   2                      AD_Value = ADCDH*256 + ADCDL;                                           //读取AD值
  94   2                      AD_Value >>= 4;         
  95   2      #ifdef PRINT_EN
                              uart_printf ("ADC Value = 0x%x\n",AD_Value);            //打印AD值
              #endif          
  98   2                      Delay_ms(100);
  99   2              }
 100   1      }
 101          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    110    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
C51 COMPILER V9.02   MAIN                                                                  05/11/2022 23:20:46 PAGE 3   

   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
