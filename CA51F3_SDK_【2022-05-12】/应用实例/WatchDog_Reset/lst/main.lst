C51 COMPILER V9.02   MAIN                                                                  05/11/2022 23:43:53 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\output\main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE source\main.c OMF2 BROWSE DEBUG PRINT(.\lst\main.lst) OBJECT(.\output\main.
                    -obj)

line level    source

   1          
   2          #ifndef _MAIN_C_
   3          #define _MAIN_C_
   4          /*********************************************************************************************************
             -************/
   5          #include "include/ca51f_config.h"               
   6          #include "include/ca51f3sfr.h"
   7          #include "include/ca51f3xsfr.h"
   8          #include "include/gpiodef_f3.h"
   9          #include "include/system_clock.h"
  10          
  11          #include "include/wdt.h"
  12          #include "include/uart.h"
  13          #include "include/delay.h"
  14          #include <intrins.h>
  15          /*********************************************************************************************************
             -************/
  16          bit WdtIntEvFlag;
  17          void WDT_ISR (void) interrupt 12 
  18          {
  19   1              if(WDFLG & WDIF)
  20   1              {
  21   2                      WDFLG = 0xA5;;
  22   2                      WdtIntEvFlag = 1;
  23   2              }       
  24   1      }
  25          void main(void)
  26          {       
  27   1      #if (SYSCLK_SRC == PLL)
                      Sys_Clk_Set_PLL(PLL_Multiple);  //设置系统时钟为PLL，PLL_Multiple为倍频倍数
              #endif
  30   1              
  31   1      #ifdef UART0_EN
                      Uart0_Initial(UART0_BAUTRATE);  //初始化UART0
              #endif
  34   1              
  35   1      #ifdef UART1_EN
                      Uart1_Initial(UART1_BAUTRATE);  //初始化UART1
              #endif
  38   1      
  39   1              EA = 1;                                                                                                 //开全局中断
  40   1      
  41   1      #ifdef PRINT_EN
                      uart_printf("Watch dog reset mode Demo code!\n");       
              #endif
  44   1      
  45   1      /***************************看门狗阈值设置计算公式如下****************************
  46   1      看门狗触发时间 = (WDVTH * 800H+7FFH) * clock cycle
  47   1      当看门狗时钟为3.6864M时,时间覆盖范围为0.56ms--36s
  48   1      *********************************************************************************/
  49   1      
  50   1      //看门狗时钟源为IRCH(内部高速时钟)      
  51   1              WDCON  = WDTS(WDTS_IRCH) | WDRE(WDRE_reset);    //设置看门狗时钟源为IRCH，模式为中断模式
  52   1              WDVTHH = 0x07;                                                                  //看门狗中断阈值高八位设置 当前值为1s
C51 COMPILER V9.02   MAIN                                                                  05/11/2022 23:43:53 PAGE 2   

  53   1              WDVTHL = 0x08;                                                                  //看门狗中断阈值低八位设置
  54   1      
  55   1      //看门狗时钟源为XOSCL
  56   1      //      P32F = P32_XOSC_IN_SETTING;                                             //设置P32为晶振引脚
  57   1      //      P33F = P33_XOSC_OUT_SETTING;                                    //设置P33为晶振引脚
  58   1      //      CKCON |= XLCKE;                                                                 //使能XSOCL
  59   1      //      while(!(CKCON & XLSTA));                                                //等待XSOCL稳定
  60   1      //      WDCON  = WDTS(WDTS_XOSCL) | WDRE(WDRE_reset);   //设置看门狗时钟源为XOSCL，模式为中断模式
  61   1      //      WDVTHH = 0;                                                                             //看门狗中断阈值高八位设置 当前值为1s
  62   1      //      WDVTHL = 0x0f;                                                                  //看门狗中断阈值低八位设置
  63   1      
  64   1      //看门狗时钟源为IRCL
  65   1      //      CKCON |= ILCKE;                                                                 //使能IRCL
  66   1      //      WDCON  = WDTS(WDTS_IRCL) | WDRE(WDRE_reset);    //设置看门狗时钟源为ILCKE，模式为中断模式
  67   1      //      WDVTHH = 0;                                                                             //看门狗中断阈值高八位设置 当前值为1s   
  68   1      //      WDVTHL = 0x0f;                                                                  //看门狗中断阈值低八位设置
  69   1      
  70   1              WDFLG = 0xA5;   
  71   1              while(1)
  72   1              {
  73   2      //              WDFLG = 0xA5;   
  74   2              }
  75   1      }
  76          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     34    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
