C51 COMPILER V9.02   MAIN                                                                  11/21/2021 20:40:51 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\output\main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE source\main.c OMF2 BROWSE DEBUG PRINT(.\lst\main.lst) OBJECT(.\output\main.
                    -obj)

line level    source

   1          
   2          #ifndef _MAIN_C_
   3          #define _MAIN_C_
   4          /*********************************************************************************************************
             -************/
   5          #include "include/ca51f_config.h"               
   6          #include "include/ca51f3sfr.h"
   7          #include "include/ca51f3xsfr.h"
   8          #include "include/gpiodef_f3.h"
   9          #include "include/system_clock.h"
  10          
  11          #include "include/uart.h"
  12          #include "include/pwm.h"
  13          #include "include/delay.h"
  14          #include <intrins.h>
  15          /*********************************************************************************************************
             -************
  16                  本例程设置PWM0、PWM1、PWM2、PWM3输出频率为30KHZ、占空比50%的PWM信号
  17          
  18                  备注：
  19                  1、PWM有多种时钟源可以选择，时钟源是以两路PWM为单位进行设置的，
  20                  分别是：PWM0 和 PWM1、PWM2 和 PWM3、PWM4 和 PWM5，也就是说，每
  21                  组PWM的时钟源是共同设置的，时钟源通过 PWM0、PWM2、PWM4对应的控
  22                  制寄存器 PWMCON 的PWMCKS来选择。
  23          
  24                  2、PWMCON、PWMCFG、PWMDIVH、PWMDIVL、PWMDUTH、PWMDUTL、PWMCMAX等
  25                  寄存器是带索引的寄存器，设置带索引的寄存器前先设置INDEX寄存器，
  26                  具体操作请参考下面的例子
  27          **********************************************************************************************************
             -***********/
  28          #define PWMDIV_V                                (3686400/30000)         //当PWM时钟为其他时钟频率时，需相应修改参数
  29          #define PWMDUT_V                                (PWMDIV_V/2)                    //占空比为50%
  30          
  31          void main(void)
  32          {
  33   1      #ifdef LVD_RST_ENABLE
  34   1              LVDCON = 0xE1;                                  //设置LVD复位电压为2V
  35   1      #endif
  36   1      
  37   1      #if (SYSCLK_SRC == PLL)
                      Sys_Clk_Set_PLL(PLL_Multiple);  //设置系统时钟为PLL，PLL_Multiple为倍频倍数
              #endif
  40   1              
  41   1      #ifdef UART0_EN
                      Uart0_Initial(UART0_BAUTRATE);  //初始化UART0
              #endif
  44   1              
  45   1      #ifdef UART1_EN
                      Uart1_Initial(UART1_BAUTRATE);  //初始化UART1
              #endif
  48   1      
  49   1              EA = 1;                                                 //开全局中断
  50   1      
  51   1      #ifdef PRINT_EN
C51 COMPILER V9.02   MAIN                                                                  11/21/2021 20:40:51 PAGE 2   

                      uart_printf("PWM Simple Demo Code\n");
              #endif
  54   1      
  55   1              
  56   1              CKCON |= IHCKE;                         //打开IRCH时钟
  57   1      //      CKCON |= ILCKE;                         //打开IRCL时钟
  58   1      //      CKCON |= TFCKE;                         //打开TFRC时钟
  59   1      
  60   1      //      GPIO_Init(P32F,P32_XOSC_IN_SETTING);
  61   1      //      GPIO_Init(P33F,P33_XOSC_OUT_SETTING);
  62   1      //      CKCON |= XLCKE;
  63   1      //      while(!(CKCON & XLSTA));
  64   1      //      CKSEL = (CKSEL&0xF8) | CKSEL_XOSCL;             //打开XSOCL时钟
  65   1      
  66   1      //      PLLCON = PLLON(1) | MULFT(7);
  67   1      //      while(!(PLLCON & PLSTA));
  68   1      //      CKSEL = (CKSEL&0xF8) | CKSEL_PLL;               //打开PLL时钟
  69   1      
  70   1      /*********************************************************************************************************
             -************/        
  71   1              P15F = P15_PWM0_SETTING;                                                                //设置P15为PWM引脚功能
  72   1              P16F = P16_PWM1_SETTING;                                                                //设置P16为PWM引脚功能
  73   1      
  74   1              INDEX = PWM_CH0;                                                                                                        //设置INDEX值对应PWM0
  75   1              PWMCON = TIE(0) | ZIE(0) | PIE(0) | NIE(0) | MS(0) | CKS_IH ;           //设置PWM时钟源为IRCH  
  76   1      //      PWMCON = TIE(0) | ZIE(0) | PIE(0) | NIE(0) | MS(0) | CKS_IL ;           //设置PWM时钟源为IRCL
  77   1      //      PWMCON = TIE(0) | ZIE(0) | PIE(0) | NIE(0) | MS(0) | CKS_XL ;           //设置PWM时钟源为XOSCL  
  78   1      //      PWMCON = TIE(0) | ZIE(0) | PIE(0) | NIE(0) | MS(0) | CKS_TF ;           //设置PWM时钟源为TFRC 
  79   1      //      PWMCON = TIE(0) | ZIE(0) | PIE(0) | NIE(0) | MS(0) | CKS_PLL ;          //设置PWM时钟源为PLL  
  80   1              PWMCFG = TOG(0) | 0;                                                                                                                                                                                            
  81   1              
  82   1              //设置PWMDIV、PWMDUT
  83   1              PWMDIVH = (unsigned char)(PWMDIV_V>>8);                 
  84   1              PWMDIVL = (unsigned char)(PWMDIV_V);                    
  85   1              PWMDUTH = (unsigned char)(PWMDUT_V>>8);         
  86   1              PWMDUTL = (unsigned char)(PWMDUT_V);    
  87   1      
  88   1              INDEX = PWM_CH1;
  89   1              PWMCON = TIE(0) | ZIE(0) | PIE(0) | NIE(0) | MS(0) | MOD(0);            
  90   1              PWMCFG = TOG(0) | 0;
  91   1              //设置PWMDIV、PWMDUT
  92   1              PWMDIVH = (unsigned char)(PWMDIV_V>>8);                 
  93   1              PWMDIVL = (unsigned char)(PWMDIV_V);                    
  94   1              PWMDUTH = (unsigned char)(PWMDUT_V>>8);         
  95   1              PWMDUTL = (unsigned char)(PWMDUT_V);    
  96   1      /*********************************************************************************************************
             -************/        
  97   1              P35F = P35_PWM2_SETTING;                                                                //设置P35为PWM引脚功能
  98   1              P34F = P34_PWM3_SETTING;                                                                //设置P34为PWM引脚功能
  99   1      
 100   1              INDEX = PWM_CH2;                                                                                                        //设置INDEX值对应PWM0
 101   1              PWMCON = TIE(0) | ZIE(0) | PIE(0) | NIE(0) | MS(0) | CKS_IH ;           //设置PWM时钟源为IRCH  
 102   1      //      PWMCON = TIE(0) | ZIE(0) | PIE(0) | NIE(0) | MS(0) | CKS_IL ;           //设置PWM时钟源为IRCL
 103   1      //      PWMCON = TIE(0) | ZIE(0) | PIE(0) | NIE(0) | MS(0) | CKS_XL ;           //设置PWM时钟源为XOSCL  
 104   1      //      PWMCON = TIE(0) | ZIE(0) | PIE(0) | NIE(0) | MS(0) | CKS_TF ;           //设置PWM时钟源为TFRC 
 105   1      //      PWMCON = TIE(0) | ZIE(0) | PIE(0) | NIE(0) | MS(0) | CKS_PLL;           //设置PWM时钟源为PLL  
 106   1              PWMCFG = TOG(0) | 0;                                                                                                                                                                                            
 107   1              
 108   1              //设置PWMDIV、PWMDUT
 109   1              PWMDIVH = (unsigned char)(PWMDIV_V>>8);                 
 110   1              PWMDIVL = (unsigned char)(PWMDIV_V);                    
 111   1              PWMDUTH = (unsigned char)(PWMDUT_V>>8);         
C51 COMPILER V9.02   MAIN                                                                  11/21/2021 20:40:51 PAGE 3   

 112   1              PWMDUTL = (unsigned char)(PWMDUT_V);            
 113   1      
 114   1              INDEX = PWM_CH3;
 115   1              PWMCON = TIE(0) | ZIE(0) | PIE(0) | NIE(0) | MS(0) | MOD(0);            
 116   1              PWMCFG = TOG(0) | 0;
 117   1              //设置PWMDIV、PWMDUT
 118   1              PWMDIVH = (unsigned char)(PWMDIV_V>>8);                 
 119   1              PWMDIVL = (unsigned char)(PWMDIV_V);                    
 120   1              PWMDUTH = (unsigned char)(PWMDUT_V>>8);         
 121   1              PWMDUTL = (unsigned char)(PWMDUT_V);    
 122   1      /*********************************************************************************************************
             -************/
 123   1      
 124   1              PWMUPD = (1<<PWM_CH0)|(1<<PWM_CH1)|(1<<PWM_CH2)|(1<<PWM_CH3);           //PWMDIV、PWMDUT更新使能
 125   1              while(PWMUPD);                                                                                                          //等待更新完成
 126   1              PWMEN = (1<<PWM_CH0)|(1<<PWM_CH1)|(1<<PWM_CH2)|(1<<PWM_CH3);            //PWM0、PWM1、PWM2、PWM3使能
 127   1              
 128   1              while(1)
 129   1              {
 130   2              }
 131   1      }
 132          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    109    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
